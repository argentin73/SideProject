{"version":3,"sources":["themes/mixins/index.js","themes/theme.js","components/Meta.js","assets/images/bucket.png","constants/key.constant.js","constants/color.constant.js","components/dialog/InsolvencyDialog.js","utils.js","components/dialog/OrderDateDiffErrorDialog.js","components/dialog/NoRedirectionDateDialog.js","components/dialog/NoStartDateDialog.js","components/dialog/CarecaseDialog.js","screens/LandingScreen.js","components/OrderSteps.js","components/HelpPanel.js","components/dialog/ParcelsDialog.js","components/dialog/InfopostDialog.js","components/dialog/NoticeOfRelocate.js","screens/ReceiverScreen.js","components/layout/Footer.js","assets/images/logo.png","components/layout/Header.js","components/dialog/NoParcelOrInfopostForOverseasDialog.js","components/dialog/ReasonMoveOrAbsenceForOverseasDialog.js","screens/AddressScreen.js","screens/SummaryScreen.js","constants/order.constant.js","actions/order.action.js","assets/images/payap1.png","assets/images/stripe.png","assets/images/visa.svg","assets/images/sofort.svg","assets/images/klarna.svg","assets/images/giropay.svg","components/PaymentGateway.js","screens/PaymentScreen.js","screens/PaymentSuccessScreen.js","components/Loader.js","components/Stripe/CheckoutForm.js","screens/CheckoutScreen.js","screens/ImprintScreen.js","screens/DataPrivacyScreen.js","screens/RecallScreen.js","screens/AgbScreen.js","components/Paypal/CheckoutForm.js","screens/PaypalScreen.js","App.js","store.js","reducers/order.reducer.js","index.js"],"names":["textOverflowEllipse","whiteSpace","overflow","textOverflow","breadcrumbs","marginTop","paddingTop","paddingBottom","justifyContent","textAlign","maxWidth","theme","createTheme","typography","fontFamily","join","mixins","customize","flexMixin","alignItems","flexDirection","flexWrap","display","centerFlex","flexFlow","textClamp","lineClamp","WebkitBoxOrient","WebkitLineClamp","breakpoints","keys","values","xs","sm","md","lg","xl","Meta","title","description","keywords","Helmet","name","content","CUSTOMER_TYPE_PRIVATE","CUSTOMER_TYPE_BUSINESS","ORDER_REASON_MOVE","ORDER_REASON_ABSENCE_VACATION","ORDER_REASON_CARE_CASE","ORDER_REASON_DEATH","ORDER_REASON_INSOLVENCY","ORDER_TIME_IMMEDIATE","ORDER_TIME_LATER","PAYMENT_6_MONTHS","PAYMENT_SERVICE_PAYPAL","SALUTATION_MR","SALUTATION_MRS","SALUTATION_DIVERS","SELECTED","NOT_SELECTED","ORDER_INFO","OTHER_SERVICES","private","business","private_6_url","private_12_url","business_6_url","business_12_url","COLOR_PRIMARY","COLOR_PRIMARY_DARK","COLOR_WHITE","wrapWithBold","props","style","fontWeight","InsolvencyDialog","openModal","handleCloseModal","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","component","Typography","DialogActions","Button","onClick","margin","autoFocus","getXAfterDate","date","days","years","setFullYear","getFullYear","setDate","getDate","dd","String","padStart","mm","getMonth","yyyy","getDaysBetweenDates","date_1","date_2","difference","getTime","Math","ceil","getCustomerType","key","formatter","Intl","NumberFormat","currency","get","object","default_value","result","OrderDateDiffErrorDialog","deliverAgainDate","laterStartTime","isBefore","Date","NoRedicrectionDateDialog","NoStartDateDialog","CarecaseDialog","useStyles","makeStyles","breadcrumbsContainer","boxContainer","position","padding","height","down","boxShadow","bucketWrapper","bucket","width","modal","top","left","transform","backgroundColor","palette","background","paper","border","form","marginBottom","PrimaryRadio","withStyles","root","color","checked","Radio","LandingScreen","history","classes","methods","useForm","shouldUnregister","handleSubmit","control","setValue","customerTypeDefault","orderReasonDefault","orderTimeDefault","laterStartTimeDefault","deliverAgainDateDefault","localData","localStorage","getItem","console","log","JSON","parse","customer_type","order_reason","order_time","later_start_time","deliver_again_date","useState","openInsolvencyModal","setOpenInsolvencyModal","openDateDiffModal","setDateDiffModal","openNoRedirectionDateModal","setNoRedirectionDateModal","openNoStartDateModal","setNoStartDateModal","openCarecaseModal","setCarecaseModal","stateLaterStartTime","setLaterStartTime","stateDeliverAgainDate","setDeliverAgainDate","deliverAgainDateShow","setDeliverAgainDateShow","laterStartTimeShow","setLaterStartTimeShow","privateReasons","useMemo","label","businessReasons","reasons","setReasons","orderTimes","handleOrderReasonClick","Container","Grid","container","className","Box","Paper","elevation","square","spacing","item","src","alt","variant","gutterBottom","Divider","onSubmit","data","isModal","length","setItem","stringify","push","defaultValue","render","field","value","onChange","error","fieldState","FormControl","fullWidth","RadioGroup","e","v","handleCustomerTypeChange","FormControlLabel","map","reason","i","handleOrderTimeClick","time","TextField","type","InputLabelProps","shrink","InputProps","inputProps","min","max","paddingLeft","paddingRight","mt","NoRedirectionDateDialog","stepper","default","OrderSteps","step","links","isXsmall","useMediaQuery","Stepper","activeStep","orientation","alternativeLabel","Step","StepLabel","Link","RouterLink","to","HelpPanel","ParcelsDialog","handleAcceptModal","handleRejectModal","wrapListItem","ListItem","ListItemIcon","ListItemText","primary","InfopostDialog","List","dense","NoticeOfRelocateDialog","chips","chip","multiClear","Input","borderColor","input","borderRadius","common","white","fontSize","transition","transitions","create","alpha","main","InputBase","PrimaryCheckBox","Checkbox","getMultipleSelectStyles","allNames","indexOf","fontWeightRegular","fontWeightMedium","ReceiverScreen","useTheme","focused","setFocused","openParcelsModal","setParcelsModal","openInfopostModal","setInfopostModal","openNoticeOfRelocation","setNoticeOfRelocation","salutationDefault","representativeSalutationDefault","nameFirstDefault","nameLastDefault","representativeNameFirstDefault","representativeNameLastDefault","emailDefault","phoneNumberDefault","companyNameDefault","noticeOfRelocationDefault","parcelShipmentsDefault","dhlINFOPOSTDefault","optionalNameModeDefault","optionalNamesIdxDefault","optionalNamesDefault","additionalServicies","salutation","representativeSalutation","nameFirst","nameLast","representativeNameFirst","representativeNameLast","email","phone_number","notice_of_relocation","parcel_shipments","dhl_infopost","company_name","other_service","forEach","additional_recipients","idx","otherServices","setOtherServices","setNoticeOfRelocatioin","parcelAccepted","setParcelAccepted","setDhlINFOPOST","optionalNameMode","setOptionalNameMode","optionalIdx","setOptionalIdx","optionalNames","setOptionalNames","useEffect","handleParcelsCheckBox","target","Breadcrumbs","other_price","find","service","full_name","representative_full_name","InputLabel","htmlFor","placeholder","onFocus","FormHelperText","message","rules","required","NativeSelect","minHeight","cursor","first","last","arr","handleOptionalFirstChange","handleOptionalLastChange","splice","parseInt","pattern","country","localization","de","inputStyle","formattedValue","FormLabel","preventDefault","Select","multiple","evt","renderValue","selected","Chip","MenuItem","IconButton","pt","marginLeft","borderLeft","sx","NoticeOfRelocate","borderTop","box","copyright","flexGrow","btnGroup","Footer","header","logoContainer","logoWrapper","logo","Header","AppBar","Toolbar","NoParcelOrInfopostForOverseasDialog","ReasonMoveOrAbsenceForOverseasDialog","AddressScreen","hiddenKeys","new_country","newCountry","setNewCountry","address_supplement","oldSupplement","setOldSupplement","address_additional_pobox","oldAdditionalMailBox","setOldAdditionalMailBox","new_address_supplement","newSupplement","setNewSupplement","new_address_additional_pobox","newAdditionalMailBox","setNewAdditionalMailBox","openNoParcelModal","setNoParcelModal","openWrongReasonModal","setWrongReasonModal","countryForModal","setCountryForModal","checkPosalCode","validator","isPostalCode","checkPosalCodeWithNewCountry","countryCode","lookup","byCountry","internet","isFloatLocales","checkPoBox","Object","new_countryCode","address","addressStreet","addressHouse","addressZipCode","addressCity","new_address","newAddressStreet","newAddressHouse","newAddressZipCode","newAddressCity","validate","onInput","replace","toString","address_additional_zipcode","address_additional_city","disabled","whitelist","new_address_additional_zipcode","new_address_additional_city","SummaryScreen","oldTwoShowMode","newTwoShowMode","getOrderReason","marginRight","CREATE_PAYMENT_REQUEST","CREATE_PAYMENT_SUCCESS","CREATE_PAYMENT_FAIL","CREATE_PAYMENT_RESET","ORDER_PLACE_REQUEST","ORDER_PLACE_SUCCESS","ORDER_PLACE_FAIL","ORDER_PLACE_RESET","INVOICE_REQUEST","INVOICE_SUCCESS","INVOICE_FAIL","INVOICE_RESET","INIT_PAYPAL_REQUEST","INIT_PAYPAL_SUCCESS","INIT_PAYPAL_FAIL","INIT_PAYPAL_RESET","axios","defaults","withCredentials","xsrfHeaderName","xsrfCookieName","logoButton","logoPaypal","maxHeight","logoVisa","logoSofort","logoKlarna","logoGiropay","logoStripe","PaymentGateway","paymentService","setPaymentService","method","setMethod","Tabs","newMethod","scrollButtons","TabIndicatorProps","Tab","icon","PaypalImage","SofortSvg","GiropaySvg","KlarnaSvg","VisaSvg","PaymentScreen","dispatch","useDispatch","paymentMethod","setPaymentMethod","price6Month","price12Month","orderData","payment_service","product_name","product_price","base_price","round","delivery_status","payload","response","config","headers","post","format","divide","PaymentSuccessScreen","location","paths","pathname","split","invoiceId","pop","useSelector","state","invoice","isSuccess","loading","invoiceData","cookies","document","cookie","eqPos","substr","deleteAllCookies","animationEnd","now","startVelocity","spread","ticks","zIndex","randomInRange","random","interval","setInterval","timeLeft","clearInterval","particleCount","confetti","assign","origin","x","y","shootFireworks","finalizeInvoice","clear","Loader","my","CircularProgress","defaultProps","CheckoutForm","stripe","useStripe","elements","useElements","setMessage","isLoading","setIsLoading","myInvoideId","setMyInvoiceId","order","processOrder","confirmParams","return_url","pb","stripePromise","loadStripe","betas","apiVersion","CheckoutScreen","clientSecret","setClientSecret","options","appearance","variables","colorPrimary","bold","ImprintScreen","DataPrivacyScreen","RecallScreen","AgbScreen","PaypalButtonsPanel","useHistory","usePayPalScriptReducer","isPending","createOrder","actions","then","onApprove","capture","details","payer","given_name","onCancel","onError","err","resolve","layout","tagline","shape","initialOptions","client_id","client_token","PaypalScreen","paypalClient","paypalClientData","minWidth","App","smooth","right","bottom","path","exact","reducers","combineReducers","payment","action","paymentSession","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","ThemeProvider","CssBaseline","getElementById"],"mappings":"+NAoBMA,EAAsB,CAC1BC,WAAY,SACZC,SAAU,SACVC,aAAc,YAWVC,EAAc,CAClBC,UAAW,GACXC,WAAY,GACZC,cAAe,GACf,uBAAwB,CACtBC,eAAgB,UAElB,4BAA6B,CAC3BH,UAAW,GACX,uBAAuB,aACrBI,UAAW,SACXC,SAAU,SACPV,KCrCHW,EAAQC,YAAY,CACxBC,WAAY,CACVC,WAAY,CAAC,+BAA+BC,KAAK,MAEnDC,OAAQ,CACNC,UAAW,CACTC,UDfY,eAChBV,EADgB,uDACC,aACjBW,EAFgB,uDAEH,aACbC,EAHgB,uDAGA,MAChBC,EAJgB,uDAIL,SAJK,MAKZ,CACJC,QAAS,OACTF,gBACAZ,iBACAW,aACAE,aCMIE,WDHa,eAACC,EAAD,uDAAY,aAAZ,MAA8B,CAC/CF,QAAS,OACTE,WACAhB,eAAgB,SAChBW,WAAY,WCARM,UDSY,SAACC,GAAD,MAAgB,CAChCJ,QAAS,cACTK,gBAAiB,WACjBzB,SAAU,SACVC,aAAc,WACdyB,gBAAiBF,ICbb1B,sBACAI,gBAGJyB,YAAa,CACXC,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BC,OAAQ,CACNC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,SAKKzB,I,oLCrBA0B,EAVF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAChC,OACI,eAACC,EAAA,EAAD,WACI,gCAAQH,IACR,sBAAMI,KAAK,cAAcC,QAASJ,IAClC,sBAAMG,KAAK,UAAUC,QAASH,QCR3B,MAA0B,mC,OCA5BI,EAAwB,SACxBC,EAAyB,UAEzBC,EAAoB,QACpBC,EAAgC,uBAChCC,EAAyB,iBACzBC,EAAqB,aACrBC,EAA0B,YAE1BC,EAAuB,8BACvBC,EAAmB,6BAEnBC,EAAmB,IAQnBC,EAAyB,SAGzBC,EAAgB,OAChBC,EAAiB,OACjBC,EAAoB,SAEpBC,EAAW,gBACXC,EAAe,sBAEfC,GAAa,aAyBbC,GAAiB,CAC1B,CACInB,KAAM,kBAEV,CACIA,KAAM,UAEV,CACIA,KAAM,kBAEV,CACIA,KAAM,qCAEV,CACIA,KAAM,6BAEV,CACIA,KAAM,qBACNoB,QAAS,KACTC,SAAU,KACVC,cAAe,iCACfC,eAAgB,iCAChBC,eAAgB,iCAChBC,gBAAiB,kCAErB,CACIzB,KAAM,gBAEV,CACIA,KAAM,qBAEV,CACIA,KAAM,aAEV,CACIA,KAAM,+BAEV,CACIA,KAAM,SAEV,CACIA,KAAM,aAEV,CACIA,KAAM,OAEV,CACIA,KAAM,8BACNoB,QAAS,KACTC,SAAU,KACVC,cAAe,iCACfC,eAAgB,iCAChBC,eAAgB,iCAChBC,gBAAiB,kCAErB,CACIzB,KAAM,sBAEV,CACIA,KAAM,qBAEV,CACIA,KAAM,oBAEV,CACIA,KAAM,mCACNoB,QAAS,GACTC,SAAU,GACVC,cAAe,iCACfC,eAAgB,iCAChBC,eAAgB,iCAChBC,gBAAiB,kCAErB,CACIzB,KAAM,uBACNoB,QAAS,GACTC,SAAU,GACVC,cAAe,iCACfC,eAAgB,iCAChBC,eAAgB,iCAChBC,gBAAiB,kCAErB,CACIzB,KAAM,wBAEV,CACIA,KAAM,uBACNoB,QAAS,KACTC,SAAU,KACVC,cAAe,iCACfC,eAAgB,iCAChBC,eAAgB,iCAChBC,gBAAiB,kCAErB,CACIzB,KAAM,wBAEV,CACIA,KAAM,mDACNoB,QAAS,KACTC,SAAU,KACVC,cAAe,iCACfC,eAAgB,iCAChBC,eAAgB,iCAChBC,gBAAiB,kCAErB,CACIzB,KAAM,SAEV,CACIA,KAAM,iCACNoB,QAAS,KACTC,SAAU,KACVC,cAAe,iCACfC,eAAgB,iCAChBC,eAAgB,iCAChBC,gBAAiB,kCAErB,CACIzB,KAAM,2BACNoB,QAAS,GACTC,SAAU,GACVC,cAAe,iCACfC,eAAgB,iCAChBC,eAAgB,iCAChBC,gBAAiB,mCCnLZC,GAAgB,UAChBC,GAAqB,UAKrBC,GAAc,O,kDCJrBC,GAAe,SAACC,GAClB,OAAO,sBAAMC,MAAO,CAACC,WAAY,QAA1B,SACFF,KA+BMG,GA3BU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBACnC,OACI,eAACC,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,+BAEL,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,SACI,eAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,2EACmEd,GAAa,uBADhF,6EAC4KA,GAAa,SADzL,kDAKR,cAACgB,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8B,UCEHC,GAAgB,SAACC,EAAMC,GAAqB,IAAfC,EAAc,uDAAN,EAC9CF,EAAKG,YAAYH,EAAKI,cAAgBF,GACtCF,EAAKK,QAAQL,EAAKM,UAAYL,GAE9B,IAAIM,EAAKC,OAAOR,EAAKM,WAAWG,SAAS,EAAG,KACxCC,EAAKF,OAAOR,EAAKW,WAAa,GAAGF,SAAS,EAAG,KAC7CG,EAAOZ,EAAKI,cAEhB,OAAOQ,EAAO,IAAMF,EAAK,IAAMH,GAGtBM,GAAsB,SAACC,EAAQC,GACxC,IAAIC,EAAaF,EAAOG,UAAYF,EAAOE,UAE3C,OADgBC,KAAKC,KAAKH,EAAU,QAI3BI,GAAkB,SAACC,GAC5B,OAAOA,GACH,KAAKtE,EACD,MAAO,SACX,KAAKC,EACD,MAAO,kBAIf,MAAO,IAiCEsE,GAAY,IAAIC,KAAKC,aAAa,QAAS,CACpD5C,MAAO,WACP6C,SAAU,QAgFDC,GAAM,SAACC,EAAQN,EAAKO,GAC7B,IAAIC,EAASF,EAAON,GACpB,MAA0B,qBAAXQ,EAA0BA,EAASD,GC3HvCE,GA9CkB,SAAC,GAAuE,IAArE/C,EAAoE,EAApEA,UAAWC,EAAyD,EAAzDA,iBAAkB+C,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,eAEzEC,EADWpB,GAAoB,IAAIqB,KAAKH,GAAmB,IAAIG,KAAKF,KAC7C,EAE7B,OACI,eAAC/C,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,wCAEL,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,SACKyC,EACG,cAACxC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,+CACiCwC,EADjC,oDACwFD,EADxF,kIAKA,qCACI,cAACtC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,mJACkIO,GAAc,IAAImC,KAAKF,GAAiB,OAE1K,cAACvC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,wEAGA,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,uKAQhB,cAACE,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8BCZDqC,GA3BkB,SAAC,GAAqC,IAAnCpD,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBAC3C,OACI,eAACC,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,wCAEL,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,SACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,4EAKR,cAACE,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8BCUDsC,GA3BW,SAAC,GAAqC,IAAnCrD,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBACpC,OACI,eAACC,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,wCAEL,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,SACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,6GAC4FO,GAAc,IAAImC,KAAQ,UAI9H,cAACxC,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8BCUDuC,GA9BQ,SAAC,GAAqC,IAAnCtD,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBACjC,OACI,eAACC,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,oCAEL,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,UACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,2LAGA,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,+RAKR,cAACE,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8BCKVwC,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BkI,aAAa,yBACTC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAFhD,gBAGRsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,aAGf7F,QAAS,CACP6F,QAAS,GACTG,UAAW,kCAEbC,cAAe,CACXtH,QAAS,OACTd,eAAgB,SAChBW,WAAY,UAEhB0H,OAAQ,CACJC,MAAO,OACPL,OAAQ,QAEZM,MAAO,CACHR,SAAU,WACVS,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXJ,MAAO,IACPH,UAAW,GACXQ,gBAAiBxI,EAAMyI,QAAQC,WAAWC,MAC1CC,OAAQ,iBACRf,QAAS,IAGbgB,KAAM,CACJ,QAAS,CACPC,aAAc,SAKhBC,GAAeC,YAAW,CAC9BC,KAAM,CACJC,MAAOxF,GACP,YAAa,CACXwF,MAAOxF,KAGXyF,QAAS,IAPUH,EAQlB,SAACnF,GAAD,OAAW,cAACuF,EAAA,EAAD,aAAOF,MAAM,WAAcrF,OA8Z1BwF,GA5ZO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACfC,EAAU/B,KACVgC,EAAUC,YAAQ,CAAEC,kBAAkB,IACpCC,EAAoCH,EAApCG,aAAcC,EAAsBJ,EAAtBI,QAASC,EAAaL,EAAbK,SAE3BC,EAAsB7H,EACtB8H,EAAqB5H,EACrB6H,EAAmBxH,EACnByH,EAAwBhF,GAAc,IAAImC,KAAQ,GAClD8C,EAA0B,GAG1BC,EAAYC,aAAaC,QAAQpH,IACrCqH,QAAQC,IAAI,QAASJ,GACjBA,KACAA,EAAYK,KAAKC,MAAMN,IACTO,gBACVZ,EAAsBK,EAAUO,eAEhCP,EAAUQ,eACVZ,EAAqBI,EAAUQ,cAE/BR,EAAUS,aACVZ,EAAmBG,EAAUS,YAE7BT,EAAUU,mBACVZ,EAAwBE,EAAUU,kBAElCV,EAAUW,qBACVZ,EAA0BC,EAAUW,qBAK5C,MAAsDC,oBAAS,GAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAAgEJ,oBAAS,GAAzE,mBAAOK,EAAP,KAAmCC,EAAnC,KACA,EAAoDN,oBAAS,GAA7D,mBAAOO,GAAP,KAA6BC,GAA7B,KACA,GAA8CR,oBAAS,GAAvD,qBAAOS,GAAP,MAA0BC,GAA1B,MACA,GAAiDV,mBAAS9F,GAAc,IAAImC,KAAQ,IAApF,qBAAOsE,GAAP,MAA4BC,GAA5B,MACA,GAAqDZ,mBAAS,IAA9D,qBAAOa,GAAP,MAA8BC,GAA9B,MACA,GAAwDd,sBAASZ,IAAaA,EAAUW,oBAAsBX,EAAUQ,eAAiBvI,IAAzI,qBAAO0J,GAAP,MAA6BC,GAA7B,MACA,GAAoDhB,sBAASZ,IAAaA,EAAUU,kBAAoBV,EAAUS,aAAenI,IAAjI,qBAAOuJ,GAAP,MAA2BC,GAA3B,MACMC,GAAiBC,mBAAQ,iBAAM,CACjC,CAAE5F,IAAKpE,EAAmBiK,MAAO,SACjC,CAAE7F,IAAKnE,EAA+BgK,MAAO,wBAC7C,CAAE7F,IAAKlE,EAAwB+J,MAAO,kBACtC,CAAE7F,IAAKjE,EAAoB8J,MAAO,iBAAgB,IAChDC,GAAkBF,mBAAQ,iBAAM,CAClC,CAAE5F,IAAKpE,EAAmBiK,MAAO,SACjC,CAAE7F,IAAKnE,EAA+BgK,MAAO,wBAC7C,CAAE7F,IAAKhE,EAAyB6J,MAAO,gBAAe,IAC1D,GAA8BrB,mBAASZ,GAAaA,EAAUO,gBAAkBzI,EAAwBiK,GAAiBG,IAAzH,qBAAOC,GAAP,MAAgBC,GAAhB,MACMC,GAAaL,mBAAQ,iBAAM,CAC7B,CAAE5F,IAAK/D,EAAsB4J,MAAO,+BACpC,CAAE7F,IAAK9D,EAAkB2J,MAAO,iCAA6B,IA2B3DK,GAAyB,SAAClG,GAE5B,OAAQA,GACJ,KAAKhE,EACDwJ,IAAwB,GA5BId,GAAuB,GA8BnD,MACJ,KAAK7I,EACD2J,IAAwB,GACxB,MACJ,QACIA,IAAwB,KAkEpC,OACI,eAACW,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,uBACnC,cAACoF,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAGsL,UAAWtD,EAAQtB,cAA7C,SACI,cAAC6E,EAAA,EAAD,UACI,qBAAKM,IAAKlF,EAAQmF,IAAI,GAAGR,UAAWtD,EAAQrB,aAGpD,eAACyE,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACoD,EAAA,EAAD,CAAY2I,QAAQ,KAAMC,cAAY,EAAtC,mCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wDAGA,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,UAAU,GAAIoJ,aAAc,MAE9C,cAAC,IAAD,2BAAkBU,GAAlB,aACI,sBAAMqD,UAAWtD,EAAQV,KAAM4E,SAAU9D,GAtEtD,SAAC+D,GACZ,IAAQ9C,EAAmE8C,EAAnE9C,WAAYD,EAAuD+C,EAAvD/C,aAAcE,EAAyC6C,EAAzC7C,iBAAkBC,EAAuB4C,EAAvB5C,mBAChD6C,GAAU,EAId,GAHArD,QAAQC,IAAImD,GAGR9C,IAAenI,GACiB,IAA5BoI,EAAiB+C,OADzB,CAUA,GAAIjD,IAAiBvI,EAA+B,CAChD,GAAkC,IAA9B0I,EAAmB8C,OAEnB,YApEmCvC,GAA0B,GAuEjE,GAAIP,GAAsBA,EAAmB8C,OAAS,GAAK/C,GAAoBA,EAAiB+C,OAAS,GACjG7H,GAAoB,IAAIqB,KAAK0D,GAAqBD,EAAiB+C,OAAS,EAAI,IAAIxG,KAAKyD,GAAoB,IAAIzD,MAAU,GAK3H,OAHAuE,GAAkBD,IAClBG,GAAoBD,SAzEET,GAAiB,GA+E/CR,IAAiBtI,IA7EcoJ,IAAiB,GA+EhDkC,GAAU,GAGTD,EAAK7C,mBACN6C,EAAK7C,iBAAmB5F,GAAc,IAAImC,KAAQ,IAEtDgD,aAAayD,QAAQ5K,GAAYuH,KAAKsD,UAAUJ,IAE3CC,GACDrE,EAAQyE,KAAK,kBA9FoBxC,IAAoB,MAyHjC,SACI,eAACoB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIQ,KAAK,gBACL6H,QAASA,EACToE,aAAclE,EACdmE,OAAQ,oBAAGC,MAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,SAAyBC,EAA3C,EAA6BC,WAAcD,MAA3C,OACJ,cAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,SAII,cAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAGpJ,MAAO,CAAEpE,UAAW,MAAOoJ,aAAc,SAArE,SACI,eAAC2F,EAAA,EAAD,CAAY,aAAW,gBAAgBlK,GAAG,oBAAoBT,MAAO,CAAErD,cAAc,OAAS2N,SAAU,SAACM,EAAGC,IA3HnI,SAACA,GAE1BpC,GADAoC,IAAM1M,EACKiK,GAEAG,IAEfxC,EAAS,eAAgB1H,GACzB0H,EAAS,aAAcrH,GACvByJ,IAAsB,GACtBF,IAAwB,GAkHgJ6C,CAAyBD,GAAIP,EAASM,EAAGC,IAAOR,MAAOA,EAA3K,UACA,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACwN,EAAA,EAAD,CAAkBV,MAAOlM,EAAuB2H,QAAS,cAACb,GAAD,IAAkBqD,MAAM,gCAErF,cAACO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACwN,EAAA,EAAD,CAAkBV,MAAOjM,EAAwB0H,QAAS,cAACb,GAAD,IAAkBqD,MAAM,gDAQ1G,cAACO,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIQ,KAAK,eACL6H,QAASA,EACToE,aAAcjE,EACdkE,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,SAA0BC,EAA7C,EAA+BC,WAAcD,MAA7C,OACJ,cAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,SACI,eAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAGpJ,MAAO,CAAEpE,UAAW,MAAOoJ,aAAc,SAArE,UACI,cAACgE,EAAA,EAAD,CAAKnM,QAAS,CAAEU,GAAI,QAASC,GAAI,OAAQC,GAAI,QAA7C,SACI,cAACiM,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,UAAU,GAAIoJ,aAAc,QAElD,cAAC2F,EAAA,EAAD,CAAY,aAAW,eAAelK,GAAG,mBAAmBT,MAAO,CAAErD,cAAc,OAAS2N,SAAU,SAACM,EAAGC,GAAOlC,GAAuBkC,GAAIP,EAASM,EAAGC,IAAKR,MAAOA,EAApK,SACK7B,GAAQwC,KAAI,SAACC,EAAQC,GAAT,OACT,cAACrC,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACwN,EAAA,EAAD,CAAkBV,MAAOY,EAAOxI,IAAKqD,QAAS,cAACb,GAAD,IAAkBqD,MAAO2C,EAAO3C,SAD1D4C,kBAUpD,cAACrC,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIE,GAAI,GAAID,GAAI,GAA/B,SACI,cAACkM,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,UAAW,GAAIoJ,aAAc,QAGnD,eAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAvB,UACI,cAAC,IAAD,CACIQ,KAAK,aACL6H,QAASA,EACToE,aAAchE,EACdiE,OAAQ,oBAAGC,MAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,SAAyBC,EAA3C,EAA6BC,WAAcD,MAA3C,OACJ,cAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,SACI,cAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAGpJ,MAAO,CAAEpE,UAAW,MAAOoJ,aAAc,OAArE,SACI,cAAC2F,EAAA,EAAD,CAAY,aAAW,aAAalK,GAAG,iBAAiBT,MAAO,CAAErD,cAAc,OAAS2N,SAAU,SAACM,EAAGC,IAjJjI,SAACpI,GAE1B,OAAQA,GACJ,KAAK/D,EACDyJ,IAAsB,GACtB,MACJ,KAAKxJ,EACDwJ,IAAsB,IA0ImIgD,CAAqBN,GAAIP,EAASM,EAAGC,IAAOR,MAAOA,EAAhK,SACK3B,GAAWsC,KAAI,SAACI,EAAM3K,GAAP,OACZ,cAACoI,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACwN,EAAA,EAAD,CAAkBV,MAAOe,EAAK3I,IAAKqD,QAAS,cAACb,GAAD,IAAkBqD,MAAO8C,EAAK9C,SADtD7H,eAuDhD,eAACoI,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACKlB,IAAsB,cAACW,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACnB,cAAC,IAAD,CACIU,KAAK,mBACL6H,QAASA,EACToE,aAAc/D,EACdgE,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaF,QAASA,EAAtB,UACI,cAAC1J,EAAA,EAAD,CAAY2I,QAAQ,YAApB,yCACA,cAAC6B,EAAA,EAAD,2BACQjB,GADR,IAEI3J,GAAG,wBACH6K,KAAK,OACLC,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRC,WAAY,CACRC,IAAKxK,GAAc,IAAImC,KAAQ,GAC/BsI,IAAKzK,GAAc,IAAImC,KAAQ,EAAG,KAG1CtD,MAAO,CACH6L,YAAa,EACbC,aAAc,cAOpC9D,IAAwB,cAACa,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACtB,cAAC,IAAD,CACIU,KAAK,qBACL6H,QAASA,EACToE,aAAc9D,EACd+D,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaF,QAASA,EAAtB,UACI,cAAC1J,EAAA,EAAD,CAAY2I,QAAQ,YAApB,iCACA,cAAC6B,EAAA,EAAD,2BACQjB,GADR,IAEI3J,GAAG,qBACH6K,KAAK,OACLC,gBAAiB,CACbC,QAAQ,GAEZC,WAAY,CACRC,WAAY,CACRC,IAAKxK,GAAc,IAAImC,KAAKsE,IAAsB,IAClDgE,IAAKzK,GAAc,IAAImC,KAAKsE,IAAsB,GAAI,KAG9D5H,MAAO,CACH6L,YAAa,EACbC,aAAc,oBAS9C,cAACjD,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACA,cAACwL,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAe,SAASgQ,GAAI,EAAhD,SACI,cAAChL,EAAA,EAAD,CACIuK,KAAK,SACD9B,QAAQ,YACZxJ,MAAO,CACHoF,MAAOvF,GACP6E,gBAAiB9E,IALzB,6CAgBpB,eAACiJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,eAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oKACqJ,sBAAMzJ,MAAO,CAAEC,WAAY,QAA3B,2CADrJ,YADJ,IAGkB,uBACd,eAACY,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4FACgF,sBAAMzJ,MAAO,CAAEC,WAAY,QAA3B,kDADhF,qBAOhB,cAAC,GAAD,CACIE,UAAW+G,EACX9G,iBA9UuB,kBAAM+G,GAAuB,MA+UxD,cAAC,GAAD,CACIhH,UAAWqH,GACXpH,iBA/UwB,kBAAMqH,IAAoB,MAgVtD,cAACuE,GAAD,CACI7L,UAAWmH,EACXlH,iBAhV8B,kBAAMmH,GAA0B,MAiVlE,cAAC,GAAD,CACIpH,UAAWiH,EACXhH,iBAjVqB,kBAAMiH,GAAiB,IAkV5ClE,iBAAkB2E,GAClB1E,eAAgBwE,KACpB,cAAC,GAAD,CACIzH,UAAWuH,GACXtH,iBApVsB,WAC9BuH,IAAiB,GACjBnC,EAAQyE,KAAK,oB,0SCtJfvG,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrCiJ,KAAK,aACDd,MAAO,QACNnI,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BpH,QAAS,OACTd,eAAgB,WAGtBkQ,QAAS,CACLvH,gBAAiBxI,EAAMyI,QAAQC,WAAWsH,QAC1CnI,QAAS,EACT,gDAAiD,CAC/CqB,MAAOxF,SAqCFuM,GAhCI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZ3G,EAAU/B,KAGV2I,EAAQ,CAAC,IAAK,YAAa,WAAY,WAAY,YACnDC,EAAWC,cAAc,SAAArQ,GAAK,OAChCA,EAAMkB,YAAY6G,KAAK,SAG3B,OACI,qBAAK8E,UAAWtD,EAAQN,KAAxB,SACI,cAACqH,GAAA,EAAD,CAASC,WAAYL,EAAMrD,UAAWtD,EAAQwG,QAASS,YAAaJ,EAAW,WAAa,aAAcK,kBAAmBL,EAA7H,SATM,CAAC,uBAAwB,qBAAmB,cAAe,eAAa,mBAUnEtB,KAAI,SAAC1C,EAAO7F,GAAR,OACP,cAACmK,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACMpK,EAAM2J,EACJ,cAACU,GAAA,EAAD,CAAMlM,UAAWmM,IAAYC,GAAIX,EAAM5J,GAAM2C,MAAM,cAAnD,SACKkD,IAGL,mCACCA,OARFA,WChCzBxI,GAAe,SAACC,GAClB,OAAO,sBAAMC,MAAO,CAACC,WAAY,QAA1B,SACFF,KAibMkN,GA7aG,SAAC,GACf,OAD6B,EAAZ7C,OAEb,IAAK,aACD,OACI,qCACI,cAACvJ,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,4FAKZ,IAAK,2BACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,iFAKZ,IAAK,OACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,+BAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mCAC2B3J,GAAa,sBADxC,wHAC2KA,GAAa,qBADxL,wBAGA,cAACe,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6BACqB3J,GAAa,qBADlC,aAC+DA,GAAa,sBAD5E,SACyGA,GAAa,uBADtH,WAGA,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sCAC8B3J,GAAa,yBAD3C,sCAKZ,IAAK,qBACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,iIAKZ,IAAK,QACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,4BAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2DAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,sBAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0DACkD3J,GAAa,kBAD/D,OAGA,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sCAC8B3J,GAAa,yBAD3C,OAGA,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0CACkC3J,GAAa,uBAD/C,OAGA,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8CACsC3J,GAAa,mCADnD,6DAGA,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kCAC0B3J,GAAa,iBADvC,UAKZ,IAAK,cACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,2BAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6EAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,SACK3J,GAAa,4CAElB,cAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,SACK3J,GAAa,sBAElB,cAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,SACK3J,GAAa,sBAElB,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4CACoC3J,GAAa,mCADjD,gEAKZ,IAAK,4BACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,2BAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qGAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,SACK3J,GAAa,4CAElB,cAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,SACK3J,GAAa,sBAElB,cAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,SACK3J,GAAa,sBAElB,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4CACoC3J,GAAa,mCADjD,gEAKZ,IAAK,qBACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,8BAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kKAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mGAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,iGAKZ,IAAK,kBACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,oEAKZ,IAAK,qBACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,sCAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oEACyD3J,GAAa,iBADtE,WAGA,cAACe,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wDAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4GAKZ,IAAK,qBACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kCAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wDACgD3J,GAAa,iBAD7D,WAGA,cAACe,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2BAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4GAKR,IAAK,wBACL,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,sCAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oEACyD3J,GAAa,kBADtE,WAGA,cAACe,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oDAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4GAKZ,IAAK,wBACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kCAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wDACgD3J,GAAa,kBAD7D,WAGA,cAACe,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+BAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4GAKZ,IAAK,OACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,kDAKZ,IAAK,oBACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,6BAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,oEAKZ,IAAK,eACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,6BAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,gDACwC3J,GAAa,iBADrD,6DAKZ,IAAK,kBACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,6BAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,gDACwC3J,GAAa,iBADrD,6DAKZ,IAAK,gBACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kCAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uCAC+B3J,GAAa,sBAD5C,UAC0EA,GAAa,0BADvF,WAGA,cAACe,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,iBACS3J,GAAa,sCADtB,iBACwEA,GAAa,gDADrF,OAGA,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,UACK3J,GAAa,kBADlB,kBACiDA,GAAa,qBAD9D,gBAGA,eAACe,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2BACgB3J,GAAa,yBAD7B,wBAKZ,IAAK,UACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,wBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,iIAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,iCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,kBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,mCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uBAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,kCAC0B3J,GAAa,2BADvC,+DAC4HA,GAAa,oBADzI,SACoKA,GAAa,8BADjL,UAKZ,IAAK,cACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,4BAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,wEAGA,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,oCACyB3J,GAAa,aADtC,QACyDA,GAAa,cADtE,cAKZ,IAAK,gBACD,OACI,qCACI,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,iCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,4NAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,0IAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,iKAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,8IAKZ,IAAK,aACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,wBAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,0HAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,8CAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uVAKZ,IAAK,iBACD,OACI,qCACI,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,sCAGA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,wEAQhB,OACI,8BC9aF3J,GAAe,SAACC,GAClB,OAAO,sBAAMC,MAAO,CAACC,WAAY,QAA1B,SACFF,KA+DMmN,GA3DO,SAAC,GAAyD,IAAvD/M,EAAsD,EAAtDA,UAAWgN,EAA2C,EAA3CA,kBAAmBC,EAAwB,EAAxBA,kBACnD,OACI,eAAC/M,GAAA,EAAD,CACIC,KAAMH,EACNI,QAAS6M,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAAC5M,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,gDAEL,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,UACI,cAACC,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,uBAGA,eAAC5I,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,iBACSd,GAAa,kBADtB,mGAGA,eAACe,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,oBACYd,GAAa,iBADzB,gHAGA,eAACe,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,oFACsEd,GAAa,8BADnF,OAGA,cAACe,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,+CAGA,cAAC5I,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,6HAGA,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,kMAGA,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,kQAMA,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,mKAOR,eAACE,GAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQC,QAASoM,EAAmBpN,MAAO,CAAEiB,OAAQ,GAAKmE,MAAM,YAAhE,sBAGA,cAACrE,EAAA,EAAD,CAAQC,QAASmM,EAAmBnN,MAAO,CAAEiB,OAAQ,GAAKmE,MAAM,UAAUlE,WAAS,EAAnF,8B,4DCxDVmM,GAAe,SAACtN,GAClB,OACI,eAACuN,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACIC,QAAS1N,QAMnBD,GAAe,SAACC,GAClB,OAAO,sBAAMC,MAAO,CAACC,WAAY,QAA1B,SACFF,KA4DM2N,GAxDQ,SAAC,GAAqC,IAAnCvN,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBACjC,OACI,eAACC,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,uCAEL,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,UACI,cAACC,EAAA,EAAD,CAAY2I,QAAQ,KAAKxJ,MAAO,CAAEpE,UAAW,GAA7C,kGAGA,cAACiF,EAAA,EAAD,CAAY2I,QAAQ,YAAYxJ,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAAnE,sGAGA,cAACC,EAAA,EAAD,CAAY2I,QAAQ,YAAYxJ,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAAnE,SACK,0EAEL,cAACC,EAAA,EAAD,CAAY2I,QAAQ,YAAYxJ,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAAnE,SACK,kEAEL,cAACC,EAAA,EAAD,CAAY2I,QAAQ,KAAKxJ,MAAO,CAAEpE,UAAW,GAA7C,wBAGA,eAAC+R,GAAA,EAAD,CAAMC,OAAK,EAAX,UACKP,GAAa,iBACbA,GAAa,YACbA,GAAa,8CACbA,GAAa,mBApBtB,IAqBY,uBACR,eAACxM,EAAA,EAAD,CAAY2I,QAAQ,YAAYxJ,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAAnE,qCAC6Bd,GAAa,mCAD1C,OAGA,eAAC6N,GAAA,EAAD,CAAMC,OAAK,EAAX,UACKP,GAAa,wCACbA,GAAa,6BACbA,GAAa,sDA5BtB,IA6BY,uBACR,eAACxM,EAAA,EAAD,CAAY2I,QAAQ,YAAYxJ,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAAnE,sEAC8Dd,GAAa,aAD3E,qBAC2GA,GAAa,sBADxH,YAKR,cAACgB,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8BCnCD2M,GAjCgB,SAAC,GAAqC,IAAnC1N,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBACzC,OACI,eAACC,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,sBAEL,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,UACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,kKAGA,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,mGAGA,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,mGAKR,cAACE,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8BC2BVwC,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BoJ,KAAM,CACJ,QAAS,CACPC,aAAc,KAGlBnB,aAAa,yBACXC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAF9C,gBAGVsH,QAAS,OACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,UAGb7F,QAAS,CACP6F,QAAS,GACTG,UAAW,kCAEb4J,MAAO,CACHjR,QAAS,OACTD,SAAU,QAEdmR,KAAM,CACF9M,OAAQ,EACRyD,gBAAiB7E,GACjBuF,MAAOxF,IAEXoO,WAAY,CACR5I,MAAOxF,GACPhE,UAAW,QAIbqS,GAAQ/I,cAAW,SAAChJ,GAAD,MAAY,CACjCiJ,KAAM,CACF,YAAa,CACTvJ,UAAWM,EAAMkN,QAAQ,IAE7B,qBAAsB,CAClB8E,YAAa,YAGrBC,MAAO,CACHC,aAAc,EACdtK,SAAU,WACVY,gBAAiBxI,EAAMyI,QAAQ0J,OAAOC,MACtCxJ,OAAQ,oBACRyJ,SAAU,GACVxK,QAAS,YACTyK,WAAYtS,EAAMuS,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACPxK,UAAU,GAAD,OAAKyK,aAAMzS,EAAMyI,QAAQ8I,QAAQmB,KAAM,KAAvC,iBACTV,YAAahS,EAAMyI,QAAQ8I,QAAQmB,UAnBjC1J,CAsBV2J,MAEEC,GAAkB5J,aAAW,CAC/BC,KAAM,CACJC,MAAOzF,GACP,YAAa,CACXyF,MAAOxF,KAGXyF,QAAS,IAPWH,EAQnB,SAACnF,GAAD,OAAW,cAACgP,GAAA,EAAD,aAAU3J,MAAM,WAAcrF,OAExCiP,GAA0B,SAAC/Q,EAAMgR,EAAU/S,GAC7C,MAAO,CACH+D,YACgC,IAA5BgP,EAASC,QAAQjR,GACX/B,EAAME,WAAW+S,kBACjBjT,EAAME,WAAWgT,mBAutBpBC,GAntBQ,SAAC,GAAiB,IAAf7J,EAAc,EAAdA,QAChBC,EAAU/B,KACVxH,EAAQoT,eACR5J,EAAUC,YAAQ,CAAEC,kBAAkB,IACpCC,EAAoCH,EAApCG,aAAcC,EAAsBJ,EAAtBI,QAASC,EAAaL,EAAbK,SAC/B,EAAgCkB,mBAAS,IAAzC,mBAAQsI,EAAR,KAAiBC,EAAjB,KAEA,EAA4CvI,oBAAS,GAArD,mBAAOwI,EAAP,KAAyBC,EAAzB,KACA,EAA8CzI,oBAAS,GAAvD,mBAAO0I,EAAP,KAA0BC,EAA1B,KACA,EAAwD3I,oBAAS,GAAjE,mBAAO4I,EAAP,KAA+BC,EAA/B,KAmBIzJ,EAAYC,aAAaC,QAAQpH,IACjC4Q,EAAoBjR,EACpBkR,EAAkClR,EAClCmR,EAAmB,GACnBC,EAAkB,GAClBC,EAAiC,GACjCC,GAAgC,GAChCC,GAAe,GACfC,GAAqB,GACrBC,GAAqB,GACrBC,IAA4B,EAC5BC,IAAyB,EACzBC,IAAqB,EACrBC,IAA0B,EAC1BC,GAA0B,EAC1BC,GAAuB,GACvBC,GAAsB,GAEtBzK,IACAA,EAAYK,KAAKC,MAAMN,IACRO,eACXpB,EAAQyE,KAAK,KAEb5D,EAAU0K,aACVhB,EAAoB1J,EAAU0K,YAE9B1K,EAAU2K,2BACVhB,EAAkC3J,EAAU2K,0BAE5C3K,EAAU4K,YACVhB,EAAmB5J,EAAU4K,WAE7B5K,EAAU6K,WACVhB,EAAkB7J,EAAU6K,UAE5B7K,EAAU8K,0BACVhB,EAAiC9J,EAAU8K,yBAE3C9K,EAAU+K,yBACVhB,GAAgC/J,EAAU+K,wBAE1C/K,EAAUgL,QACVhB,GAAehK,EAAUgL,OAEzBhL,EAAUiL,eACVhB,GAAqBjK,EAAUiL,cAE/BjL,EAAUkL,uBACVf,GAA4BnK,EAAUkL,sBAEtClL,EAAUmL,mBACVf,GAAyBpK,EAAUmL,kBAEnCnL,EAAUoL,eACVf,GAAqBrK,EAAUoL,cAE/BpL,EAAUqL,eACVnB,GAAqBlK,EAAUqL,cAE/BrL,EAAUsL,eAAiBtL,EAAUsL,cAAc7H,OAAS,GAC5DzD,EAAUsL,cAAcC,SAAQ,SAAA3T,GAAI,OAAI6S,GAAoB7G,KAAKhM,MAEjEoI,EAAUwL,uBAAyBxL,EAAUwL,sBAAsB/H,OAAS,IAC5E6G,IAA0B,EAE1BC,IADAC,GAAuBxK,EAAUwL,uBACchB,GAAqB/G,OAAS,GAAGgI,MAIpFtM,EAAQyE,KAAK,KAGjB,OAA0ChD,mBAAS6J,IAAnD,qBAAOiB,GAAP,MAAsBC,GAAtB,MACA,GAAsD/K,mBAASuJ,IAA/D,qBAA4ByB,IAA5B,aACA,GAA4ChL,mBAASwJ,IAArD,qBAAOyB,GAAP,MAAuBC,GAAvB,MACA,GAAsClL,mBAASyJ,IAA/C,qBAAoB0B,IAApB,aAEA,GAAgDnL,mBAAS0J,IAAzD,qBAAO0B,GAAP,MAAyBC,GAAzB,MACA,GAAsCrL,mBAAS2J,IAA/C,qBAAO2B,GAAP,MAAoBC,GAApB,MACA,GAA0CvL,mBAAS4J,IAAnD,qBAAO4B,GAAP,MAAsBC,GAAtB,MAEAC,qBAAU,WAEuB,IAAzBF,GAAc3I,SACdwI,IAAoB,GACpBE,GAAe,MAGpB,CAACC,KAEJ,IAcMG,GAAwB,SAAChI,GACvBA,EAAEiI,OAAOxN,QA1HoBqK,GAAgB,GA6H7CyC,IAAkB,IA2C1B,OACI,eAACvJ,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,qBAAnC,SACI,eAACiF,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACuV,GAAA,EAAD,CAAa9S,MAAO,CAAEgF,aAAc,MACpC,cAAC,GAAD,CAAYoH,KAAM,SAG1B,cAACpD,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,eAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACoD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SAxCb,yBA2Ca,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,UAAU,GAAIoJ,aAAc,MAE9C,cAAC,IAAD,2BAAkBU,GAAlB,aACI,sBAAMqD,UAAWtD,EAAQV,KAAM4E,SAAU9D,GA3CtD,SAAC+D,IACZvD,EAAS,2BAAQA,GAAcuD,IACrBiI,sBAAV,aAAsCY,IACtCpM,EAAU0M,YAAc,EACxB1M,EAAUsL,cAAgBI,GACtBA,GAAcjI,OAAS,GAEvBiI,GAAc/G,KAAI,SAAC/M,GAEf,OADAoI,EAAU0M,aAAejQ,GAAI1D,GAAe4T,MAAK,SAAAC,GAAO,OAAIA,EAAQhV,OAASA,KAAOoI,EAAUO,gBAAkBzI,EAAwB,UAAY,WAAY,GACzJF,KAKfoI,EAAU6M,UAAV,UAAyBtJ,EAAKmH,WAA9B,YAA4CnH,EAAKqH,UAAjD,YAA8DrH,EAAKsH,UAC/DtH,EAAKuH,0BACL9K,EAAU8M,yBAAV,UAAwCvJ,EAAKoH,yBAA7C,YAAyEpH,EAAKuH,wBAA9E,YAAyGvH,EAAKwH,yBAGlH5K,QAAQC,IAAIJ,GACZC,aAAayD,QAAQ5K,GAAYuH,KAAKsD,UAAU3D,IAChDb,EAAQyE,KAAK,eAsBW,SACI,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACM/C,GAAaA,EAAUO,gBAAkBxI,GACvC,qCAAE,cAACyK,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACF,cAAC,IAAD,CACIU,KAAK,eACL6H,QAASA,EACToE,aAAcqG,GACdpG,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,uBAA3B,2BAGA,cAACpF,GAAD,2BAAW7D,GAAX,IAAkB3J,GAAG,uBAAuB6S,YAAY,mBAAmBC,QAAS,kBAAM/D,EAAW,eAAgB,IACpHjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,qCAIlB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAEjD,cAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAApB,qDAzBJ,OA+BA,cAACX,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,aACL6H,QAASA,EACToE,aAAc6F,EACd5F,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACZ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,sBAA3B,qBAGA,eAACO,GAAA,EAAD,2BACQxJ,GADR,IAEI3J,GAAG,sBACHxC,KAAK,aACL+B,MAAO,CACH6T,UAAW,QAEfN,QAAS,kBAAM/D,EAAWnJ,EAAUO,gBAAkBzI,EAAwB,aAAe,6BAC7FuN,WAAY,CAAE,aAAc,cARhC,UASI,wBAAQrB,MAAOvL,EAAf,SAA+BA,IAC/B,wBAAQuL,MAAOtL,EAAf,SAAgCA,IAChC,wBAAQsL,MAAOrL,EAAf,SAAmCA,gBAKnD,cAAC6J,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,IACvB,cAACqL,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAGjD,cAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,YACL6H,QAASA,EACToE,aAAc+F,EACd9F,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,qBAA3B,wBAGA,cAACpF,GAAD,2BAAW7D,GAAX,IAAkB3J,GAAG,qBAAqB6S,YAAY,UAAUC,QAAS,kBAAM/D,EAAWnJ,EAAUO,gBAAkBzI,EAAwB,OAAS,0BAA0B,IAChLoM,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACLC,SAAU,qCAIpB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,WACL6H,QAASA,EACToE,aAAcgG,EACd/F,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,oBAA3B,yBAGA,cAACpF,GAAD,2BAAW7D,GAAX,IAAkB3J,GAAG,oBAAoB6S,YAAY,WAAWC,QAAS,kBAAM/D,EAAWnJ,EAAUO,gBAAkBzI,EAAwB,OAAS,0BAA0B,IAChLoM,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACLC,SAAU,qCAKnBtN,GAAaA,EAAUO,gBAAkBzI,IAA0BkU,IAAoB,cAACxJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIyC,MAAO,CAAEpE,WAAY,EAAGoJ,cAAe,GAA1D,SACpF,cAACgE,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,WAApC,SACQ,sBAAKiE,MAAO,CACRnD,QAAS,OACTH,WAAY,SACZE,SAAU,OACVkX,OAAQ,UACR1O,MAAOxF,IACRoB,QAAS,WACRsR,IAAoB,GACpBE,GAAe,GACfE,GAAiB,CAAC,CAAEZ,IAAK,EAAGiC,MAAO,GAAIC,KAAM,OATjD,UAWI,cAAC,KAAD,IAAc,+BAAO,kDAKpC3B,IAAoB,qCACjB,cAACxJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,GAAvB,SACI,cAACkM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAEjD,cAACnE,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,6CAICgJ,GAAczH,KAAI,SAAC/M,EAAMwE,GAAP,OACf,eAACoG,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAkBpJ,MAAO,CAAEnE,WAAY,GAAhE,UACI,cAACgN,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAI,uBAAkBA,EAAK6T,KAC3BhM,QAASA,EACToE,aAAcjM,EAAK8V,MACnB5J,OAAQ,gBAAWE,EAAX,EAAGD,MAAQC,MAAsBE,EAAjC,EAAmBC,WAAcD,MAAjC,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC0D,GAAD,CAAOxN,GAAI,yBAAyBxC,EAAK6T,IAAKzH,MAAOA,EAAOiJ,YAAY,YAAYhJ,SAAU,SAACM,GAAD,OA/N5H,SAACA,EAAGnI,GAClC,IAAMwR,EAAG,aAAOxB,IAChBwB,EAAIxR,GAAKsR,MAAQnJ,EAAEiI,OAAOxI,MAC1BtE,EAAS,gBAAD,OAAiBtD,GAAOwR,EAAIxR,GAAKsR,OACzCrB,GAAiBuB,GA2NgJC,CAA0BtJ,EAAG3M,EAAK6T,MAAMyB,QAAS,kBAAM/D,EAAW,oBAAsB,IAC5LjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACPC,SAAU,qCAIlB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAI,sBAAiBA,EAAK6T,KAC1BhM,QAASA,EACToE,aAAcjM,EAAK+V,KACnB7J,OAAQ,gBAAWE,EAAX,EAAGD,MAAQC,MAAsBE,EAAjC,EAAmBC,WAAcD,MAAjC,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC0D,GAAD,CAAOxN,GAAI,wBAAwBxC,EAAK6T,IAAKzH,MAAOA,EAAOiJ,YAAY,aAAahJ,SAAU,SAACM,GAAD,OA1O7H,SAACA,EAAGnI,GACjC,IAAMwR,EAAG,aAAOxB,IAChBwB,EAAIxR,GAAKuR,KAAOpJ,EAAEiI,OAAOxI,MACzBtE,EAAS,eAAD,OAAgBtD,GAAOwR,EAAIxR,GAAKuR,MACxCtB,GAAiBuB,GAsOgJE,CAAyBvJ,EAAG3M,EAAK6T,MAAMyB,QAAS,kBAAM/D,EAAW,oBACrKjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACPC,SAAU,qCAIlB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAGwC,MAAO,CAAEnD,QAAS,OAAQH,WAAY,SAAUX,eAAgB,UAA1F,SACI,cAACiN,EAAA,EAAD,UACI,sBAAKhJ,MAAO,CACRnD,QAAS,OACTH,WAAY,SACZE,SAAU,OACVkX,OAAQ,UACR1O,MAAO,OACRpE,QAAS,WACR,IAAMiT,EAAG,aAAOxB,IAEhBwB,EAAIG,OAAO3R,EAAK,GAEhBiQ,GAAiBuB,IAXrB,UAaA,cAAC,KAAD,IAA6B,+BAAO,yBApDfhW,EAAK6T,QA4D1C,cAACjJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACyL,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,WAApC,SACQ,sBAAKiE,MAAO,CACRnD,QAAS,OACTH,WAAY,SACZE,SAAU,OACVkX,OAAQ,UACR1O,MAAOxF,IACRoB,QAAS,WACR,IAAIqJ,EAAQgK,SAAS9B,IAAe,EAC9B0B,EAAG,uBAAOxB,IAAP,CAAsB,CAAEX,IAAKzH,EAAO0J,MAAO,GAAIC,KAAM,MAC9DxB,GAAenI,GACfqI,GAAiBuB,IAVrB,UAYI,cAAC,KAAD,IAAc,+BAAO,0DAKrC,cAACpL,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,GAAvB,SACI,cAACkM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,UAIrD,cAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAAC,IAAD,CACIU,KAAK,QACL6H,QAASA,EACToE,aAAcmG,GACdlG,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,iBAA3B,uBAGA,cAACpF,GAAD,2BAAW7D,GAAX,IAAkB3J,GAAG,iBAAiB6S,YAAY,iBAAiBC,QAAS,kBAAM/D,EAAW,UAAW9E,WAAS,KAAI,IACpHH,GACD,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIrCC,MAAO,CACLC,SAAU,gCACVW,QAAS,CACPjK,MAAO,2CACPoJ,QAAS,oCASrB,cAAC5K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAAC,IAAD,CACIU,KAAK,eACL6H,QAASA,EACToE,aAAcoG,GACdnG,OAAQ,oBAAGC,MAASE,EAAZ,EAAYA,SAAUD,EAAtB,EAAsBA,MAAuBE,EAA7C,EAA+BC,WAAcD,MAA7C,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,uBAA3B,uCAGA,cAAC,KAAD,CACI5S,GAAG,uBACH6S,YAAY,gDACZiB,QAAS,KACTC,aAAcC,GACdzU,MAAO,CACLpE,UAAW,QAEb8Y,WAAY,CACVrQ,MAAO,OACPL,OAAQ,QAEVsG,SAAU,SAACD,EAAOkK,EAAS3J,EAAG+J,GAC1BrK,EAASqK,IAEbpB,QAAS,kBAAM/D,EAAWnJ,EAAUO,gBAAkBzI,EAAwB,cAAgB,8BAC9FkM,MAAOA,EACPK,WAAS,IACRH,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,kBAKrD,cAAC5K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAG/CqB,IAAcA,EAAUQ,eAAiBtI,GAA0B8H,EAAUQ,eAAiBrI,IAAuB,qCACvH,cAACqK,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,mCAIJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACA,cAAC,IAAD,CACIS,KAAK,2BACL6H,QAASA,EACToE,aAAc8F,EACd7F,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,oCAA3B,qBAGA,eAACO,GAAA,EAAD,2BACQxJ,GADR,IAEI3J,GAAG,oCACHxC,KAAK,aACL+B,MAAO,CACH6T,UAAW,QAEfN,QAAS,kBAAM/D,EAAW,6BAC1B9D,WAAY,CAAE,aAAc,cARhC,UASI,wBAAQrB,MAAOvL,EAAf,SAA+BA,IAC/B,wBAAQuL,MAAOtL,EAAf,SAAgCA,IAChC,wBAAQsL,MAAOrL,EAAf,SAAmCA,gBAM/C,cAAC6J,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,IAEvB,cAACqL,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,0BACL6H,QAASA,EACToE,aAAciG,EACdhG,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,mCAA3B,wBAGA,cAACpF,GAAD,2BAAW7D,GAAX,IAAkB3J,GAAG,mCAAmC6S,YAAY,UAAUC,QAAS,kBAAM/D,EAAW,0BAA2B,IAClIjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACLC,SAAU,qCAIpB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,yBACL6H,QAASA,EACToE,aAAckG,GACdjG,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,kCAA3B,yBAGA,cAACpF,GAAD,2BAAW7D,GAAX,IAAkB3J,GAAG,kCAAkC6S,YAAY,WAAWC,QAAS,kBAAM/D,EAAW,0BAA0B,IACjIjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACLC,SAAU,qCAIpB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,UAIjD,cAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,0CAKHpD,GAAaA,EAAUQ,eAAiBxI,GAAqB,cAACwK,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SAC1D,cAAC,IAAD,CACIU,KAAK,uBACL6H,QAASA,EACToE,aAAcsG,GACdrG,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,SAA0BC,EAA7C,EAA+BC,WAAcD,MAA7C,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAACqK,GAAA,EAAD,gCACA,cAAC7J,EAAA,EAAD,CACI1F,QAASgF,EACTC,SAAU,SAAAM,GAAOqH,GAAuBrH,EAAEiI,OAAOxN,SAAUiF,EAASM,IACpE2I,QAAS,kBAAM/D,EAAW,uBAC1B1J,QAAS,cAACgJ,GAAD,IACTxG,MAAO,sEAAqC,cAAC,IAAD,CAAM0E,GAAG,IAAIhM,QAAS,SAAA4J,GAAOA,EAAEiK,iBAjjBxF/E,GAAsB,IAijBmC,2CAKhE,cAACjH,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,mBACL6H,QAASA,EACToE,aAAcuG,GACdtG,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAACqK,GAAA,EAAD,8BACA,cAAC7J,EAAA,EAAD,2BACQX,GADR,IAEI/E,QAAS6M,GACT5H,SAAUsI,GACVW,QAAS,kBAAM/D,EAAW,qBAC1B1J,QAAS,cAACgJ,GAAD,IACTxG,MAAO,+CAK3B,cAACO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,eACL6H,QAASA,EACToE,aAAcwG,GACdvG,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,SAA0BC,EAA7C,EAA+BC,WAAcD,MAA7C,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAACqK,GAAA,EAAD,4BACA,cAAC7J,EAAA,EAAD,CACI1F,QAASgF,EACTC,SAAU,SAAAM,GAAOwH,GAAexH,EAAEiI,OAAOxN,SAAUiF,EAASM,IAC5D9E,QAAS,cAACgJ,GAAD,IACTxG,MAAO,gCAAO,cAAC,IAAD,CAAM0E,GAAG,IAAIhM,QAAS,SAAA4J,GAAOA,EAAEiK,iBAvlB/DjF,GAAiB,IAulBe,+CAKlC,cAAC/G,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,GAAvB,SACI,cAAC,IAAD,CACIS,KAAK,gBACL6H,QAASA,EACToE,aAAc7D,EAAYvD,GAAIuD,EAAW,gBAAiB,IAAM,GAChE8D,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACZ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,yBAA3B,2CAGA,cAACyB,GAAA,EAAD,2BACQ1K,GADR,IAEI2K,UAAQ,EACRtU,GAAG,yBACHxC,KAAK,gBACLyN,WAAY,CAAE,aAAc,iBAC5BrB,MAAO0H,GACPzH,SAAU,SAAA0K,GAAG,OAAIhD,GAAiBgD,EAAInC,OAAOxI,QAC7C8D,MAAO,cAACF,GAAD,CAAOxN,GAAI,yBAClBwU,YAAa,SAACC,GAAD,OACT,qBAAKnM,UAAWtD,EAAQqI,MAAxB,SAEQoH,EAASlK,KAAI,SAACX,GAAD,OACT,cAAC8K,GAAA,EAAD,CAAkB7M,MAAO+B,EAAOb,QAAQ,WAAWT,UAAWtD,EAAQsI,MAA3D1D,SAb/B,SAmBKjL,GAAe4L,KAAI,SAACiI,EAASnB,GAAV,OAChB,cAACsD,GAAA,EAAD,CAAoB/K,MAAO4I,EAAQhV,KAAM+B,MAAOgP,GAAwBiE,EAAQhV,KAAM8T,GAAe7V,GAArG,SACK+W,EAAQhV,MADE6T,iBAQ/B,cAACjJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC6X,GAAA,EAAD,CAAYtM,UAAWtD,EAAQuI,WAAYhN,QAAS,WAAOgR,GAAiB,KAA5E,SACI,cAAC,KAAD,QAGR,cAACnJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,KACf,cAACsL,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,GAAvB,SACI,eAACwL,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,gBAAiBuZ,GAAI,EAAzD,UACI,cAACvU,EAAA,EAAD,CACIyI,QAAQ,YACR5I,UAAWmM,IACXC,GAAG,IACHhN,MAAO,CAAEuV,WAAY,GAJzB,uBAOA,cAACxU,EAAA,EAAD,CACIuK,KAAK,SACL9B,QAAQ,YACRxJ,MAAO,CACHoF,MAAOvF,GACP6E,gBAAiB9E,IALzB,oCAexB,cAACiJ,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAGuC,MAAO,CAACwV,WAAY,sBAAuB5Z,UAAW,GAAIoJ,aAAc,IAAlG,SACI,cAACgE,EAAA,EAAD,CAAKyM,GAAI,CACL5Y,QAAS,OACTd,eAAgB,SAChBW,WAAY,SACZ2H,MAAO,OACPL,OAAQ,OACRrH,cAAe,UANnB,SAQI,cAAC,GAAD,CAAWyN,MAAOmF,eAMtC,cAAC,GAAD,CACIpP,UAAWsP,EACXtC,kBA3rBqB,WAC7BuC,GAAgB,GAChB3J,EAAS,oBAAoB,GAC7BoM,IAAkB,IAyrBV/E,kBAvrBqB,WAC7BsC,GAAgB,GAChB3J,EAAS,oBAAoB,GAC7BoM,IAAkB,MAqrBd,cAAC,GAAD,CACIhS,UAAWwP,EACXvP,iBAprBqB,kBAAMwP,GAAiB,MAqrBhD,cAAC8F,GAAD,CACIvV,UAAW0P,EACXzP,iBArrB0B,kBAAM0P,GAAsB,UCnJhEpM,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrCiJ,KAAM,CACFwQ,UAAW,+BACXjR,gBAAiB7E,GACjBwE,MAAO,OACPpI,SAAU,OACVJ,WAAY,GACZC,cAAe,IAEnB8Z,IAAI,2BACG1Z,EAAMK,OAAOC,UAAUC,UAAU,SAAU,WAD/C,IAEC2I,MdfoB,UcgBpB,4BAA6B,CACzBpJ,UAAW,SACXW,cAAe,SACf,eAAgB,CACZoH,QAAS,eAIrB8R,UAAW,CACPC,SAAU,EACVjK,YAAa,KAEjBkK,SAAS,eACF7Z,EAAMK,OAAOC,UAAUC,UAAU,SAAU,eAqEvCuZ,GAjEA,WACX,IAAMvQ,EAAU/B,KAEhB,OACI,iCACI,cAACkF,EAAA,EAAD,CAAWG,UAAWtD,EAAQN,KAA9B,SACI,sBAAK4D,UAAWtD,EAAQmQ,IAAxB,UACI,cAAC/U,EAAA,EAAD,CACI2I,QAAQ,QACRT,UAAWtD,EAAQoQ,UACnBjV,UAAU,IAHd,oDAMA,gCACI,cAACkM,GAAA,EAAD,CACI1H,MAAM,cACNpF,MAAO,CACH8L,aAAc,GACdD,YAAa,GACb0C,SAAU,IAEd3N,UAAWmM,IACXC,GAAE,WARN,uBAWA,cAACF,GAAA,EAAD,CACI1H,MAAM,cACNpF,MAAO,CACH8L,aAAc,GACdD,YAAa,GACb0C,SAAU,IAEd3N,UAAWmM,IACXC,GAAE,gBARN,yBAWA,cAACF,GAAA,EAAD,CACI1H,MAAM,cACNpF,MAAO,CACH8L,aAAc,GACdD,YAAa,GACb0C,SAAU,IAEd3N,UAAWmM,IACXC,GAAE,OARN,iBAWA,cAACF,GAAA,EAAD,CACI1H,MAAM,cACNpF,MAAO,CACH8L,aAAc,GACdD,YAAa,GACb0C,SAAU,IAEd3N,UAAWmM,IACXC,GAAE,UARN,kC,oBCzFT,OAA0B,iCCWnCtJ,GAAYC,aAAW,SAACzH,GAAD,YAAY,CACrC+Z,OAAQ,CACJvR,gBAAiB7E,GACjB2O,WAAY,UACZtK,UAAW,oCACX4H,aAAc,eACdjQ,WAAY,MACZC,cAAe,OAEnBoa,cAAe,CACbrZ,QAAS,OACTd,eAAgB,SAChBW,WAAY,UAEdyZ,aAAW,GACPtZ,QAAS,OACTd,eAAgB,SAChBW,WAAY,SACZ2H,MAAO,OAJA,cAKNnI,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BI,MAAO,QANF,cAQNnI,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BI,MAAO,SATF,GAYX+R,KAAM,CACFN,SAAU,EACV7Z,SAAU,YAoBHoa,GAhBA,WACX,IAAM5Q,EAAU/B,KAEhB,OACI,cAAC4S,GAAA,EAAD,CACIxS,SAAS,QACTiF,UAAWtD,EAAQwQ,OAFvB,SAGI,cAACM,GAAA,EAAD,CAASxN,UAAWtD,EAAQyQ,cAA5B,SACI,cAACpJ,GAAA,EAAD,CAAME,GAAG,IAAIjE,UAAWtD,EAAQ0Q,YAAavV,UAAWmM,IAAxD,SACI,qBAAKzD,IAAK8M,GAAM7M,IAAI,kBAAkBR,UAAWtD,EAAQ2Q,c,mDCrB9DI,GA3B6B,SAAC,GAA8C,IAA5CrW,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,iBAAkBmU,EAAc,EAAdA,QACxE,OACI,eAAClU,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,wCAEL,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,SACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,+DACgD2T,EADhD,mNAKR,cAACzT,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8BCQDuV,GA3B8B,SAAC,GAA8C,IAA5CtW,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,iBAAkBmU,EAAc,EAAdA,QACzE,OACI,eAAClU,GAAA,EAAD,CACIC,KAAMH,EACNI,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACI,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SACK,wCAEL,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBF,GAAG,2BAA2BG,UAAW,MAA5D,SACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,0BAA0BT,MAAO,CAAEpE,UAAW,GAAKgF,UAAU,IAA5E,yDAC8C2T,EAD9C,kJAKR,cAACzT,GAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAkBJ,MAAO,CAAEiB,OAAQ,GAAKC,WAAS,EAAlE,8BCJVwC,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BoJ,KAAM,CACJ,QAAS,CACPC,aAAc,KAGlBnB,aAAa,yBACXC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAF9C,gBAGVsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,UAGb7F,QAAS,CACP6F,QAAS,GACTG,UAAW,sCAIX+J,GAAQ/I,cAAW,SAAChJ,GAAD,MAAY,CACjCiJ,KAAM,CACF,YAAa,CACTvJ,UAAWM,EAAMkN,QAAQ,IAE7B,qBAAsB,CAClB8E,YAAa,YAGrBC,MAAO,CACHC,aAAc,EACdtK,SAAU,WACVY,gBAAiBxI,EAAMyI,QAAQ0J,OAAOC,MACtCxJ,OAAQ,oBACRyJ,SAAU,GACVxK,QAAS,YACTyK,WAAYtS,EAAMuS,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACPxK,UAAU,GAAD,OAAKyK,aAAMzS,EAAMyI,QAAQ8I,QAAQmB,KAAM,KAAvC,iBACTV,YAAahS,EAAMyI,QAAQ8I,QAAQmB,UAnBjC1J,CAsBV2J,MA8nBW6H,GA5nBO,SAAC,GAAiB,IAAflR,EAAc,EAAdA,QACfC,EAAU/B,KACVgC,EAAUC,YAAQ,CAAEC,kBAAkB,IACpCC,EAAoCH,EAApCG,aAAcC,EAAsBJ,EAAtBI,QAASC,EAAaL,EAAbK,SAC/B,EAA8BkB,mBAAS,IAAvC,mBAAOsI,EAAP,KAAgBC,EAAhB,KACMmH,EAAa,CACf,oBACA,yBACA,2BACA,wBACA,uBACA,4BACA,8BACA,4BAIAtQ,EAAYC,aAAaC,QAAQpH,IACjCkH,IACAA,EAAYK,KAAKC,MAAMN,IACRO,eACXpB,EAAQyE,KAAK,KAEZ5D,EAAU0K,YACXvL,EAAQyE,KAAK,cAGjBzE,EAAQyE,KAAK,KAGjB,MAAoChD,mBAASZ,GAAaA,EAAUuQ,YAAcvQ,EAAUuQ,YAAc,WAA1G,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0C7P,sBAASZ,IAAaA,EAAU0Q,qBAA1E,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwDhQ,sBAASZ,IAAaA,EAAU6Q,2BAAxF,mBAAOC,EAAP,KAA6BC,EAA7B,KACA,EAA0CnQ,sBAASZ,IAAaA,EAAUgR,yBAA1E,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwDtQ,sBAASZ,IAAaA,EAAUmR,+BAAxF,mBAAOC,EAAP,KAA6BC,EAA7B,KACA,EAA8CzQ,oBAAS,GAAvD,mBAAO0Q,EAAP,KAA0BC,EAA1B,KACA,GAAoD3Q,oBAAS,GAA7D,qBAAO4Q,GAAP,MAA6BC,GAA7B,MAQA,GAA8C7Q,mBAAS,IAAvD,qBAAO8Q,GAAP,MAAwBC,GAAxB,MAEArF,qBAAU,WACN5M,EAAS,cAAe8Q,KACzB,CAAEA,EAAY9Q,IAEjB,IAAMkS,GAAiB,SAACpN,GACpB,QAAOqN,KAAUC,aAAatN,EAAG,OAAe,qCAG9CuN,GAA+B,SAACvN,GAClC,IAAIwN,EAAcC,KAAOC,UAAU1B,GAAY2B,SAE/C,OADAH,EAAcH,KAAUO,eAAevJ,QAAQmJ,IAAgB,EAAIA,EAAc,OAC1EH,KAAUC,aAAatN,EAAGwN,IAAsB,qCAGrDK,GAAa,SAAC7N,GAChB,OAAOA,EAAEf,QAAU,GAAKe,EAAEf,QAAU,GAAW,yDAsCnD,OAJA6I,qBAAU,WACNnM,QAAQC,IAAIkR,KACb,CAACA,IAGA,eAAC/O,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,qBAAnC,SACI,eAACiF,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACuV,GAAA,EAAD,CAAa9S,MAAO,CAAEgF,aAAc,MACpC,cAAC,GAAD,CAAYoH,KAAM,SAG1B,cAACpD,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,2BAAkBiI,GAAlB,aACI,sBAAMqD,UAAWtD,EAAQV,KAAM4E,SAAU9D,GAjDtD,SAAC+D,GACZ,IAAIC,GAAU,EAKd,GAJA8O,OAAOtb,KAAKuM,GAAMoB,KAAI,SAAAvI,GAAG,cAAW4D,EAAU5D,MAC9CkU,EAAW3L,KAAI,SAAAvI,GAAG,cAAW4D,EAAU5D,MAGT,aAF9B4D,EAAS,2BAAQA,GAAcuD,IAEjBgN,YAA2B,CACrC,GAAIvQ,EAAUQ,eAAiBxI,GAAqBgI,EAAUQ,eAAiBvI,EAG3E,OAFA0Z,GAAmB3R,EAAUuQ,kBAnCAkB,IAAoB,IAuCjDzR,EAAUmL,kBAAoBnL,EAAUoL,gBACxCuG,GAAmB3R,EAAUuQ,aAC7BvQ,EAAUmL,kBAAmB,EAC7BnL,EAAUoL,cAAe,EAxCCmG,GAAiB,GA0C3C/N,GAAU,GAGlBxD,EAAUuS,gBAAkBN,KAAOC,UAAUlS,EAAUuQ,aAAa4B,SACpEnS,EAAUwS,QAAV,UAAuBjP,EAAKkP,cAA5B,YAA6ClP,EAAKmP,aAAlD,aAAmEnP,EAAKoP,eAAxE,YAA0FpP,EAAKqP,aAC/F5S,EAAU6S,YAAV,UAA2BtP,EAAKuP,iBAAhC,YAAoDvP,EAAKwP,gBAAzD,aAA6ExP,EAAKyP,kBAAlF,YAAuGzP,EAAK0P,eAA5G,aAA+HzC,GAC/HrQ,QAAQC,IAAIJ,GAEZC,aAAayD,QAAQ5K,GAAYuH,KAAKsD,UAAU3D,IAC3CwD,GACDrE,EAAQyE,KAAK,eAsBO,SACI,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,cAACvI,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,wBAEL,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,gBACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAUyS,cAAgBzS,EAAUyS,cAAgB,GAC/E3O,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,qBAA3B,SACK,iBAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,qBAAqB6S,YAAY,YAASC,QAAS,kBAAM/D,EAAW,0BAAyB,IACjHjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,qCAItB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,eACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU0S,aAAe1S,EAAU0S,aAAe,GAC7E5O,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,oBAA3B,SACK,eAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,oBAAoB6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,0BAA0B,QAGvHkE,MAAO,CACHC,SAAU,qCAKrBtN,IAAcA,EAAUQ,eAAiBxI,GAAqBgI,EAAUQ,eAAiBvI,IACtF,cAACuK,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIyC,MAAO,CAAEpE,WAAY,EAAGoJ,cAAe,EAAGlJ,cAAe,GAA5E,SACI,cAACkN,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,WAApC,SACI,sBAAKiE,MAAO,CACRnD,QAAS,OACTH,WAAY,SACZE,SAAU,OACVkX,OAAQ,UACR1O,MAAOxF,IACRoB,QAAS,WACRiW,GAAkBD,IAPtB,UASKA,EAAgB,cAAC,KAAD,IAAgC,cAAC,KAAD,IAAe,+BAAO,uCAMrFA,GAAiB,cAACnO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACf,cAAC,IAAD,CACIU,KAAK,qBACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU0Q,mBAAqB1Q,EAAU0Q,mBAAqB,GACzF5M,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,yBAA3B,SACK,mBAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,yBAAyB6S,YAAY,8BAA8BC,QAAS,kBAAM/D,EAAW,yBAAyB,IAC1IjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,qCAKtB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,iBACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU2S,eAAiB3S,EAAU2S,eAAiB,GACjF7O,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,sBAA3B,SACK,UAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,sBAAsB6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,0BAA0B,IAChHjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,gCACV4F,SAAUtB,QAItB,cAACpP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,cACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU4S,YAAc5S,EAAU4S,YAAc,GAC3E9O,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,mBAA3B,SACK,UAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,mBAAmB6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,0BAA0B,IAC7GjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,qCAKtB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIyC,MAAO,CAAEpE,WAAY,EAAGoJ,cAAe,GAA1D,SACI,cAACgE,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,WAApC,SACQ,sBAAKiE,MAAO,CACRnD,QAAS,OACTH,WAAY,SACZE,SAAU,OACVkX,OAAQ,UACR1O,MAAOxF,IACRoB,QAAS,WACRoW,GAAyBD,IAP7B,UASKA,EAAuB,cAAC,KAAD,IAAgC,cAAC,KAAD,IAAe,+BAAO,mCAI7FA,GAAwB,qCACrB,cAACtO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAAC,IAAD,CACIU,KAAK,2BACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU6Q,yBAA2B7Q,EAAU6Q,yBAA2B,GACrG/M,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,8BAA3B,SACK,mBAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,8BAA8B6S,YAAY,kBAC3DhI,KAAK,MAAMkO,QAAW,SAAC5O,GACnBA,EAAEiI,OAAOxI,MAAQO,EAAEiI,OAAOxI,MAAMP,OAAS,EAAIxH,KAAKsJ,IAAI,EAAGyI,SAASzJ,EAAEiI,OAAOxI,MAAMoP,QAAQ,UAAW,MAAOC,WAAa,GACjG,QAAnB9O,EAAEiI,OAAOxI,QACTO,EAAEiI,OAAOxI,MAAQ,KAEzBkJ,QAAS,kBAAM/D,EAAW,oBAAoB,IACjDjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,gCACV4F,SAAUb,QAItB,cAAC7P,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,6BACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAUsT,2BAA6BtT,EAAUsT,2BAA6B,GACzGxP,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,gCAA3B,SACK,UAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,gCAAgC6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,0BAA0B,IAC1HjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,gCACV4F,SAAUtB,QAItB,cAACpP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,0BACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAUuT,wBAA0BvT,EAAUuT,wBAA0B,GACnGzP,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,6BAA3B,SACK,UAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,6BAA6B6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,0BAA0B,IACvHjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,wCAO1B,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAGjD,cAACnE,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,wBAEL,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,cACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAUuQ,YAAcvQ,EAAUuQ,YAAc,GAC3EzM,OAAQ,gBAAWE,EAAX,EAAGD,MAAQC,MAAsBE,EAAjC,EAAmBC,WAAcD,MAAjC,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,kBAA3B,SACK,SAEL,cAAC,KAAD,CACIhJ,MAAOA,EACPwP,SAAUxT,GAAaA,EAAUQ,cAAgBR,EAAUQ,eAAiBxI,GAAqBgI,EAAUQ,eAAiBvI,EAC5HgM,SAAUwM,EACVvD,QAAS,kBAAM/D,EAAW,SAC1BsK,UAAW,CAAC,MACZ9Z,MAAO,CACHpE,UAAW,OACXyI,MAAO,OACPL,OAAQ,UAGfuG,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,qCAGf,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,IAE9B,cAACqL,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,mBACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU8S,iBAAmB9S,EAAU8S,iBAAmB,GACrFhP,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,wBAA3B,SACK,iBAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,wBAAwB6S,YAAY,YAASC,QAAS,kBAAM/D,EAAW,6BAA4B,IACvHjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,qCAItB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,kBACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU+S,gBAAkB/S,EAAU+S,gBAAkB,GACnFjP,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,uBAA3B,SACK,eAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,uBAAuB6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,6BAA6B,QAG7HkE,MAAO,CACHC,SAAU,qCAIrBtN,IAAcA,EAAUQ,eAAiBxI,GAAqBgI,EAAUQ,eAAiBvI,IACtF,cAACuK,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIyC,MAAO,CAAEpE,WAAY,EAAGoJ,cAAe,EAAGlJ,cAAe,GAA5E,SACI,cAACkN,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,WAApC,SACQ,sBAAKiE,MAAO,CACRnD,QAAS,OACTH,WAAY,SACZE,SAAU,OACVkX,OAAQ,UACR1O,MAAOxF,IACRoB,QAAS,WACRuW,GAAkBD,IAPtB,UASKA,EAAgB,cAAC,KAAD,IAAgC,cAAC,KAAD,IAAe,+BAAO,uCAKzFA,GAAiB,cAACzO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACf,cAAC,IAAD,CACIU,KAAK,yBACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAUgR,uBAAyBhR,EAAUgR,uBAAyB,GACjGlN,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,4BAA3B,SACK,mBAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,4BAA4B6S,YAAY,8BAA8BC,QAAS,kBAAM/D,EAAW,yBAAyB,IAC7IjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,qCAKtB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,oBACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAUgT,kBAAoBhT,EAAUgT,kBAAoB,GACvFlP,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,yBAA3B,SACK,UAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,yBAAyB6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,6BAA6B,IACtHjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,gCACV4F,SAAUnB,QAItB,cAACvP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,iBACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAUiT,eAAiBjT,EAAUiT,eAAiB,GACjFnP,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,sBAA3B,SACK,UAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,sBAAsB6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,6BAA6B,IACnHjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,qCAItB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIyC,MAAO,CAAEpE,WAAY,EAAGoJ,cAAe,GAA1D,SACI,cAACgE,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,WAApC,SACQ,sBAAKiE,MAAO,CACRnD,QAAS,OACTH,WAAY,SACZE,SAAU,OACVkX,OAAQ,UACR1O,MAAOxF,IACRoB,QAAS,WACR0W,GAAyBD,IAP7B,UASKA,EAAuB,cAAC,KAAD,IAAgC,cAAC,KAAD,IAAe,+BAAO,mCAK7FA,GAAwB,qCACrB,cAAC5O,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAAC,IAAD,CACIU,KAAK,+BACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAUmR,6BAA+BnR,EAAUmR,6BAA+B,GAC7GrN,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,iCAA3B,SACK,mBAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,iCAAiC6S,YAAY,kBAC9DhI,KAAK,MAAMkO,QAAW,SAAC5O,GACnBA,EAAEiI,OAAOxI,MAAQO,EAAEiI,OAAOxI,MAAMP,OAAS,EAAIxH,KAAKsJ,IAAI,EAAGyI,SAASzJ,EAAEiI,OAAOxI,MAAMoP,QAAQ,UAAW,MAAOC,WAAa,GACjG,QAAnB9O,EAAEiI,OAAOxI,QACTO,EAAEiI,OAAOxI,MAAQ,KAEzBkJ,QAAS,kBAAM/D,EAAW,uBAAuB,IACpDjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,gCACV4F,SAAUb,QAItB,cAAC7P,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,iCACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU0T,+BAAiC1T,EAAU0T,+BAAiC,GACjH5P,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,mCAA3B,SACK,UAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,mCAAmC6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,6BAA6B,IAChIjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,gCACV4F,SAAUnB,QAItB,cAACvP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,CACIS,KAAK,8BACL6H,QAASA,EACToE,aAAc7D,GAAaA,EAAU2T,4BAA8B3T,EAAU2T,4BAA8B,GAC3G7P,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,gCAA3B,SACK,UAEL,cAAC,GAAD,2BAAWjJ,GAAX,IAAkB3J,GAAG,gCAAgC6S,YAAY,MAAMC,QAAS,kBAAM/D,EAAW,6BAA6B,IAC7HjF,GACG,cAACiJ,GAAA,EAAD,CAAgBjJ,OAAK,EAArB,SAAuBA,EAAMkJ,cAIzCC,MAAO,CACHC,SAAU,wCAM1B,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,GAAIwC,MAAO,CAACpE,UAAW,GAA9C,SACI,eAACoN,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,gBAAiBuZ,GAAI,EAAzD,UACI,cAACvU,EAAA,EAAD,CACIyI,QAAQ,YACR5I,UAAWmM,IACXC,GAAG,YACHhN,MAAO,CAAEuV,WAAY,GAJzB,uBAOA,cAACxU,EAAA,EAAD,CACIuK,KAAK,SACL9B,QAAQ,YACRxJ,MAAO,CACHoF,MAAOvF,GACP6E,gBAAiB9E,IALzB,mCAexB,cAACiJ,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAGuC,MAAO,CAACwV,WAAY,sBAAuB5Z,UAAW,GAAIoJ,aAAc,IAAlG,SACI,cAACgE,EAAA,EAAD,CAAKyM,GAAI,CACL5Y,QAAS,OACTd,eAAgB,SAChBW,WAAY,SACZ2H,MAAO,OACPL,OAAQ,OACRrH,cAAe,UANnB,SAQI,cAAC,GAAD,CAAWyN,MAAOmF,eAMtC,cAAC,GAAD,CACIpP,UAAWwX,EACXvX,iBAxkBqB,WAC7BwX,GAAiB,GACjBpS,EAAQyE,KAAK,aAukBLsK,QAASwD,KAEb,cAAC,GAAD,CACI5X,UAAW0X,GACXzX,iBA/kBwB,kBAAM0X,IAAoB,IAglBlDvD,QAASwD,SC9qBnBrU,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BoJ,KAAM,CACJ,QAAS,CACPC,aAAc,KAGlBnB,aAAa,yBACXC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAF9C,gBAGVsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,UAGb7F,QAAS,CACP6F,QAAS,GACTG,UAAW,sCAIXpE,GAAe,SAACC,GAClB,OAAO,sBAAMC,MAAO,CAACC,WAAY,QAA1B,SACFF,KAs1BMka,GAl1BO,SAAC,GAAiB,IAAfzU,EAAc,EAAdA,QACfC,EAAU/B,KACVgC,EAAUC,cACRE,EAAoCH,EAApCG,aAAcE,EAAsBL,EAAtBK,SAAUD,EAAYJ,EAAZI,QAE5BoU,GAAiB,EACjBC,GAAiB,EAGjB9T,EAAYC,aAAaC,QAAQpH,IACjCkH,IACAA,EAAYK,KAAKC,MAAMN,IACRO,eACXpB,EAAQyE,KAAK,KAEZ5D,EAAU0K,YACXvL,EAAQyE,KAAK,aAEZ5D,EAAUyS,eACXtT,EAAQyE,KAAK,YAGjB0O,OAAOtb,KAAKgJ,GAAW2E,KAAI,SAAAvI,GAAG,OAAIsD,EAAStD,EAAK4D,EAAU5D,OAC1DsD,EAAS,gBAAiBvD,GAAgB6D,EAAUO,gBACpDb,EAAS,elBNa,SAACtD,GAC3B,OAAOA,GACH,KAAKpE,EACD,MAAO,QACX,KAAKC,EACD,MAAO,uBACX,KAAKC,EACD,MAAO,iBACX,KAAKC,EACD,MAAO,aACX,KAAKC,EACD,MAAO,YAIf,MAAO,GkBTsB2b,CAAe/T,EAAUQ,eAClDd,EAAS,mBAAoBM,EAAUmL,iBAAmBvS,EAAWC,GACrE6G,EAAS,eAAgBM,EAAUoL,aAAexS,EAAWC,GAEzDmH,EAAUO,gBAAkBxI,GAC9B2H,EAAS,eAAD,UAAoBM,EAAU0K,WAA9B,YAA4C1K,EAAU4K,UAAtD,YAAmE5K,EAAU6K,WAGnF7K,EAAU6Q,2BACZgD,GAAiB,GAEf7T,EAAUmR,+BACZ2C,GAAiB,IAQrB3U,EAAQyE,KAAK,KAYf,OACI,eAACrB,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,qBAAnC,SACI,eAACiF,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACuV,GAAA,EAAD,CAAa9S,MAAO,CAAEgF,aAAc,MACpC,cAAC,GAAD,CAAYoH,KAAM,SAG1B,cAACpD,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACE,cAAC,IAAD,2BAAkBzD,GAAlB,aACA,sBAAMqD,UAAWtD,EAAQV,KAAM4E,SAAU9D,GApBxC,SAAC+D,GACdpD,QAAQC,IAAImD,GACZvD,EAAUwL,sBAAsBD,SAAQ,SAAA3T,GAAI,cAAW2L,EAAK,wBAAD,OAAyB3L,EAAK6T,SACzFzL,EAAUwL,sBAAwBxL,EAAUwL,sBAAsB7G,KAAI,SAAA/M,GAAI,gBAAOA,EAAK8V,MAAZ,YAAqB9V,EAAK+V,SACpG1N,aAAayD,QAAQ5K,GAAYuH,KAAKsD,UAAU3D,IAChDb,EAAQyE,KAAK,eAeD,SACE,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,eAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACE,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,oBAFP,IAGgB,uBACd,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,kDAEL,eAAC5I,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBACe3J,GAAa,iBAD5B,2BACsEA,GAAa,iCADnF,iCAGA,eAACe,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,uBACe3J,GAAa,uBAD5B,2BAC4EA,GAAa,aADzF,kBACgHA,GAAa,eAD7H,gBAKF,cAAC+I,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,GAAIwC,MAAO,CAACpE,UAAW,EAAG2Z,WAAY,EAAG8E,YAAa,GAA7E,SACI,eAACrR,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,gBAAiBuZ,GAAI,EAAzD,UACI,cAACvU,EAAA,EAAD,CACIyI,QAAQ,YACR5I,UAAWmM,IACXC,GAAG,WACHhN,MAAO,CAAEuV,WAAY,GAJzB,uBAOA,cAACxU,EAAA,EAAD,CACIuK,KAAK,SACL9B,QAAQ,YACRxJ,MAAO,CACHuV,WAAY,GACZnQ,MAAOvF,GACP6E,gBAAiB9E,IANzB,gDAYR,cAACiJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAEjD,eAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACE,eAACsL,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,eAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACqD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,yBAFP,IAGgB,uBACd,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,WAAW,EAAGoJ,aAAc,MAC5CkV,EACA,eAACrR,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,2BACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,yBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,6BACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,aAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,0BACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK3EhE,GAAaA,EAAU0Q,oBAAsB,cAAClO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SAC5C,cAAC,IAAD,CACEU,KAAK,qBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,uBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,eAQ9E,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,gBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,mBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,eACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,iBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,QAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,cACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,UAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK3EhE,GAAaA,EAAU0Q,oBAAsB,cAAClO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SAC5C,cAAC,IAAD,CACEU,KAAK,qBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,uBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,kBASlF,eAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACqD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,yBAFP,IAGgB,uBACd,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,WAAW,EAAGoJ,aAAc,MAC5CmV,EACA,eAACtR,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,+BACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,yBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,oBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,aAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,iBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK3EhE,GAAaA,EAAUgR,wBAA0B,cAACxO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SAChD,cAAC,IAAD,CACEU,KAAK,yBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,uBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAM5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,cACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,eAO9E,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,mBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,mBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,kBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,oBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,aAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,iBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK3EhE,GAAaA,EAAUgR,wBAA0B,cAACxO,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SAChD,cAAC,IAAD,CACEU,KAAK,yBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,uBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAM5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,cACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,qBAWpF,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UAEE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI0c,GAAkB,qCAClB,cAACrZ,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACG,wBAFe,IAGJ,uBACd,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,WAAW,EAAGoJ,aAAc,MAC9C,eAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,gBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,mBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,eACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,iBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,QAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,cACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,UAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,oBASlF,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACI2c,GAAkB,qCAClB,cAACtZ,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACG,wBAFe,IAGJ,uBACd,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,WAAW,EAAGoJ,aAAc,MAC9C,eAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,mBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,mBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,kBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,eAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,iCACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,QAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,8BACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,UAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,uBAUpF,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,eAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACqD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,mBAFP,IAGgB,uBACd,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,WAAW,EAAGoJ,aAAc,MAC9C,eAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,gBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,kBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAKzEhE,GAAaA,EAAUsL,eAAiBtL,EAAUsL,cAAc7H,OAAS,GACtE,cAACjB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAAC,IAAD,CACEU,KAAK,gBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,iCAEL,qBAAKxL,MAAO,CAACpE,UAAW,UACvByO,EAAMW,KAAI,SAAC/M,EAAM6T,GAAP,OACP,cAACjR,EAAA,EAAD,CAAY2I,QAAQ,KAApB,SAAoCvL,GAAN6T,cAQlD,cAACjJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,mBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,oBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK3EhE,GAAaA,EAAUW,oBAAsB,cAAC6B,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SAC5C,cAAC,IAAD,CACEU,KAAK,qBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,wBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,eACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,mBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,QACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,WAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,eACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,YAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,mBACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,2BAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,eACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,iBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,kBAQ/EhE,GAAaA,EAAUO,gBAAkBzI,EACxC,eAAC0K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACqD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,cAFP,IAGgB,uBACd,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,WAAW,EAAGoJ,aAAc,MAC9C,eAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,YACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,YAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK5E,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,WACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,aAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK3EhE,GAAaA,EAAU8M,0BACtB,cAACtK,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,2BACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,wBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAM7EhE,GAAaA,EAAUwL,uBACtBxL,EAAUwL,sBAAsB7G,KAAI,SAAC/M,EAAMwE,GAAP,OAClC,cAACoG,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAI,+BAA0BA,EAAK6T,KACnChM,QAASA,EACTqE,OAAQ,cAAGC,MAASC,MAAZ,IAAmCE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,2BACgB6I,SAAS5R,GAAO,EADhC,cAGA,cAAC5B,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,mBAAuEqC,EAAK8V,MAA5E,YAAqF9V,EAAK+V,eAT1E/V,EAAK6T,cAmBrC,eAACjJ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,UACA,cAACqD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,qBAFL,IAGc,uBACd,cAACC,EAAA,EAAD,CAAS1J,MAAO,CAAEpE,WAAW,EAAGoJ,aAAc,MAC9C,eAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,eACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,UAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,YAK3EhE,GAAaA,EAAU8M,0BACtB,cAACtK,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACEU,KAAK,2BACL6H,QAASA,EACTqE,OAAQ,gBAAYE,EAAZ,EAAGD,MAASC,MAAuBE,EAAnC,EAAqBC,WAAcD,MAAnC,OACR,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAlB,SACK,wBAEL,cAAC3K,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAAEzJ,MAAO,CAACpE,UAAW,QAA1D,SAAoEyO,wBAYtF,cAACxB,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAEjD,cAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,GAAIwC,MAAO,CAACpE,UAAW,EAAG2Z,WAAY,EAAG8E,YAAa,GAA7E,SACI,eAACrR,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,gBAAiBuZ,GAAI,EAAzD,UACI,cAACvU,EAAA,EAAD,CACIyI,QAAQ,YACR5I,UAAWmM,IACXC,GAAG,WACHhN,MAAO,CAAEuV,WAAY,GAJzB,uBAOA,cAACxU,EAAA,EAAD,CACIuK,KAAK,SACL9B,QAAQ,YACRxJ,MAAO,CACHuV,WAAY,GACZnQ,MAAOvF,GACP6E,gBAAiB9E,IANzB,gE,2DCt2BjB0a,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBAEpBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAe,eACfC,GAAgB,gBAEhBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oB,SCFjCC,KAAMC,SAASC,iBAAkB,EACjCF,KAAMC,SAASE,eAAiB,cAChCH,KAAMC,SAASG,eAAiB,YAEzB,I,oBCpBQ,OAA0B,mCCA1B,OAA0B,mCCA1B,OAA0B,iCCA1B,OAA0B,mCCA1B,OAA0B,mCCA1B,OAA0B,oCCYnChY,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrCiJ,KAAM,CACF2Q,SAAU,EACVzR,MAAO,OACPzI,UAAW,EACXoJ,aAAc,EACdN,gBAAiBxI,EAAMyI,QAAQC,WAAWC,OAE9C8W,WAAW,aACPtX,MAAO,MACPL,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BI,MAAO,QAGbuX,WAAY,CACRvX,MAAO,OACPL,OAAQ,OACR/H,SAAU,MACV4f,UAAW,QAEfC,SAAU,CACNzX,MAAO,OACPL,OAAQ,OACR/H,SAAU,MACV4f,UAAW,QAEfE,WAAY,CACR1X,MAAO,OACPL,OAAQ,OACR/H,SAAU,MACV4f,UAAW,QAEfG,WAAY,CACR3X,MAAO,OACPL,OAAQ,OACR/H,SAAU,MACV4f,UAAW,QAEfI,YAAa,CACT5X,MAAO,OACPL,OAAQ,OACR/H,SAAU,MACV4f,UAAW,QAEfK,WAAY,CACR7X,MAAO,OACPL,OAAQ,OACR/H,SAAU,MACV4f,UAAW,YAqEJM,GAjEQ,SAAC,GAAsD,EAApDC,eAAqD,IAArCC,EAAoC,EAApCA,kBAAmB7M,EAAiB,EAAjBA,WACnD/J,EAAU/B,KAChB,EAA4BuD,mBAAS,GAArC,mBAAOqV,EAAP,KAAeC,EAAf,KAYA,OACI,qBAAKxT,UAAWtD,EAAQN,KAAxB,SAmBI,eAACqX,GAAA,EAAD,CACInS,MAAOiS,EACPhS,SAjCS,SAACM,EAAG6R,GACrBjW,QAAQC,IAAIgW,GACZF,EAAUE,GAENJ,EADa,GAAbI,EACkB5d,E9BnDQ,U8BuD9B2Q,EAAW,mBA0BHhG,QAAQ,aACRkT,cAAc,KACd,aAAW,6BACXC,kBAAmB,CACf3c,MAAO,CACH4E,WAAYhF,KARxB,UAWI,cAACgd,GAAA,EAAD,CAAKnc,GAAG,SACJoc,KAAM,qBAAKvT,IAAKwT,GAAa/T,UAAWtD,EAAQmW,WAAYrS,IAAI,WAChE,gBAAc,SAASR,UAAWtD,EAAQkW,aAC9C,cAACiB,GAAA,EAAD,CAAKnc,GAAG,SACJoc,KAAM,qBAAKvT,IAAKyT,GAAWhU,UAAWtD,EAAQsW,WAAYxS,IAAI,WAC9D,gBAAc,SAASR,UAAWtD,EAAQkW,aAC9C,cAACiB,GAAA,EAAD,CAAKnc,GAAG,UACJoc,KAAM,qBAAKvT,IAAK0T,GAAYjU,UAAWtD,EAAQwW,YAAa1S,IAAI,YAChE,gBAAc,UAAUR,UAAWtD,EAAQkW,aAC/C,cAACiB,GAAA,EAAD,CAAKnc,GAAG,SACJoc,KAAM,qBAAKvT,IAAK2T,GAAWlU,UAAWtD,EAAQuW,WAAYzS,IAAI,WAC9D,gBAAc,SAASR,UAAWtD,EAAQkW,aAC9C,cAACiB,GAAA,EAAD,CAAKnc,GAAG,OACJoc,KAAM,qBAAKvT,IAAK4T,GAASnU,UAAWtD,EAAQqW,SAAUvS,IAAI,SAC1D,gBAAc,OAAOR,UAAWtD,EAAQkW,mBC9FtDjY,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BoJ,KAAM,CACJ,QAAS,CACPC,aAAc,KAGlBnB,aAAa,yBACXC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAF9C,gBAGVsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,UAGb7F,QAAS,CACP6F,QAAS,GACTG,UAAW,sCAIX4K,GAAkB5J,YAAW,CACjCC,KAAM,CACJC,MAAOzF,GACP,YAAa,CACXyF,MAAOxF,KAGXyF,QAAS,IAPaH,EAQrB,SAACnF,GAAD,OAAW,cAACgP,GAAA,EAAD,aAAU3J,MAAM,WAAcrF,OAEtCkF,GAAeC,YAAW,CAC9BC,KAAM,CACJC,MAAOxF,GACP,YAAa,CACXwF,MAAOxF,KAGXyF,QAAS,IAPUH,EAQlB,SAACnF,GAAD,OAAW,cAACuF,EAAA,EAAD,aAAOF,MAAM,WAAcrF,OAmS1Bod,GAhSO,SAAC,GAAiB,IAAf3X,EAAc,EAAdA,QACfC,EAAU/B,KACVgC,EAAUC,YAAQ,CAAEC,kBAAkB,IACtCwX,EAAWC,cACTxX,EAA0BH,EAA1BG,aAAcC,EAAYJ,EAAZI,QACtB,EAA4CmB,mBAASrI,GAArD,mBAAQ0e,EAAR,KAAuBC,EAAvB,KACA,EAA8CtW,mBAASpI,GAAvD,mBAAQud,EAAR,KAAwBC,EAAxB,KACA,EAA8BpV,mBAAS,IAAvC,mBAAOsI,EAAP,KAAgBC,EAAhB,KAGInJ,EAAYC,aAAaC,QAAQpH,IACjCqe,E/BvE8B,G+BwE9BC,E/BvE+B,G+ByE9BpX,GAGHA,EAAYK,KAAKC,MAAMN,IACTO,gBAAkBxI,IAC9Bof,E/B7E+B,G+B8E/BC,E/B7EgC,K+BwElCjY,EAAQyE,KAAK,KAQfuT,GAAenX,EAAU0M,YACzB0K,GAAgBpX,EAAU0M,YAkC1B,OACI,eAACnK,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,qBAAnC,SACI,eAACiF,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACuV,GAAA,EAAD,CAAa9S,MAAO,CAAEgF,aAAc,MACpC,cAAC,GAAD,CAAYoH,KAAM,SAG1B,cAACpD,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,2BAAkBiI,GAAlB,aACA,sBAAMqD,UAAWtD,EAAQV,KAAM4E,SAAU9D,GAnC9C,SAAC+D,GRjCO,IAAE8T,GQkCrBrX,EAAS,2BAAQA,GAAcuD,IACrB+T,gBAAkBvB,EAC5B/V,EAAUuX,aAAV,UAA4BvX,EAAUO,cAAtC,sBAAiE0W,EAAjE,UACAjX,EAAUwX,cAAgBP,IAAkB1e,EAAmB4e,EAAaC,EAC5EpX,EAAUyX,WAAazX,EAAUwX,cAAgBxX,EAAU0M,YAC3D1M,EAAUyX,WAAaxb,KAAKyb,MAA6B,IAAvB1X,EAAUyX,YAAoB,IAEhEzX,EAAU2X,gBAAkB,QAC5BxX,QAAQC,IAAIJ,GACZC,aAAayD,QAAQ5K,GAAYuH,KAAKsD,UAAU3D,IAE5C+V,IAAmBvd,GACnBue,ERrEc,mDAAM,WAAOA,GAAP,oGAExBA,EAAS,CAAE9R,KAAM4P,KAFO,SAIDI,KAAMxY,IAAN,eAJC,gBAIhB8G,EAJgB,EAIhBA,KAIRwT,EAAS,CACL9R,KAAM6P,GACN8C,QAASrU,IAVW,gDAaxBwT,EAAS,CACL9R,KAAM+P,GACN4C,QACI,KAAMC,UAAY,KAAMA,SAAStU,KAAK6J,QACpC,KAAMyK,SAAStU,KAAK6J,QACpB,KAAMA,UAlBQ,yDAAN,uDQsEdjO,EAAQyE,KAAK,sBAEbmT,GRjDiBM,EQiDIhX,KAAKsD,UAAU3D,GRjDrB,mDAAiB,WAAO+W,GAAP,sGAEpCA,EAAS,CAAE9R,KAAMoP,KAEXyD,EAAS,CACXC,QAAS,CACP,eAAgB,qBANc,SASb9C,KAAM+C,KAAN,oBAEnBX,EACAS,GAZgC,gBAS5BvU,EAT4B,EAS5BA,KAORwT,EAAS,CACL9R,KAAMqP,GACNsD,QAASrU,IAlBuB,kDAqBpCwT,EAAS,CACL9R,KAAMsP,GACNqD,QACI,KAAMC,UAAY,KAAMA,SAAStU,KAAK6J,QACpC,KAAMyK,SAAStU,KAAK6J,QACpB,KAAMA,UA1BoB,0DAAjB,wDQkDfjO,EAAQyE,KAAK,iBAkBD,SACE,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,mCAIP,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACIU,KAAK,gBACL6H,QAASA,EACToE,aAAcoT,EACdnT,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAhC,UACI,cAAC6I,GAAA,EAAD,CAAY5H,QAAM,EAAC6H,QAAQ,qBAA3B,SACK,mBAEL,cAACxK,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAGpJ,MAAO,CAAEuV,WAAY,OAAQ3Z,UAAW,OAAQoJ,aAAc,QAA1F,SAEQ,eAAC2F,EAAA,EAAD,2BAAgBP,GAAhB,IAAuB,aAAW,gBAAgB3J,GAAG,qBAAqBT,MAAO,CAAErD,cAAc,MAAO0H,MAAO,QAAWkP,QAAS,WAAO/D,EAAW,gBAAiBlF,SAAU,SAACM,EAAGC,GAAQ0S,EAAiB3S,EAAEiI,OAAOxI,OAAQD,EAAME,SAASM,EAAGC,IAAhP,UACE,cAAChC,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACuN,EAAA,EAAD,CAAkBV,MAAOzL,EAAkBkH,QAAS,cAAC,GAAD,IAAkBwC,MAAO,kCAAO,4CAAqB,uBAAM,2CAAc5F,GAAU4b,OAAOzb,KAAS2a,GAAae,OAAO,IAA5D,uBAEjH,cAAC1V,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACuN,EAAA,EAAD,CAAkBV,M/B/JvC,K+B+JiEvE,QAAS,cAAC,GAAD,IAAkBwC,MAAO,kCAAO,6CAAsB,uBAAM,2CAAc5F,GAAU4b,OAAOzb,KAAS4a,GAAcc,OAAO,KAA7D,qCAQ3I,cAAC1V,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAGjD,eAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACE,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,SACK,kBAEL,eAACZ,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAGpJ,MAAO,CAACuV,WAAY,IAAhD,UACE,cAAC1M,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,YAApB,SACK,oCAGT,cAACX,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,eAACsD,EAAA,EAAD,CAAY2I,QAAQ,YAApB,yBACanD,EAAY7D,GAAgB6D,EAAUO,eAAiB,GADpE,gBACsF,sBAAM5G,MAAO,CAACoF,MAAOxF,IAArB,mBAA8C8C,GAAU4b,OAAOhB,IAAkB1e,EAAmB4e,EAAaC,WAG3M,cAAC5U,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,eAACoQ,GAAA,EAAD,CAAMC,OAAK,EAAX,UACE,eAACN,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACIC,QAAO,oBAAe6P,IAAkB1e,EAAmB,IAAM,KAA1D,gBAGf,eAAC0O,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACIC,QAAO,oCAGf,eAACH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACIC,QAAO,2DAGf,eAACH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACIC,QAAO,wCAGf,eAACH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACIC,QAAO,sDAGf,eAACH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACIC,QAAO,kFAavB,cAAC5E,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAGjD,eAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAApB,sCACA,cAAC,GAAD,CACI4S,eAAgBA,EAChBC,kBAAmBA,EACnB7M,WAAYA,OAIpB,cAAC3G,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACmM,EAAA,EAAD,CAAS1J,MAAO,CAACpE,UAAW,EAAGoJ,aAAc,OAGjD,cAAC6D,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACIU,KAAK,gBACL6H,QAASA,EACToE,aAAc,GACdC,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAOgJ,QAAS,kBAAM/D,EAAW,kBAAjE,UACI,cAACoF,GAAA,EAAD,mCACA,cAAC7J,EAAA,EAAD,2BACQX,GADR,IAEItE,QAAS,cAAC,GAAD,IACT9F,MAAO,CAACpE,UAAW,GACnB0M,MAAO,6GAIrBoL,MAAO,CACHC,SAAU,qCAKlB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACE,cAAC,IAAD,CACIU,KAAK,cACL6H,QAASA,EACToE,aAAc,GACdC,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBG,EAAxB,EAAUC,WAAcD,MAAxB,OACJ,eAACE,EAAA,EAAD,CAAaC,WAAS,EAACH,QAASA,EAAOgJ,QAAS,kBAAM/D,EAAW,eAAjE,UACI,cAACoF,GAAA,EAAD,8BACA,cAAC7J,EAAA,EAAD,2BACQX,GADR,IAEItE,QAAS,cAAC,GAAD,IACT9F,MAAO,CAACpE,UAAW,GACnB0M,MAAO,2EAIrBoL,MAAO,CACHC,SAAU,qCAKlB,cAAC9K,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIC,GAAI,GAAIwC,MAAO,CAACpE,UAAW,GAAI2Z,WAAY,EAAG8E,YAAa,GAA9E,SACI,eAACrR,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAgB,gBAAiBuZ,GAAI,EAAzD,UACI,cAACvU,EAAA,EAAD,CACIyI,QAAQ,YACR5I,UAAWmM,IACXC,GAAG,WACHhN,MAAO,CAAEuV,WAAY,GAJzB,uBAOA,cAACxU,EAAA,EAAD,CACIuK,KAAK,SACL9B,QAAQ,YACRxJ,MAAO,CACHoF,MAAOvF,GACP6E,gBAAiB9E,IALzB,gDAed,cAACiJ,EAAA,EAAD,CAAMQ,MAAI,EAAC7L,GAAI,GAAIC,GAAI,EAAGuC,MAAO,CAACwV,WAAY,sBAAuB5Z,UAAW,GAAIoJ,aAAc,IAAlG,SACI,cAACgE,EAAA,EAAD,CAAKyM,GAAI,CACL5Y,QAAS,OACTd,eAAgB,SAChBW,WAAY,SACZ2H,MAAO,OACPL,OAAQ,OACRrH,cAAe,UANnB,SAQQ,cAAC,GAAD,CAAWyN,MAAOmF,mBCzV9C7L,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BkI,aAAa,yBACTC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAFhD,gBAGRsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,aAGf7F,QAAS,CACP6F,QAAS,GACTG,UAAW,sCAwEFsa,GApEc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUjZ,EAAc,EAAdA,QAChCC,EAAU/B,KACV0Z,EAAWC,cACXqB,EAAQD,EAASE,SAASC,MAAM,KAChCC,EAAYH,EAAMI,MAClB7L,EAAUyL,EAAMI,MACtB,EAAmDC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAxDC,GAAxB,EAAQC,QAAR,EAAiB5U,MAAjB,EAAwB2U,WAAWE,EAAnC,EAAmCA,YAuBnC,OArBA5Y,QAAQC,IAAIiY,EAAOzL,EAAS4L,G7B0EA,WAG5B,IAFA,IAAIQ,EAAUC,SAASC,OAAOX,MAAM,KAE3B1T,EAAI,EAAGA,EAAImU,EAAQvV,OAAQoB,IAAK,CACrC,IAAIqU,EAASF,EAAQnU,GACjBsU,EAAQD,EAAOrQ,QAAQ,KACvBjR,EAAOuhB,GAAS,EAAID,EAAOE,OAAO,EAAGD,GAASD,EAClDD,SAASC,OAASthB,EAAO,2C6BhF7ByhB,GAEA/M,qBAAU,WACFkM,GAAaA,EAAU/U,OAAS,I7ById,WAC5B,IACM6V,EAAerc,KAAKsc,MADT,KAEXrE,EAAW,CAAEsE,cAAe,GAAIC,OAAQ,IAAKC,MAAO,GAAIC,OAAQ,GAEtE,SAASC,EAActU,EAAKC,GAC1B,OAAOtJ,KAAK4d,UAAYtU,EAAMD,GAAOA,EAGvC,IAAMwU,EAAWC,aAAY,WAC3B,IAAMC,EAAWV,EAAerc,KAAKsc,MAErC,GAAIS,GAAY,EACd,OAAOC,cAAcH,GAGvB,IAAMI,EAAsBF,EAfb,KAeO,GAEtBG,aACE7H,OAAO8H,OAAO,GAAIlF,EAAU,CAC1BgF,gBACAG,OAAQ,CAAEC,EAAGV,EAAc,GAAK,IAAMW,EAAGte,KAAK4d,SAAW,OAG7DM,aACE7H,OAAO8H,OAAO,GAAIlF,EAAU,CAC1BgF,gBACAG,OAAQ,CAAEC,EAAGV,EAAc,GAAK,IAAMW,EAAGte,KAAK4d,SAAW,SAG5D,K6BtKOW,GACAzD,ETqEmB,SAAC,GAAD,IAAGnK,EAAH,EAAGA,QAAS4L,EAAZ,EAAYA,UAAZ,0DAA4B,WAAOzB,GAAP,sGAEnDA,EAAS,CAAE9R,KAAMwP,KAEXqD,EAAS,CACXC,QAAS,CACP,eAAgB,qBAN6B,SAS5B9C,KAAM+C,KAAN,wBAEnB,CAAEpL,UAAS4L,aACXV,GAZ+C,gBAS3CvU,EAT2C,EAS3CA,KAORwT,EAAS,CACL9R,KAAMyP,GACNkD,QAASrU,IAlBsC,kDAqBnDwT,EAAS,CACL9R,KAAM0P,GACNiD,QACI,KAAMC,UAAY,KAAMA,SAAStU,KAAK6J,QACpC,KAAMyK,SAAStU,KAAK6J,QACpB,KAAMA,UA1BmC,0DAA5B,sDSrEVqN,CAAgB,CACrB7N,UACA4L,gBAGJrZ,EAAQyE,KAAK,OAElB,CAAC4U,EAAWzB,EAAU5X,IAEzBmN,qBAAU,WACFuM,GAAaE,GACb5Y,QAAQC,IAAI2Y,KAEjB,CAACF,EAAWE,IAGX,eAACxW,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,uBACnC,cAACoF,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACyL,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAe,SAAnC,SACI,cAAC8E,EAAA,EAAD,CAAY2I,QAAQ,KAApB,oDAGR,eAACX,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACyL,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAe,SAAnC,SACI,cAAC8E,EAAA,EAAD,CAAY2I,QAAQ,KAApB,6DAEJ,cAACR,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAe,SAAnC,SACI,cAAC8E,EAAA,EAAD,CAAY2I,QAAQ,KAApB,oFAIR,cAACX,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACyL,EAAA,EAAD,CAAKnM,QAAQ,OAAOd,eAAe,WAAnC,SACI,cAACgF,EAAA,EAAD,CACIyI,QAAQ,YACRxJ,MAAO,CACHoF,MAAOvF,GACP6E,gBAAiB9E,IAErBoB,QAAS,WAAQsF,aAAaya,QAASvb,EAAQyE,KAAK,MANxD,kD,4BC3E1B+W,GAAS,SAAC,GAAY,IAAVC,EAAS,EAATA,GAChB,OACE,qBACEjhB,MAAO,CACLnD,QAAS,OACTd,eAAgB,SAChBsI,MAAO,OACPzI,UAAWqlB,EACXjc,aAAcic,GANlB,SASE,cAACC,GAAA,EAAD,CAAkBlhB,MAAO,CAACoF,MAAMxF,SAKtCohB,GAAOG,aAAe,CACpBF,GAAI,IAGSD,UCdA,SAASI,KACtB,IAAMC,EAASC,uBACTC,EAAWC,yBAEjB,EAA8Bva,mBAAS,MAAvC,mBAAOwM,EAAP,KAAgBgO,EAAhB,KACA,EAAkCxa,oBAAS,GAA3C,mBAAOya,EAAP,KAAkBC,EAAlB,KACA,EAAsC1a,mBAAS,IAA/C,mBAAO2a,EAAP,KAAoBC,EAApB,KACA,EAAiD9C,aAAY,SAACC,GAAD,OAAWA,EAAM8C,SAAtD5C,GAAxB,EAAQC,QAAR,EAAiB5U,MAAjB,EAAwB2U,WAAWxB,EAAnC,EAAmCA,UAEnC/K,qBAAU,WACJuM,GAAaxB,GACfmE,EAAenE,EAAUmB,aAE3B,CACEnB,EAAWwB,IAGf,IAAMrZ,EAAY,mDAAG,WAAO+E,GAAP,uFACnBA,EAAEiK,iBAEGwM,GAAWE,EAHG,wDASnBI,GAAa,GATM,SAWKN,EAAOU,aAAa,CAC1CR,WACAS,cAAe,CAEbC,WAAY,wCAAwCL,KAfrC,gBAyBA,gBAdXrX,EAXW,EAWXA,OAcEe,MAAwC,qBAAff,EAAMe,KACvCmW,EAAWlX,EAAMkJ,SAEjBgO,EAAW,iCAGbE,GAAa,GA/BM,4CAAH,sDAkClB,OACE,uBAAMlhB,GAAG,eAAekJ,SAAU9D,EAAlC,UACE,cAACmD,EAAA,EAAD,CAAK3E,MAAO,OAAQxH,QAAQ,OAAOd,eAAe,SAASmmB,GAAI,EAA/D,SACE,qBAAK5Y,IAAK8M,GAAMpW,MAAO,CAAEqE,MAAO,WAElC,cAAC,kBAAD,CAAgB5D,GAAG,oBACnB,wBAAQoZ,SAAU6H,IAAcL,IAAWE,EAAU9gB,GAAG,SAASsI,UAAU,oBAA3E,SACE,sBAAMtI,GAAG,cAAT,SACGihB,EAAY,qBAAK3Y,UAAU,UAAUtI,GAAG,YAAmB,qBAI/DgT,GAAW,qBAAKhT,GAAG,kBAAR,SAA2BgT,OC7D7C,IAAM/P,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BkI,aAAa,yBACTC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAFhD,gBAGRsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,aAGf7F,QAAS,CACP6F,QAAS,GACTG,UAAW,sCAIXie,GAAgBC,anCsBgB,8GmCtBmB,CACvDC,MAAO,CAAC,wBACRC,WAAY,+BA+ECC,GA5EQ,SAAC,GAAiB,IAAf/c,EAAc,EAAdA,QAChBC,EAAU/B,KAChB,EAAwCuD,mBAAS,IAAjD,mBAAOub,EAAP,KAAqBC,EAArB,KACA,EAAiD1D,aAAY,SAACC,GAAD,OAAWA,EAAM8C,SAAtE3C,EAAR,EAAQA,QAAgBD,GAAxB,EAAiB3U,MAAjB,EAAwB2U,WAAWxB,EAAnC,EAAmCA,UAE/BrX,EAAYC,aAAaC,QAAQpH,IAChCkH,EAGDA,EAAYK,KAAKC,MAAMN,GAFvBb,EAAQyE,KAAK,KAKjB0I,qBAAU,WACFuM,GAAaxB,GACb+E,EAAgB/E,EAAU8E,gBAE/B,CAAC9E,EAAWwB,EAAWuD,IAE1B,IAOMC,EAAU,CACZF,eACAG,WATe,CACfzmB,MAAO,SACP0mB,UAAW,CACPC,aAAcjjB,MAStB,OACI,eAACgJ,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,uBACnC,eAACoF,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,UACMsb,GACE,qCACI,cAAC,GAAD,IACA,cAACte,EAAA,EAAD,CAAY2I,QAAQ,KAApB,mDAGNgZ,GACE,cAACvZ,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,cAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,SACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACQ,cAAC,YAAD,CAAUmlB,QAASA,EAASrB,OAAQc,GAApC,SACI,cAACf,GAAD,mBC7ElC1d,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BkI,aAAa,yBACTC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAFhD,gBAGRsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,aAGf7F,QAAS,CACP6F,QAAS,GACTG,UAAW,kCAEb4e,KAAM,CACF7iB,WAAY,YA+FL8iB,GA3FO,SAAC,GAAgB,EAAdvd,QAAe,IAC9BC,EAAU/B,KAEhB,OACI,eAACkF,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,uBACnC,cAACoF,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,2BAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0BAGJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,gFAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8BAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,gCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0DACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,iCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,yDACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kEAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6OACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8EACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6GACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wCAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8BAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+FACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sDAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4BAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,iZACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wXAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8fACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oPAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8BAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sbACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oZAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+EACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0CClGtB/F,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BkI,aAAa,yBACTC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAFhD,gBAGRsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,aAGf7F,QAAS,CACP6F,QAAS,GACTG,UAAW,kCAEb4e,KAAM,CACF7iB,WAAY,YAmQL+iB,GA/PW,SAAC,GAAgB,EAAdxd,QAAe,IAClCC,EAAU/B,KAEhB,OACI,eAACkF,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,uBACnC,cAACoF,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,yCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wkBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,spBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qmBAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,uCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+eAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uGAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,4CACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8oBAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,uCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0MAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,ohBAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,uDACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4KAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,+BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8gBAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,wCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,giBAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,ykBAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,yCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0MAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0cAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,+BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4WAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2ZAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oFAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2OAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8EACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+BAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,iCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qCAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,4BAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6LACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,yoBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qMACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,syBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,knBAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,sEAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,s9BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+kCAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oEAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,24BAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,6FAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,obACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6UAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kDAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,8CACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mdAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,wCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kfACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+EACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mQACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wMACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sPACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mKACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8WACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2iBAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,4CACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,igBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0MAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,wEACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mYACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kKACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6QACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mTACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2NACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0JACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kaACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,w5BAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,iEACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sSACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,gPACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2NACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wPACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4PACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wZAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,wDACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,giCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,maACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kKAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,2CACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qdACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wYACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0iBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4eACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,ucAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,6FACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,q8BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,ikBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8NAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wPACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qNAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,uHACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4vBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qJACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6dACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6cACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,49BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,msBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0lBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qsCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,gVAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,uFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oyBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oJACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oTACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,83BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wpBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,ynBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qmBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sUACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+KAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oDACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+zEAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,+HACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qQAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,oFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8TAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,2RACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uvCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,uEACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uIAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,0GACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,gRACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,odACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+vBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+DACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,ozCAGJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,gBClRjCmG,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BkI,aAAa,yBACTC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAFhD,gBAGRsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,aAGf7F,QAAS,CACP6F,QAAS,GACTG,UAAW,kCAEb4e,KAAM,CACF7iB,WAAY,YA8DLgjB,GA1DM,SAAC,GAAgB,EAAdzd,QAAe,IAC7BC,EAAU/B,KAEhB,OACI,eAACkF,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,uBACnC,cAACoF,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACI,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,wCAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kcAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4eAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2KAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mxBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2aAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0CAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qIAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mBACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8EACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4BACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,gDAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,qLACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,gEACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+EACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4GACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,yCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2DCvEtB/F,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BkI,aAAa,yBACTC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAFhD,gBAGRsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,aAGf7F,QAAS,CACP6F,QAAS,GACTG,UAAW,kCAEb4e,KAAM,CACF7iB,WAAY,YA6HLijB,GAzHG,SAAC,GAAgB,EAAd1d,QAAe,IAC1BC,EAAU/B,KAEhB,OACI,eAACkF,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,uBACnC,cAACoF,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,SACoB,cAACoF,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACZ,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,UACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,YAAYC,cAAY,EAA5C,+aAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,+DAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,0eAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wcAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,+DAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,m0BAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6aAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,uCAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mDACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kFAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kJAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+UAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mGACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sKACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2cACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8NAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,2FAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wMAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,uEAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+jBAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8TAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kDAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sxCAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mHAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,kCACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,yXAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,KAAKC,cAAY,EAArC,2CAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sDAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sbAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,khBAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,SACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4GAEJ,eAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAf,UACI,cAACsD,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mEACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,6JACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,yXACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4FACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,mGACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oDACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8LACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,oSACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,gFACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,wJACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,2EACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,8JACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,4NACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,kWACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,saACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,iJACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,sHACA,cAAC5I,EAAA,EAAD,CAAY2I,QAAQ,QAAQC,cAAY,EAAxC,+DAEJ,cAACZ,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,gB,8BCrIvC+d,KAAMC,SAASC,iBAAkB,EACjCF,KAAMC,SAASE,eAAiB,cAChCH,KAAMC,SAASG,eAAiB,YAEhC,IAAMyH,GAAqB,WACvB,IAAM3d,EAAU4d,cAChB,EAAwBC,eAAfC,EAAT,oBAASA,UACLjd,EAAYC,aAAaC,QAAQpH,IAOrC,OANKkH,EAGDA,EAAYK,KAAKC,MAAMN,GAFvBG,QAAQC,IAAI,oBAMZ,qCACM6c,GAAa,cAAC,GAAD,IACf,cAAC,KAAD,CACIC,YAAa,SAAC3Z,EAAM4Z,GAahB,OADAhd,QAAQC,IAAI,WAAYJ,GACjBiV,KAAM+C,KAAK,oBACd3X,KAAKsD,UAAU3D,GACf,CACI+X,QAAS,CACL,eAAgB,sBAIzBqF,MAAK,YAAa,IAAX7Z,EAAU,EAAVA,KAA+B,OAAnBpD,QAAQC,IAAImD,GAAcA,KAC7C6Z,MAAK,SAAC3B,GAA6C,OAAjCtb,QAAQC,IAAI,YAAaqb,GAAeA,EAAMrhB,OAEvEijB,UAAW,SAAC9Z,EAAM4Z,GACd,OAAOA,EAAQ1B,MAAM6B,UAAUF,MAAK,SAACG,GACpBA,EAAQC,MAAM5lB,KAAK6lB,WAMhC,OAFAtd,QAAQC,IAAI,uBAAwBmd,GAE7Bpe,EAAQyE,KAAK,mBAAqB2Z,EAAO,QAGxDG,SAAU,WACNvd,QAAQC,IAAI,qBAEhBud,QAAS,SAACC,GACNzd,QAAQC,IAAI,6BAA8Bwd,IAE9CjjB,QAAS,SAAC4I,EAAM4Z,GAKR,OAAOA,EAAQU,WAGvBlkB,MAAO,CACHoF,MAAO,SACP+e,OAAQ,WACRngB,OAAQ,GACRogB,SAAS,EACTC,MAAO,cAOZ,SAASjD,GAAT,GAAoD,IACzDkD,EAAiB,CACnB,YAF0D,EAA3BC,UAG/B1hB,SAAU,MACV,oBAJ0D,EAAhB2hB,cAO9C,OACI,cAAC,KAAD,CAAsB9B,QAAS4B,EAA/B,SACI,cAAC,GAAD,MCvFZ,IAAM5gB,GAAYC,aAAW,SAACzH,GAAD,MAAY,CACrC0H,qBAAqB,eAChB1H,EAAMK,OAAOC,UAAUb,aAE5BkI,aAAa,yBACTC,SAAU,YACP5H,EAAMK,OAAOC,UAAUC,UAAU,SAAU,SAAU,WAFhD,gBAGRsH,QAAS,WACTC,OAAQ,QACP9H,EAAMkB,YAAY6G,KAAK,MAAQ,CAC9BF,QAAS,aAGf7F,QAAS,CACP6F,QAAS,GACTG,UAAW,sCAgDFugB,GA5CM,SAAC,GAAiB,IAAfjf,EAAc,EAAdA,QACdC,EAAU/B,KAChB,EAAwDqb,aAAY,SAACC,GAAD,OAAWA,EAAM0F,gBAA7EvF,EAAR,EAAQA,QAAgBD,GAAxB,EAAiB3U,MAAjB,EAAwB2U,WAAWyF,EAAnC,EAAmCA,iBAE/Bte,EAAYC,aAAaC,QAAQpH,IAerC,OAdKkH,EAGDA,EAAYK,KAAKC,MAAMN,GAFvBb,EAAQyE,KAAK,KAKjB0I,qBAAU,WACFuM,GAAayF,GACbne,QAAQC,IAAI,aAAcke,KAE/B,CACCzF,EAAWyF,IAIX,eAAC/b,EAAA,EAAD,CAAW3M,SAAS,KAApB,UACI,cAAC,EAAD,CAAM4B,MAAM,sHACZ,cAACgL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtD,EAAQ7B,uBACnC,eAACoF,EAAA,EAAD,CAAKD,UAAWtD,EAAQ5B,aAAxB,UACMsb,GACE,qCACI,cAAC,GAAD,IACA,cAACte,EAAA,EAAD,CAAY2I,QAAQ,KAApB,mDAGNmb,GAAoBA,EAAiBJ,WACnC,cAACtb,EAAA,EAAD,CAAOC,UAAW,EAAGH,UAAWtD,EAAQvH,QAASiL,QAAM,EAAvD,SACI,cAACN,EAAA,EAAD,CAAMC,WAAS,EAACM,QAAS,EAAzB,SACI,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAC9L,GAAI,GAAIyC,MAAO,CAAC4kB,SAAU,KAArC,SACI,cAAC,GAAD,CAAcL,UAAWI,EAAiBJ,UAAWC,aAAcG,EAAiBH,4BCZrGK,GA5BH,WACR,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAaC,QAAM,EAAC1f,MAAOxF,GAAoBI,MAAO,CAAE+kB,MAAO,GAAIC,OAAQ,MAC3E,cAAC,GAAD,IACA,uBAAMjc,UAAU,OAAhB,UACI,cAAC,IAAD,CAAOkc,KAAK,IAAIrkB,UAAW2E,GAAe2f,OAAK,IAC/C,cAAC,IAAD,CAAOD,KAAK,YAAYrkB,UAAWyO,KACnC,cAAC,IAAD,CAAO4V,KAAK,WAAWrkB,UAAW8V,KAClC,cAAC,IAAD,CAAOuO,KAAK,WAAWrkB,UAAWqZ,KAClC,cAAC,IAAD,CAAOgL,KAAK,WAAWrkB,UAAWuc,GAAe+H,OAAK,IACtD,cAAC,IAAD,CAAOD,KAAK,YAAYrkB,UAAW2hB,KACnC,cAAC,IAAD,CAAO0C,KAAK,mBAAmBrkB,UAAW6jB,KAC1C,cAAC,IAAD,CAAOQ,KAAK,6BAA6BrkB,UAAW4d,KACpD,cAAC,IAAD,CAAOyG,KAAK,WAAWrkB,UAAWmiB,KAClC,cAAC,IAAD,CAAOkC,KAAK,gBAAgBrkB,UAAWoiB,KACvC,cAAC,IAAD,CAAOiC,KAAK,OAAOrkB,UAAWsiB,KAC9B,cAAC,IAAD,CAAO+B,KAAK,UAAUrkB,UAAWqiB,QAErC,cAAC,GAAD,Y,6BCpCdkC,GAAWC,2BAAgB,CAC7BC,QCKgC,WAAyB,IAAxBrG,EAAuB,uDAAf,GAAIsG,EAAW,uCACxD,OAAQA,EAAOha,MACX,KAAKgP,GACD,MAAO,CAAE6E,SAAS,GACtB,KAAK5E,GACD,MAAO,CAAE4E,SAAS,EAAOD,WAAW,EAAMqG,eAAgBD,EAAOrH,SACrE,KAAKzD,GACD,MAAO,CAAE2E,SAAS,EAAO5U,MAAO+a,EAAOrH,SAC3C,KAAKxD,GACD,MAAO,GACX,QACI,OAAOuE,IDff8C,MCmB8B,WAAyB,IAAxB9C,EAAuB,uDAAf,GAAIsG,EAAW,uCACtD,OAAQA,EAAOha,MACX,KAAKoP,GACD,MAAO,CAAEyE,SAAS,GACtB,KAAKxE,GACD,MAAO,CAAEwE,SAAS,EAAOD,WAAW,EAAMxB,UAAW4H,EAAOrH,SAChE,KAAKrD,GACD,MAAO,CAAEuE,SAAS,EAAO5U,MAAO+a,EAAOrH,SAC3C,KAAKpD,GACD,MAAO,GACX,QACI,OAAOmE,ID7BfC,QCiC0B,WAAyB,IAAxBD,EAAuB,uDAAf,GAAIsG,EAAW,uCAClD,OAAQA,EAAOha,MACX,KAAKwP,GACD,MAAO,CAACqE,SAAS,GACrB,KAAKpE,GACD,MAAO,CAACoE,SAAS,EAAOD,WAAW,EAAME,YAAakG,EAAOrH,SACjE,KAAKjD,GACD,MAAO,CAACmE,SAAS,EAAO5U,MAAO+a,EAAOrH,SAC1C,KAAKhD,GACD,MAAO,GACX,QACI,OAAO+D,ID3Cf0F,aC+C6B,WAAyB,IAAxB1F,EAAuB,uDAAf,GAAIsG,EAAW,uCACrD,OAAQA,EAAOha,MACX,KAAK4P,GACD,MAAO,CAACiE,SAAS,GACrB,KAAKhE,GACD,MAAO,CAACgE,SAAS,EAAOD,WAAW,EAAMyF,iBAAkBW,EAAOrH,SACtE,KAAK7C,GACD,MAAO,CAAC+D,SAAS,EAAO5U,MAAO+a,EAAOrH,SAC1C,KAAK5C,GACD,MAAO,GACX,QACI,OAAO2D,MDhDbwG,GAAc,CAACC,MAQNC,GANDC,uBACVR,GAViB,CACjBE,QAAS,GACTvD,MAAO,GACP7C,QAAS,GACTyF,aAAc,IAQdkB,+BAAoBC,mBAAe,WAAf,EAAmBL,MEd3CM,IAAS3b,OACL,cAAC,IAAD,CAAUub,MAAOA,GAAjB,SACI,eAACK,EAAA,EAAD,CAAe7pB,MAAOA,EAAtB,UACI,cAAC8pB,EAAA,EAAD,IACA,cAAC,GAAD,SAGR1G,SAAS2G,eAAe,W","file":"static/js/main.edfda0cb.chunk.js","sourcesContent":["const flexMixin = (\n  justifyContent = 'flex-start',\n  alignItems = 'flex-start',\n  flexDirection = 'row',\n  flexWrap = 'nowrap'\n) => ({\n  display: 'flex',\n  flexDirection,\n  justifyContent,\n  alignItems,\n  flexWrap,\n});\n\nconst centerFlex = (flexFlow = 'row nowrap') => ({\n  display: 'flex',\n  flexFlow,\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nconst textOverflowEllipse = {\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n};\n\nconst textClamp = (lineClamp) => ({\n  display: '-webkit-box',\n  WebkitBoxOrient: 'vertical',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  WebkitLineClamp: lineClamp,\n});\n\nconst breadcrumbs = {\n  marginTop: 64,\n  paddingTop: 30,\n  paddingBottom: 30,\n  '& .MuiBreadcrumbs-ol': {\n    justifyContent: 'center',\n  },\n  '@media (max-width: 600px)': {\n    marginTop: 56,\n    '& .MuiBreadcrumbs-li': {\n      textAlign: 'center',\n      maxWidth: '300px',\n      ...textOverflowEllipse,\n    },\n  },\n};\n\nexport { flexMixin, centerFlex, textOverflowEllipse, textClamp, breadcrumbs };\n","import { createTheme } from '@material-ui/core/styles';\nimport {\n  flexMixin,\n  centerFlex,\n  textOverflowEllipse,\n  textClamp,\n  breadcrumbs,\n} from './mixins';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: ['PF Din Text Universal Light'].join(','),\n  },\n  mixins: {\n    customize: {\n      flexMixin,\n      centerFlex,\n      textClamp,\n      textOverflowEllipse,\n      breadcrumbs,\n    },\n  },\n  breakpoints: {\n    keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 740,\n      lg: 960,\n      xl: 1280,\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keyword' content={keywords} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default Meta;","export default __webpack_public_path__ + \"static/media/bucket.f76fd82a.png\";","export const CUSTOMER_TYPE_PRIVATE = 'Privat';\r\nexport const CUSTOMER_TYPE_BUSINESS = 'Gewerbe';\r\n\r\nexport const ORDER_REASON_MOVE = 'Umzug';\r\nexport const ORDER_REASON_ABSENCE_VACATION = 'Abwesenheit / Urlaub';\r\nexport const ORDER_REASON_CARE_CASE = 'Betreuungsfall';\r\nexport const ORDER_REASON_DEATH = 'Sterbefall';\r\nexport const ORDER_REASON_INSOLVENCY = 'Insolvenz';\r\n\r\nexport const ORDER_TIME_IMMEDIATE = 'Sofort (5 Werktage Vorlauf)';\r\nexport const ORDER_TIME_LATER = 'Späterer Startzeitpunkt';\r\n\r\nexport const PAYMENT_6_MONTHS = '6';\r\nexport const PAYMENT_12_MONTHS = '12';\r\n\r\nexport const PRICE_PRIVATE_6_MONTHS = 67.00;\r\nexport const PRICE_PRIVATE_12_MONTHS = 87.00;\r\nexport const PRICE_BUSINESS_6_MONTHS = 97.00;\r\nexport const PRICE_BUSINESS_12_MONTHS = 117.00;\r\n\r\nexport const PAYMENT_SERVICE_PAYPAL = 'paypal';\r\nexport const PAYMENT_SERVICE_STRIPE = 'stripe';\r\n\r\nexport const SALUTATION_MR = 'Herr';\r\nexport const SALUTATION_MRS = 'Frau';\r\nexport const SALUTATION_DIVERS = 'Divers';\r\n\r\nexport const SELECTED = 'Ausgewählt';\r\nexport const NOT_SELECTED = 'Nicht ausgewählt';\r\n\r\nexport const ORDER_INFO = 'ORDER_INFO';\r\n\r\n// export const PRODUCTS = [\r\n//     {\r\n//         type: PAYMENT_6_MONTHS,\r\n//         name: '6 Months Plan for Private User',\r\n//         price: PRICE_PRIVATE_6_MONTHS\r\n//     },\r\n//     {\r\n//         type: PAYMENT_12_MONTHS,\r\n//         name: '12 Months Plan for Private User',\r\n//         price: PRICE_PRIVATE_12_MONTHS\r\n//     }\r\n// ];\r\n\r\nexport const PRIVATE_6_BASEURL = 'price_1L9lseCxR8aIBa9P4qo3z7fE';\r\nexport const PRIVATE_12_BASEURL = 'price_1L9lt6CxR8aIBa9Po58iffnh';\r\nexport const BUSINESS_6_BASEURL = 'price_1L9ltxCxR8aIBa9PK9T5YVgo';\r\nexport const BUSINESS_12_BASEURL = 'price_1L9luOCxR8aIBa9PhftXUixq';\r\n\r\nexport const KLARNA_TEST_USERNAME = 'PK58116_39fea5fb74df';\r\nexport const KLARNA_TEST_PASSWORD = 'ohH9pqVEPIeu6t9P';\r\n\r\nexport const STRIPE_TEST_PUBLIC_KEY = 'pk_test_51L8i6WCxR8aIBa9PPPwmgGZzROG2maC6nusisMnwTH7c4Wb3yFAub9GG12mUIY0NebYIdwFTB5I0F7moCU9WQU7O00h9QCUtKI';\r\n\r\nexport const OTHER_SERVICES = [\r\n    {\r\n        name: 'allgäu mail',\r\n    },\r\n    {\r\n        name: 'Arriva',\r\n    },\r\n    {\r\n        name: 'Brief und Mehr',\r\n    },\r\n    {\r\n        name: 'Brief und mehr Westmünsterland',\r\n    },\r\n    {\r\n        name: 'Brieflogistik Oberfranken',\r\n    },\r\n    {\r\n        name: 'BWPOST + 69,90 EUR',\r\n        private: 69.90,\r\n        business: 69.90,\r\n        private_6_url: 'price_1L9lvbCxR8aIBa9Pt5e4Z2Rl',\r\n        private_12_url: 'price_1L9lzFCxR8aIBa9PONkzJ3o9',\r\n        business_6_url: 'price_1L9m2jCxR8aIBa9PplSUqS6u',\r\n        business_12_url: 'price_1L9m62CxR8aIBa9Po9fAWNms',\r\n    },\r\n    {\r\n        name: 'ChiemgauPost',\r\n    },\r\n    {\r\n        name: 'CITIPOST Hannover',\r\n    },\r\n    {\r\n        name: 'City Mail',\r\n    },\r\n    {\r\n        name: 'DAZ Brief- und Kurierdienst',\r\n    },\r\n    {\r\n        name: 'DEBEX',\r\n    },\r\n    {\r\n        name: 'Kurierfox',\r\n    },\r\n    {\r\n        name: 'LMF',\r\n    },\r\n    {\r\n        name: 'Der Lünebote + 16,90 EUR',\r\n        private: 16.90,\r\n        business: 16.90,\r\n        private_6_url: 'price_1L9lw8CxR8aIBa9PE1y01fz1',\r\n        private_12_url: 'price_1L9lziCxR8aIBa9PiqA9dyjZ',\r\n        business_6_url: 'price_1L9m3KCxR8aIBa9PLnepTQ7l',\r\n        business_12_url: 'price_1L9m6OCxR8aIBa9P9ocFNPAj',\r\n    },\r\n    {\r\n        name: 'Main-BriefLogistik',\r\n    },\r\n    {\r\n        name: 'Main-PostLogistik',\r\n    },\r\n    {\r\n        name: 'Main-Kinzig-Post',\r\n    },\r\n    {\r\n        name: 'Morgenpost Briefservice + 26 EUR',\r\n        private: 26.00,\r\n        business: 26.00,\r\n        private_6_url: 'price_1L9lwTCxR8aIBa9PxyHv97d1',\r\n        private_12_url: 'price_1L9m01CxR8aIBa9PuDmIrpiR',\r\n        business_6_url: 'price_1L9m3iCxR8aIBa9P4hAG2GT7',\r\n        business_12_url: 'price_1L9m6uCxR8aIBa9PbmrLWMmx',\r\n    },\r\n    {\r\n        name: 'Nordkurier 28,00 EUR',\r\n        private: 28.00,\r\n        business: 28.00,\r\n        private_6_url: 'price_1L9lwqCxR8aIBa9PFxUKviGk',\r\n        private_12_url: 'price_1L9m0KCxR8aIBa9PKzxNAeVy',\r\n        business_6_url: 'price_1L9m42CxR8aIBa9PFEGQuA7Q',\r\n        business_12_url: 'price_1L9m77CxR8aIBa9P6lfhqWbP',\r\n    },\r\n    {\r\n        name: 'PIN MAIL Woltersdorf',\r\n    },\r\n    {\r\n        name: 'PostModern 24,90 ERU',\r\n        private: 24.90,\r\n        business: 24.90,\r\n        private_6_url: 'price_1L9lx8CxR8aIBa9PlEUHwvux',\r\n        private_12_url: 'price_1L9m0iCxR8aIBa9P29KJADay',\r\n        business_6_url: 'price_1L9m4QCxR8aIBa9PRuD1uczn',\r\n        business_12_url: 'price_1L9m7PCxR8aIBa9PROvgPR0u',\r\n    },\r\n    {\r\n        name: 'PIN MAIL Woltersdorf',\r\n    },\r\n    {\r\n        name: 'PIN AG + 29,90 EUR, für Unternehmen 49,90 EUR',\r\n        private: 29.90,\r\n        business: 49.90,\r\n        private_6_url: 'price_1L9lxhCxR8aIBa9PvQlxMpCl',\r\n        private_12_url: 'price_1L9m10CxR8aIBa9PaVVB7OeJ',\r\n        business_6_url: 'price_1L9m4iCxR8aIBa9PBsdwlrBP',\r\n        business_12_url: 'price_1L9m7pCxR8aIBa9P5Ozb4ZKn',\r\n    },\r\n    {\r\n        name: 'sMail',\r\n    },\r\n    {\r\n        name: 'Trierer Briefservice 24,90 EUR',\r\n        private: 24.90,\r\n        business: 24.90,\r\n        private_6_url: 'price_1L9ly4CxR8aIBa9PjYLQK02k',\r\n        private_12_url: 'price_1L9m1RCxR8aIBa9PGyo1AfDc',\r\n        business_6_url: 'price_1L9m59CxR8aIBa9P3WzDwVpA',\r\n        business_12_url: 'price_1L9m8ACxR8aIBa9Pcf2GVFCv',\r\n    },\r\n    {\r\n        name: 'Turbo P.O.S.T. 67,00 EUR',\r\n        private: 67.00,\r\n        business: 67.00,\r\n        private_6_url: 'price_1L9lyUCxR8aIBa9PvHArNPRm',\r\n        private_12_url: 'price_1L9m23CxR8aIBa9Pg9UFhDWi',\r\n        business_6_url: 'price_1L9m5VCxR8aIBa9PH9kxM2e6',\r\n        business_12_url: 'price_1L9m8QCxR8aIBa9PdQgQj8Bh',\r\n    },\r\n];","// SOLID COLORS\r\nexport const COLOR_PRIMARY = '#e91627';\r\nexport const COLOR_PRIMARY_DARK = '#bd111f';\r\nexport const COLOR_SECONDARY = '#7689DE';\r\nexport const COLOR_SECONDARY_DARK = '#212D63';\r\n// export const COLOR_PRIMARY = '#FFC0CB';\r\n// export const COLOR_PRIMARY_DARK = '#ff6781';\r\nexport const COLOR_WHITE = '#fff';\r\n\r\nexport const COLOR_GRAY_1 = '#929292';","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst wrapWithBold = (props) => {\r\n    return <span style={{fontWeight: \"bold\"}}>\r\n        {props}\r\n    </span>\r\n}\r\n\r\nconst InsolvencyDialog = ({ openModal, handleCloseModal }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Insolvenz - Bitte beachten\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Bitte beachten Sie, dass Sie bei der Angabe der Anschrift den {wrapWithBold(\"insolventen Betrieb\")} im dafür vorgesehenen Feld eintragen müssen. Bitte tragen Sie dort {wrapWithBold(\"nicht\")} Ihre eigene Firma oder sich selbst ein!\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default InsolvencyDialog;","import {\r\n    BUSINESS_12_BASEURL,\r\n    BUSINESS_6_BASEURL,\r\n    CUSTOMER_TYPE_BUSINESS,\r\n    CUSTOMER_TYPE_PRIVATE,\r\n    ORDER_REASON_ABSENCE_VACATION,\r\n    ORDER_REASON_CARE_CASE,\r\n    ORDER_REASON_DEATH,\r\n    ORDER_REASON_INSOLVENCY,\r\n    ORDER_REASON_MOVE,\r\n    ORDER_TIME_IMMEDIATE,\r\n    ORDER_TIME_LATER,\r\n    OTHER_SERVICES,\r\n    PAYMENT_6_MONTHS, PRICE_BUSINESS_12_MONTHS,\r\n    PRICE_BUSINESS_6_MONTHS, PRICE_PRIVATE_12_MONTHS,\r\n    PRICE_PRIVATE_6_MONTHS,\r\n    PRIVATE_12_BASEURL,\r\n    PRIVATE_6_BASEURL,\r\n} from \"./constants/key.constant\";\r\nimport confetti from 'canvas-confetti';\r\n\r\nexport const getNowDate = () => {\r\n    const today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    \r\n    return yyyy + '-' + mm + '-' + dd;\r\n}\r\n\r\nexport const getXAfterDate = (date, days, years = 0) => {\r\n    date.setFullYear(date.getFullYear() + years);\r\n    date.setDate(date.getDate() + days);\r\n\r\n    var dd = String(date.getDate()).padStart(2, '0');\r\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = date.getFullYear();\r\n\r\n    return yyyy + '-' + mm + '-' + dd;\r\n}\r\n\r\nexport const getDaysBetweenDates = (date_1, date_2) => {\r\n    let difference = date_1.getTime() - date_2.getTime();\r\n    let TotalDays = Math.ceil(difference / (1000 * 3600 * 24));\r\n    return TotalDays\r\n};\r\n\r\nexport const getCustomerType = (key) => {\r\n    switch(key) {\r\n        case CUSTOMER_TYPE_PRIVATE:\r\n            return 'Privat';\r\n        case CUSTOMER_TYPE_BUSINESS:\r\n            return 'Geschäftlich';\r\n        default:\r\n            break;\r\n    }\r\n    return '';\r\n};\r\n\r\nexport const getOrderReason = (key) => {\r\n    switch(key) {\r\n        case ORDER_REASON_MOVE:\r\n            return 'Umzug';\r\n        case ORDER_REASON_ABSENCE_VACATION:\r\n            return 'Abwesenheit / Urlaub';\r\n        case ORDER_REASON_CARE_CASE:\r\n            return 'Betreuungsfall';\r\n        case ORDER_REASON_DEATH:\r\n            return 'Sterbefall';\r\n        case ORDER_REASON_INSOLVENCY:\r\n            return 'Insolvenz';\r\n        default:\r\n            break;\r\n    }\r\n    return '';\r\n};\r\n\r\nexport const getOrderTime = (key) => {\r\n    switch(key) {\r\n        case ORDER_TIME_IMMEDIATE:\r\n            return 'Sofort (5 Werktage Vorlauf)';\r\n        case ORDER_TIME_LATER:\r\n            return 'Späterer Startzeitpunkt';\r\n        default:\r\n            break;\r\n    }\r\n    return '';\r\n};\r\n\r\nexport const formatter = new Intl.NumberFormat('de-DE', {\r\n    style: 'currency',\r\n    currency: 'EUR'\r\n})\r\n\r\nexport const getCookie = (name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n};\r\n\r\nexport const deleteAllCookies = () => {\r\n    var cookies = document.cookie.split(\";\");\r\n\r\n    for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i];\r\n        var eqPos = cookie.indexOf(\"=\");\r\n        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n        document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n    }\r\n}\r\n\r\nexport const getProductDetails = (data, paymentMethod) => {\r\n    console.log(data.customerType);\r\n    console.log(paymentMethod);\r\n    console.log(data.otherService);\r\n    let product = {\r\n        customer: data.customerType,\r\n        other_service: data.otherService,\r\n        payment_method: paymentMethod\r\n    };\r\n    const serviceProduct = OTHER_SERVICES.find(service => service.name === data.otherService);\r\n    console.log(serviceProduct);\r\n    if (serviceProduct) {\r\n        if (data.customerType === CUSTOMER_TYPE_PRIVATE) {\r\n            if (paymentMethod === PAYMENT_6_MONTHS) {\r\n                product.price = PRICE_PRIVATE_6_MONTHS + get(serviceProduct, 'private', 0);\r\n                product.url = get(serviceProduct,'private_6_url', PRIVATE_6_BASEURL);\r\n            } else {\r\n                product.price = PRICE_PRIVATE_12_MONTHS + get(serviceProduct, 'private', 0);\r\n                product.url = get(serviceProduct,'private_12_url', PRIVATE_12_BASEURL);\r\n            }\r\n        } else {\r\n            if (paymentMethod === PAYMENT_6_MONTHS) {\r\n                product.price = PRICE_BUSINESS_6_MONTHS + get(serviceProduct, 'business', 0);\r\n                product.url = get(serviceProduct, 'business_6_url', BUSINESS_6_BASEURL);\r\n            } else {\r\n                product.price = PRICE_BUSINESS_12_MONTHS + get(serviceProduct, 'business', 0);\r\n                product.url = get(serviceProduct, 'business_12_url', BUSINESS_12_BASEURL);\r\n            }\r\n        }\r\n    } else {\r\n        if (data.customerType === CUSTOMER_TYPE_PRIVATE) {\r\n            if (paymentMethod === PAYMENT_6_MONTHS) {\r\n                product.price = PRICE_PRIVATE_6_MONTHS;\r\n                product.url = PRIVATE_6_BASEURL;\r\n            } else {\r\n                product.price = PRICE_PRIVATE_12_MONTHS;\r\n                product.url = PRIVATE_12_BASEURL;\r\n            }\r\n        } else {\r\n            if (paymentMethod === PAYMENT_6_MONTHS) {\r\n                product.price = PRICE_BUSINESS_6_MONTHS;\r\n                product.url = BUSINESS_6_BASEURL;\r\n            } else {\r\n                product.price = PRICE_BUSINESS_12_MONTHS;\r\n                product.url = BUSINESS_12_BASEURL;\r\n            }\r\n        }\r\n    }\r\n    return product;\r\n}\r\n\r\nexport const get = (object, key, default_value) => {\r\n    var result = object[key];\r\n    return (typeof result !== \"undefined\") ? result : default_value;\r\n}\r\n\r\nexport const shootFireworks = () => {\r\n  const duration = 15 * 1000;\r\n  const animationEnd = Date.now() + duration;\r\n  const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\r\n\r\n  function randomInRange(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n\r\n  const interval = setInterval(function () {\r\n    const timeLeft = animationEnd - Date.now();\r\n\r\n    if (timeLeft <= 0) {\r\n      return clearInterval(interval);\r\n    }\r\n\r\n    const particleCount = 50 * (timeLeft / duration);\r\n    // since particles fall down, start a bit higher than random\r\n    confetti(\r\n      Object.assign({}, defaults, {\r\n        particleCount,\r\n        origin: { x: randomInRange(0.2, 0.4), y: Math.random() - 0.2 },\r\n      })\r\n    );\r\n    confetti(\r\n      Object.assign({}, defaults, {\r\n        particleCount,\r\n        origin: { x: randomInRange(0.6, 0.8), y: Math.random() - 0.2 },\r\n      })\r\n    );\r\n  }, 250);\r\n};\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport { getDaysBetweenDates, getXAfterDate } from '../../utils';\r\n\r\nconst OrderDateDiffErrorDialog = ({ openModal, handleCloseModal, deliverAgainDate, laterStartTime }) => {\r\n    const diffDays = getDaysBetweenDates(new Date(deliverAgainDate), new Date(laterStartTime));\r\n    const isBefore = diffDays <= 0;\r\n\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Bitte korrigieren Sie Ihre Eingabe:\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    {isBefore ? (\r\n                        <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                            {`Ihr gewähltes Stardatum (${laterStartTime}) muss hinter dem gewählten Enddatum (${deliverAgainDate}) liegen. Bitte beachten Sie auch, dass das Startdatum auch bei sofortiger Beantragung eine Vorlaufzeit von 5 Werktagen hat.`}\r\n                        </Typography>\r\n                    ) :\r\n                    (\r\n                        <>\r\n                            <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                                {`Die Dauer des Nachsendeauftrag muss mindestens 2 Wochen betragen. Das frühste mögliche Datum der Wiederzustellung ist der ${getXAfterDate(new Date(laterStartTime), 14)}`}\r\n                            </Typography>\r\n                            <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                                Möglicherweise suchen Sie eher nach einem Lagerauftrag.\r\n                            </Typography>\r\n                            <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                                Hierbei wird Ihre Post kurzzeitig gelagert und nach Ihrer Abwesenheit wieder an die alte Adresse zugestellt. Sie können diesen hier beauftragen\r\n                            </Typography>\r\n                        </>\r\n                    )\r\n                    }\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default OrderDateDiffErrorDialog;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst NoRedicrectionDateDialog = ({ openModal, handleCloseModal }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Bitte korrigieren Sie Ihre Eingabe:\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        {`Sie müssen ein Startdatum des Nachsendeauftrag angeben!`}\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default NoRedicrectionDateDialog;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getXAfterDate } from '../../utils';\r\n\r\n\r\nconst NoStartDateDialog = ({ openModal, handleCloseModal }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Bitte korrigieren Sie Ihre Eingabe:\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        {`Sie müssen ein Startdatum des Nachsendeauftrag angeben! Der frühste Termin ist der: ${getXAfterDate(new Date(), 8)}`}\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default NoStartDateDialog;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nconst CarecaseDialog = ({ openModal, handleCloseModal }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Betreuungsfall - Bitte beachten\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Bei einem Betreuungsfall benötigen wir nach Beantragung Ihren Betreuerausweis und Ihre Ausweiskopie oder eine amtliche Bescheinigung, um die Beantragung durchzuführen.\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Nach Bestellabschluss erhalten Sie Ihre Auftragsbestätigung per E-Mail. Dort finden Sie einen Link zum Upload Ihrer Dokumente. Bitten schicken Sie uns diese ausschließlich über den Upload-Link. Ein Versand mittels E-Mail oder Fax kann nicht bearbeitet werden.\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default CarecaseDialog;","import React, { useState, useMemo } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Container,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    makeStyles,\r\n    Paper,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography,\r\n    withStyles\r\n} from '@material-ui/core';\r\n\r\nimport Meta from '../components/Meta';\r\nimport bucket from '../assets/images/bucket.png';\r\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\r\nimport { ORDER_REASON_ABSENCE_VACATION, ORDER_REASON_CARE_CASE, ORDER_REASON_DEATH, ORDER_REASON_MOVE, ORDER_TIME_IMMEDIATE, ORDER_TIME_LATER, ORDER_REASON_INSOLVENCY,\r\n            CUSTOMER_TYPE_PRIVATE, CUSTOMER_TYPE_BUSINESS, ORDER_INFO } from '../constants/key.constant';\r\nimport {COLOR_PRIMARY, COLOR_PRIMARY_DARK, COLOR_WHITE,} from '../constants/color.constant';\r\nimport InsolvencyDialog from '../components/dialog/InsolvencyDialog';\r\nimport OrderDateDiffErrorDialog from '../components/dialog/OrderDateDiffErrorDialog';\r\nimport NoRedirectionDateDialog from '../components/dialog/NoRedirectionDateDialog';\r\nimport NoStartDateDialog from '../components/dialog/NoStartDateDialog';\r\nimport CarecaseDialog from '../components/dialog/CarecaseDialog';\r\nimport { getDaysBetweenDates, getXAfterDate } from '../utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    boxContainer: {\r\n        position: 'relative',\r\n        ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n        padding: '24px 10%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          padding: '24px 5%',\r\n        },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n    bucketWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    bucket: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        boxShadow: 24,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #000',\r\n        padding: 16,\r\n\r\n    },\r\n    form: {\r\n      '& > *': {\r\n        marginBottom: 16,\r\n      },\r\n    },\r\n}));\r\n\r\nconst PrimaryRadio = withStyles({\r\n  root: {\r\n    color: COLOR_PRIMARY_DARK,\r\n    '&$checked': {\r\n      color: COLOR_PRIMARY_DARK,\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst LandingScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n    const methods = useForm({ shouldUnregister: true });\r\n    const { handleSubmit, control, setValue } = methods;\r\n\r\n    let customerTypeDefault = CUSTOMER_TYPE_PRIVATE;\r\n    let orderReasonDefault = ORDER_REASON_MOVE;\r\n    let orderTimeDefault = ORDER_TIME_IMMEDIATE;\r\n    let laterStartTimeDefault = getXAfterDate(new Date(), 8);\r\n    let deliverAgainDateDefault = '';\r\n\r\n    // Local Storage Data\r\n    let localData = localStorage.getItem(ORDER_INFO);\r\n    console.log('load ', localData);\r\n    if (localData) {\r\n        localData = JSON.parse(localData);\r\n        if (localData.customer_type) {\r\n            customerTypeDefault = localData.customer_type;\r\n        }\r\n        if (localData.order_reason) {\r\n            orderReasonDefault = localData.order_reason; \r\n        }\r\n        if (localData.order_time) {\r\n            orderTimeDefault = localData.order_time; \r\n        }\r\n        if (localData.later_start_time) {\r\n            laterStartTimeDefault = localData.later_start_time;\r\n        }\r\n        if (localData.deliver_again_date) {\r\n            deliverAgainDateDefault = localData.deliver_again_date;\r\n        }\r\n    };\r\n\r\n    // States\r\n    const [openInsolvencyModal, setOpenInsolvencyModal] = useState(false);\r\n    const [openDateDiffModal, setDateDiffModal] = useState(false);\r\n    const [openNoRedirectionDateModal, setNoRedirectionDateModal] = useState(false);\r\n    const [openNoStartDateModal, setNoStartDateModal] = useState(false);\r\n    const [openCarecaseModal, setCarecaseModal] = useState(false);\r\n    const [stateLaterStartTime, setLaterStartTime] = useState(getXAfterDate(new Date(), 8));\r\n    const [stateDeliverAgainDate, setDeliverAgainDate] = useState('');\r\n    const [deliverAgainDateShow, setDeliverAgainDateShow] = useState(localData && localData.deliver_again_date && localData.order_reason === ORDER_REASON_ABSENCE_VACATION ? true :false);\r\n    const [laterStartTimeShow, setLaterStartTimeShow] = useState(localData && localData.later_start_time && localData.order_time === ORDER_TIME_LATER ? true : false);\r\n    const privateReasons = useMemo(() => [ \r\n        { key: ORDER_REASON_MOVE, label: 'Umzug'}, \r\n        { key: ORDER_REASON_ABSENCE_VACATION, label: 'Abwesenheit / Urlaub'}, \r\n        { key: ORDER_REASON_CARE_CASE, label: 'Betreuungsfall'}, \r\n        { key: ORDER_REASON_DEATH, label: 'Sterbefall'}], []);\r\n    const businessReasons = useMemo(() => [ \r\n        { key: ORDER_REASON_MOVE, label: 'Umzug'}, \r\n        { key: ORDER_REASON_ABSENCE_VACATION, label: 'Abwesenheit / Urlaub'}, \r\n        { key: ORDER_REASON_INSOLVENCY, label: 'Insolvenz'}], []);\r\n    const [reasons, setReasons] = useState(localData && localData.customer_type === CUSTOMER_TYPE_PRIVATE ? privateReasons : businessReasons);\r\n    const orderTimes = useMemo(() => [ \r\n        { key: ORDER_TIME_IMMEDIATE, label: 'Sofort (5 Werktage Vorlauf)'}, \r\n        { key: ORDER_TIME_LATER, label: 'Späterer Startzeitpunkt'}], []);\r\n\r\n    // Handler\r\n    const handleOpenInsolvencyModal = () => setOpenInsolvencyModal(true);\r\n    const handleCloseInsolvencyModal = () => setOpenInsolvencyModal(false);\r\n    const handleOpenNoStartDateModal = () => setNoStartDateModal(true);\r\n    const handleCloseNoStartDateModal = () => setNoStartDateModal(false);\r\n    const handleOpenNoRedirectionDateModal = () => setNoRedirectionDateModal(true);\r\n    const handleCloseNoRedirectionDateModal = () => setNoRedirectionDateModal(false);\r\n    const handleOpenDateDiffModal = () => setDateDiffModal(true);\r\n    const handleCloseDateDiffModal = () => setDateDiffModal(false);\r\n    const handleOprnCareacaseModal = () => setCarecaseModal(true);\r\n    const handleCloseCareacaseModal = () => {\r\n        setCarecaseModal(false);\r\n        history.push('/receiver');\r\n    }\r\n    const handleCustomerTypeChange = (v) => {\r\n        if (v === CUSTOMER_TYPE_PRIVATE) {\r\n            setReasons(privateReasons);\r\n        } else {\r\n            setReasons(businessReasons);\r\n        }\r\n        setValue('order_reason', ORDER_REASON_MOVE);\r\n        setValue('order_time', ORDER_TIME_IMMEDIATE);\r\n        setLaterStartTimeShow(false);\r\n        setDeliverAgainDateShow(false);\r\n    };\r\n    const handleOrderReasonClick = (key) => {\r\n        // setOrderReason(key);\r\n        switch (key) {\r\n            case ORDER_REASON_INSOLVENCY:\r\n                setDeliverAgainDateShow(false);\r\n                handleOpenInsolvencyModal();\r\n                break;\r\n            case ORDER_REASON_ABSENCE_VACATION:\r\n                setDeliverAgainDateShow(true);\r\n                break;\r\n            default:\r\n                setDeliverAgainDateShow(false);\r\n                break;\r\n        }\r\n    }\r\n    const handleOrderTimeClick = (key) => {\r\n        // setOrderTime(key);\r\n        switch (key) {\r\n            case ORDER_TIME_IMMEDIATE:\r\n                setLaterStartTimeShow(false);\r\n                break;\r\n            case ORDER_TIME_LATER:\r\n                setLaterStartTimeShow(true);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const onNext = (data) => {\r\n        const { order_time, order_reason, later_start_time, deliver_again_date } = data;\r\n        let isModal = false;\r\n        console.log(data);\r\n        // Validation\r\n\r\n        if (order_time === ORDER_TIME_LATER) {\r\n            if (later_start_time.length === 0) {\r\n                // Require min date message\r\n                handleOpenNoStartDateModal();\r\n                return;\r\n            }\r\n            // if (getDaysBetweenDates(new Date(laterStartTime), new Date()) < 8) {\r\n            //     // Require 8 days\r\n            // }\r\n        }\r\n        if (order_reason === ORDER_REASON_ABSENCE_VACATION) {\r\n            if (deliver_again_date.length === 0) {\r\n                handleOpenNoRedirectionDateModal();\r\n                return;\r\n                // Require min date message\r\n            }\r\n            if (deliver_again_date && deliver_again_date.length > 0 && later_start_time && later_start_time.length > 0) {\r\n                if (getDaysBetweenDates(new Date(deliver_again_date), later_start_time.length > 0 ? new Date(later_start_time) : new Date()) < 14) {\r\n                    // Require 14 days\r\n                    setLaterStartTime(stateLaterStartTime);\r\n                    setDeliverAgainDate(stateDeliverAgainDate);\r\n                    handleOpenDateDiffModal();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (order_reason === ORDER_REASON_CARE_CASE) {\r\n            handleOprnCareacaseModal();\r\n            isModal = true;\r\n        }\r\n        \r\n        if (!data.later_start_time) {\r\n            data.later_start_time = getXAfterDate(new Date(), 8);\r\n        }\r\n        localStorage.setItem(ORDER_INFO, JSON.stringify(data));\r\n\r\n        if (!isModal) {\r\n            history.push('/receiver');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item sm={12} md={4} className={classes.bucketWrapper}>\r\n                            <Box>\r\n                                <img src={bucket} alt='' className={classes.bucket} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item sm={12} md={8}>\r\n                            <Typography variant='h5'  gutterBottom>\r\n                                Post Nachsendeauftrag\r\n                            </Typography>\r\n                            <Typography variant='body1' gutterBottom>\r\n                                Art &amp; Startzeitpunkt des Nachsendeauftrag:\r\n                            </Typography>\r\n                            <Divider style={{ marginTop:16, marginBottom: 16 }} />\r\n                            \r\n                            <FormProvider {...methods}>\r\n                                <form className={classes.form} onSubmit={handleSubmit(onNext)}>\r\n                                    <Grid container>\r\n                                        <Grid item sm={12} md={6}>\r\n                                            <Controller \r\n                                                name='customer_type'\r\n                                                control={control}\r\n                                                defaultValue={customerTypeDefault}\r\n                                                render={({ field: {value, onChange}, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        {/* <InputLabel shrink htmlFor='form-customerType'>\r\n                                                            {t('CorporateForm')}\r\n                                                        </InputLabel> */}\r\n                                                        <Grid container spacing={2} style={{ marginTop: '8px', marginBottom: '-16px' }}>\r\n                                                            <RadioGroup aria-label='customer_type' id='form-customerType' style={{ flexDirection:\"row\" }} onChange={(e, v) => { handleCustomerTypeChange(v); onChange(e, v); }} value={value}>\r\n                                                            <Grid item xs={12}>\r\n                                                                <FormControlLabel value={CUSTOMER_TYPE_PRIVATE} control={<PrimaryRadio />} label='Privater Nachsendeauftrag' />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={12}>\r\n                                                                <FormControlLabel value={CUSTOMER_TYPE_BUSINESS} control={<PrimaryRadio />} label='Gewerblicher Nachsendeauftrag' />\r\n                                                            </Grid>\r\n                                                            </RadioGroup>\r\n                                                        </Grid>\r\n                                                    </FormControl>\r\n                                                )}/>\r\n                                        </Grid>\r\n\r\n                                        <Grid item sm={12} md={6}>\r\n                                            <Controller \r\n                                                name='order_reason'\r\n                                                control={control}\r\n                                                defaultValue={orderReasonDefault}\r\n                                                render={({ field: { value, onChange }, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <Grid container spacing={2} style={{ marginTop: '8px', marginBottom: '-16px' }}>\r\n                                                            <Box display={{ xs: 'block', sm: 'none', md: 'none'}}>\r\n                                                                <Divider style={{ marginTop:16, marginBottom: 16 }} />\r\n                                                            </Box>\r\n                                                            <RadioGroup aria-label='order_reason' id='form-orderReason' style={{ flexDirection:\"row\" }} onChange={(e, v) => {handleOrderReasonClick(v); onChange(e, v)}} value={value}>\r\n                                                                {reasons.map((reason, i) => (\r\n                                                                    <Grid item xs={12} key={i}>\r\n                                                                        <FormControlLabel value={reason.key} control={<PrimaryRadio />} label={reason.label} />\r\n                                                                    </Grid>\r\n                                                                ))}\r\n                                                            </RadioGroup>\r\n                                                        </Grid>\r\n                                                    </FormControl>\r\n                                                )}/>\r\n                                        </Grid>\r\n                                        \r\n                                        <Grid item xs={12} md={12} sm={12}>\r\n                                            <Divider style={{ marginTop: 32, marginBottom: 16 }} />\r\n                                        </Grid>\r\n\r\n                                        <Grid item sm={12} md={6}>\r\n                                            <Controller \r\n                                                name='order_time'\r\n                                                control={control}\r\n                                                defaultValue={orderTimeDefault}\r\n                                                render={({ field: {value, onChange}, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <Grid container spacing={2} style={{ marginTop: '8px', marginBottom: '8px' }}>\r\n                                                            <RadioGroup aria-label='order_time' id='form-orderTime' style={{ flexDirection:\"row\" }} onChange={(e, v) => {handleOrderTimeClick(v); onChange(e, v); }} value={value}>\r\n                                                                {orderTimes.map((time, id) => (\r\n                                                                    <Grid item xs={12} key={id}>\r\n                                                                        <FormControlLabel value={time.key} control={<PrimaryRadio />} label={time.label} />\r\n                                                                    </Grid>\r\n                                                                ))}\r\n                                                            </RadioGroup>\r\n                                                        </Grid>\r\n                                                        {/* <Grid container spacing={2}>\r\n                                                            { laterStartTimeShow && <Grid item xs={12}>\r\n                                                            <Typography variant='subtitle1'>Späterer Startzeitpunkt:</Typography>\r\n                                                                <TextField\r\n                                                                    id=\"date-later-start-time\"\r\n                                                                    type=\"date\"\r\n                                                                    value={laterStartTime}\r\n                                                                    onChange={e => setLaterStartTime(e.target.value)}\r\n                                                                    InputLabelProps={{\r\n                                                                        shrink: true,\r\n                                                                    }}\r\n                                                                    InputProps={{\r\n                                                                        inputProps: {\r\n                                                                            min: getXAfterDate(new Date(), 8)\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    style={{\r\n                                                                        paddingLeft: 8,\r\n                                                                        paddingRight: 8\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid> }\r\n                                                            \r\n                                                            { deliverAgainDateShow && <Grid item xs={12}>\r\n                                                                <Typography variant='subtitle1'>Wieder zustellen ab</Typography>\r\n                                                                <TextField\r\n                                                                    id=\"date-deliver-again\"\r\n                                                                    type=\"date\"\r\n                                                                    value={deliverAgainDate}\r\n                                                                    onChange={e => setDeliverAgainDate(e.target.value)}\r\n                                                                    InputLabelProps={{\r\n                                                                        shrink: true,\r\n                                                                    }}\r\n                                                                    InputProps={{\r\n                                                                        inputProps: {\r\n                                                                            min: getXAfterDate(orderTime === ORDER_TIME_LATER ? new Date(laterStartTime) : new Date(), 14)\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    style={{\r\n                                                                        paddingLeft: 8,\r\n                                                                        paddingRight: 8\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid> }\r\n                                                            \r\n                                                        </Grid> */}\r\n                                                    </FormControl>\r\n                                                )}/>\r\n\r\n                                            <Grid container spacing={2}>\r\n                                                {laterStartTimeShow && <Grid item xs={12}>\r\n                                                    <Controller\r\n                                                        name='later_start_time'\r\n                                                        control={control}\r\n                                                        defaultValue={laterStartTimeDefault}\r\n                                                        render={({ field, fieldState: { error } }) => (\r\n                                                            <FormControl error={!!error}>\r\n                                                                <Typography variant='subtitle1'>Späterer Startzeitpunkt:</Typography>\r\n                                                                <TextField\r\n                                                                    {...field}\r\n                                                                    id=\"date-later-start-time\"\r\n                                                                    type=\"date\"\r\n                                                                    InputLabelProps={{\r\n                                                                        shrink: true,\r\n                                                                    }}\r\n                                                                    InputProps={{\r\n                                                                        inputProps: {\r\n                                                                            min: getXAfterDate(new Date(), 8),\r\n                                                                            max: getXAfterDate(new Date(), 8, 1)\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    style={{\r\n                                                                        paddingLeft: 8,\r\n                                                                        paddingRight: 8\r\n                                                                    }}\r\n                                                                />\r\n                                                            </FormControl>\r\n                                                        )}/>\r\n                                                </Grid> }\r\n                                                \r\n                                                { deliverAgainDateShow && <Grid item xs={12}>\r\n                                                    <Controller\r\n                                                        name='deliver_again_date'\r\n                                                        control={control}\r\n                                                        defaultValue={deliverAgainDateDefault}\r\n                                                        render={({ field, fieldState: { error } }) => (\r\n                                                            <FormControl error={!!error}>\r\n                                                                <Typography variant='subtitle1'>Wieder zustellen ab</Typography>\r\n                                                                <TextField\r\n                                                                    {...field}\r\n                                                                    id=\"date-deliver-again\"\r\n                                                                    type=\"date\"\r\n                                                                    InputLabelProps={{\r\n                                                                        shrink: true,\r\n                                                                    }}\r\n                                                                    InputProps={{\r\n                                                                        inputProps: {\r\n                                                                            min: getXAfterDate(new Date(stateLaterStartTime), 14),\r\n                                                                            max: getXAfterDate(new Date(stateLaterStartTime), 14, 1),\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    style={{\r\n                                                                        paddingLeft: 8,\r\n                                                                        paddingRight: 8\r\n                                                                    }}\r\n                                                                />\r\n                                                            </FormControl>\r\n                                                        )}/>\r\n                                                </Grid> }\r\n                                                \r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                        <Box display='flex' justifyContent='center' mt={3}>\r\n                                            <Button \r\n                                                type='submit'\r\n                                                    variant='contained' \r\n                                                style={{\r\n                                                    color: COLOR_WHITE,\r\n                                                    backgroundColor: COLOR_PRIMARY_DARK\r\n                                                }}>\r\n                                                Jetzt beantragen\r\n                                            </Button>\r\n                                        </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                            </FormProvider>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom>\r\n                                Nachsendungen-online.de ist unabhängiger Dienstleister für Ihren Nachsendeauftrag und richtet diesen bei einer Vielzahl von Post-Zustellern, wie <span style={{ fontWeight: 'bold' }}>Deutsche Post, PostModern uvm</span>. ein.\r\n                            </Typography> <br/>\r\n                            <Typography variant='body1' gutterBottom>\r\n                                Verpassen Sie keine Post mehr. Nutzen Sie unseren Service und wählen bis zu <span style={{ fontWeight: 'bold' }}>16 verschiedene Versanddienstleister</span> aus.\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n            <InsolvencyDialog \r\n                openModal={openInsolvencyModal}\r\n                handleCloseModal={handleCloseInsolvencyModal} />\r\n            <NoStartDateDialog \r\n                openModal={openNoStartDateModal}\r\n                handleCloseModal={handleCloseNoStartDateModal} />\r\n            <NoRedirectionDateDialog \r\n                openModal={openNoRedirectionDateModal}\r\n                handleCloseModal={handleCloseNoRedirectionDateModal} />\r\n            <OrderDateDiffErrorDialog \r\n                openModal={openDateDiffModal}\r\n                handleCloseModal={handleCloseDateDiffModal}\r\n                deliverAgainDate={stateDeliverAgainDate}\r\n                laterStartTime={stateLaterStartTime} />\r\n            <CarecaseDialog\r\n                openModal={openCarecaseModal}\r\n                handleCloseModal={handleCloseCareacaseModal} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default LandingScreen;","import React from 'react';\r\nimport { Link, makeStyles, Step, StepLabel, Stepper, useMediaQuery } from '@material-ui/core';\r\nimport { COLOR_PRIMARY_DARK } from '../constants/color.constant';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          display: 'flex',\r\n          justifyContent: 'center'\r\n        },\r\n    },\r\n    stepper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: 0,\r\n        '& .MuiStepIcon-completed, .MuiStepIcon-active': {\r\n          color: COLOR_PRIMARY_DARK\r\n        },\r\n    }\r\n}));\r\n\r\nconst OrderSteps = ({ step }) => {\r\n    const classes = useStyles();\r\n    const steps = ['Art & Startzeitpunkt', 'Daten Empfänger', 'Anschriften', 'Übersicht', 'Zusammenfassung'];\r\n    // const steps = ['B', 'F', 'D', 'W', 'Q'];\r\n    const links = ['/', '/receiver', '/address', '/summary', '/payment'];\r\n    const isXsmall = useMediaQuery(theme =>\r\n        theme.breakpoints.down('sm')\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={step} className={classes.stepper} orientation={isXsmall ? 'vertical' : 'horizontal'} alternativeLabel={!isXsmall}>\r\n                {steps.map((label, key) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>\r\n                            { key < step ? (\r\n                                <Link component={RouterLink} to={links[key]} color='textPrimary'>\r\n                                    {label}\r\n                                </Link>\r\n                            ) : (\r\n                                <>\r\n                                {label}\r\n                                </>\r\n                            ) }\r\n                        </StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderSteps;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst wrapWithBold = (props) => {\r\n    return <span style={{fontWeight: \"bold\"}}>\r\n        {props}\r\n    </span>\r\n}\r\n\r\nconst HelpPanel = ({ field }) => {\r\n    switch (field) {\r\n        case 'salutation':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Anrede\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte wählen Sie die korrekte Anrede für den ersten Empfänger aus.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'representativeSalutation':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Anrede\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte wählen Sie die korrekte Anrede des Bevollmächtigten.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'name':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Vor- und Nachname\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier {wrapWithBold(\"Vor- und Nachnamen\")} der Person ein, für welche die Post nachgesendet werden soll. Es können bis zu 4 weitere Empfänger aus dem {wrapWithBold(\"gleichen Haushalt\")} eintragen werden.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Hinweise:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte geben Sie {wrapWithBold(\"keine Einträge\")} wie z.B. {wrapWithBold(\"Familie Mustermann\")} oder {wrapWithBold(\"Eheleute Mustermann\")} ein.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte achten Sie auf die {wrapWithBold(\"korrekte Schreibweise\")} Ihrer persönlichen Daten.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'representativeName':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Vorname und Nachname\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier den Vor- und Nachnamen des  Bevollmächtigten / Ansprechpartners für den Auftrag ein.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'email':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        E-Mail Adresse\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier die E-Mail Adresse ein.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Wichtig:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Sie erhalten Ihre Rechnung an die angegebene {wrapWithBold(\"E-Mail Adresse\")}.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte achten Sie auf die {wrapWithBold(\"korrekte Schreibweise\")}.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Die E-Mail Adresse dient dem {wrapWithBold(\"Erhalt der Rechnung\")}.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Die E-Mail Adresse  wird nur bei {wrapWithBold(\"evtl. Rückfragen zum Auftrag\")} durch unser Supportteam und die Postzusteller genutzt.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Sie erhalten von uns {wrapWithBold(\"keine Werbung\")}.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'phoneNumber':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Telefonnummer\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier die Telefonummer in folgendem Format ein:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        {wrapWithBold(\"Ländervorwahl + Vorwahl + Rufnummer\")}\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Beispiel:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        {wrapWithBold(\"+49 176 12345678\")}\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        für mobile Nummern:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        {wrapWithBold(\"+49 176 12345678\")}\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Die Telefonnummer wird nur bei {wrapWithBold(\"evtl. Rückfragen zum Auftrag\")} durch unser Supportteam und die Postzusteller genutzt.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'representativePhoneNumber':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Telefonnummer\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier die Telefonummer des Bevollmächtigten in folgendem Format ein:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        {wrapWithBold(\"Ländervorwahl + Vorwahl + Rufnummer\")}\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Beispiel:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        {wrapWithBold(\"+49 176 12345678\")}\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        für mobile Nummern:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        {wrapWithBold(\"+49 176 12345678\")}\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Die Telefonnummer wird nur bei {wrapWithBold(\"evtl. Rückfragen zum Auftrag\")} durch unser Supportteam und die Postzusteller genutzt.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'noticeOfRelocation':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Umzugsmitteilung\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Ihre neue Anschrift wird an Ihre geschäftlichen Kontakte (z.B. Bank, Versicherung o.Ä. ) mitgeteilt. Diese kennen Ihre alte Anschrift bereits.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Sie erhalten Ihre Post somit an Ihre neue Anschrift und vermeiden Fehladressierungen.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Die Umzugsmitteilung gilt automatisch für alle im Auftrag genannten Personen.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'parcelShipments':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Päckchen und Pakete\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        (nur Inland, Zusatzentgelt anhängig von Sendung)\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'addressStreetHouse':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Straße und Hausnummer\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier die Straße und Hausnummer der {wrapWithBold(\"alten Adresse\")} ein.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Beispiel:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Straße: “Mustermannstraße”\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Hausnummer: “1”\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte achten Sie darauf, die Angaben in die jeweils dafür vorgesehenen Felder eintragen.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'addressZipCodeCity':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Postleitzahl und Ort\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier die Postleitzahl der {wrapWithBold(\"alten Adresse\")} ein.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Beispiel:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Postleitzahl: \"10117\"\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Ort: \"Berlin\"\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte achten Sie darauf, die Angaben in die jeweils dafür vorgesehenen Felder eintragen.\r\n                    </Typography>\r\n                </>\r\n            );\r\n            case 'newAddressStreetHouse':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Straße und Hausnummer\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier die Straße und Hausnummer der {wrapWithBold(\"neuen  Adresse\")} ein.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Beispiel:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Straße: “Musterstraße”\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Hausnummer: “1”\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte achten Sie darauf, die Angaben in die jeweils dafür vorgesehenen Felder eintragen.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'newAddressZipCodeCity':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Postleitzahl und Ort\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier die Postleitzahl der {wrapWithBold(\"neuen  Adresse\")} ein.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Beispiel:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Postleitzahl: \"80639\"\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Ort: \"München\"\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte achten Sie darauf, die Angaben in die jeweils dafür vorgesehenen Felder eintragen.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'Land':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Land\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte wählen Sie ein Land aus.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'addressSupplement':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Postfach-Nummer\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Ein typischer Adresszusatz wäre z.B. \"c/o Meyer\"\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'addressPoBox':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Postfach-Nummer\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte tragen hier das Postfach der {wrapWithBold(\"alten Adresse\")} ein, von welchem die Post nachgesendet werden soll.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'newAddressPoBox':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Postfach-Nummer\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte tragen hier das Postfach der {wrapWithBold(\"neuen Adresse\")} ein, von welchem die Post nachgesendet werden soll.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'anotherPerson':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Weitere Empfänger\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Bitte tragen Sie hier den {wrapWithBold(\"Vor- und Nachnamen\")} eines {wrapWithBold(\"weiteren Empfängers\")} ein.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Hinweise:\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Der {wrapWithBold(\"Nachname der weiteren Empfänger\")} kann von dem {wrapWithBold(\"Nachnamen des ersten Empfängers abweichen\")}.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        {wrapWithBold(\"Beide Personen\")} müssen die {wrapWithBold(\"gleiche Anschrift\")} besitzen.\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Sie können {wrapWithBold(\"bis zu 5 Empfänger\")} hinzufügen.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'company':\r\n            return (\r\n                <>\r\n                    <Typography variant='h5' gutterBottom>\r\n                        Firmenname\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Tragen Sie hier den Namen des Gewerbes oder Selbständigen ein, für welchen die Post nachgesendet werden soll.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Beispiel:\r\n                    </Typography>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Max Mustermann e.K.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        oder\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Erika Mustermann GmbH\r\n                    </Typography>\r\n                    <Typography variant='body1' gutterBottom>\r\n                        Hinweise:\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte tragen Sie den {wrapWithBold(\"exakten Namen der Firma\")} ein und übernehmen Sie dabei die genaue Bezeichnung der {wrapWithBold(\"Gewerbeanmeldung\")} oder {wrapWithBold(\"Handelsregister-Eintragung\")}.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'paymentType':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Nachsendedauer\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte wählen Sie die Dauer Ihres Nachsendeauftrags aus.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Wählen Sie zwischen {wrapWithBold(\"6 Monaten\")} und {wrapWithBold(\"12 Monaten\")} aus.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'executionInfo':\r\n            return (\r\n                <>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Ausführungs-Info\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Damit wir Ihren Auftrag umgehend bearbeiten können und auch bei kurzfristigem Beginn der Nachsendung eine Einrichtung sicherstellen können haben Sie hier die Option das Widerrufsrecht zu verkürzen.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Mit der Verkürzung des Widerrufsrecht ermöglichen Sie uns sofort mit der Beantragung des Nachsendeauftrag zu beginnen.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Sollte Sie keine schnelle Beantragung benötigen können Sie die Checkbox einfach deaktiviert lassen. In diesem Fall haben Sie ein reguläres\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Widerrufsrecht von 14 Tagen. Eine Bearbeitung Ihres Auftrags findet jedoch in diesem Fall erst nach Ablauf der 14 Tage statt.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'agreeTerms':\r\n            return (\r\n                <>\r\n                    <Typography variant='h5' gutterBottom>\r\n                        Unsere AGB\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte akzeptieren Sie unsere AGB um die Bestellung abzuschliessen. Die AGB können Sie unter AGB einsehen.\r\n                    </Typography>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Informationen zum Widerrufsrecht\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Sie haben als Verbraucher ein 14-tägiges Widerrufsrecht. Damit Ihr Auftrag zum gewünschten Zeitpunkt starten kann die Dienstleistung auf Ihren Wunsch bereits vor Ablauf der 14 Tage beginnen. Ihnen ist bekannt, dass im Falle eines Widerrufs Wertersatz für die bereits erbrachten Dienstleistungen geleistet werden muss.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        case 'paymentService':\r\n            return (\r\n                <>\r\n                    <Typography variant='h5' gutterBottom>\r\n                        Zahlungsart auswählen\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' gutterBottom>\r\n                        Bitte wählen Sie Ihre gewünschte Zahlungsart aus.\r\n                    </Typography>\r\n                </>\r\n            );\r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HelpPanel;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst wrapWithBold = (props) => {\r\n    return <span style={{fontWeight: \"bold\"}}>\r\n        {props}\r\n    </span>\r\n}\r\n\r\nconst ParcelsDialog = ({ openModal, handleAcceptModal, handleRejectModal }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleRejectModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Zusatzentgelt für Päckchen und Pakete\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Hinweise:\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Die {wrapWithBold(\"Zusatzleistung\")} \"Päckchen und Pakete\" erzeugt ein Zusatzendgelt, zusätzlich zum regulären Endpreis.\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Dieses {wrapWithBold(\"Zusatzentgelt\")} wird direkt bei der Zustellung eines Paketes oder Päckchens an die neue Adresse vom Zusteller erhoben.\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Die Möglichkeit der Nachsendung von Paketen und Päckchen besteht {wrapWithBold(\"nur innerhalb Deutschlands\")}.\r\n                    </Typography>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        Zusatzentgelt (Paketnachsendung):\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Der Preis für eine Paketnachsendung via Deutschen Post DHL beträgt pauschal 6,99 EUR (Stand: 17.06.2015).\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Während der Dauer eines Auftrags werden Presiänderungen zur Paketnachsendung seitens der Deutschen Post DHL  automatisch an die Kosten für Ihre Paketnachsendung angepasst.\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Die Kosten werden jeweils pro nachgesandter\r\n                        Zustellung eines Pakets oder Päckchens an Ihre neue Anschrift erhoben. Es\r\n                        handelt sich hierbei um die Kosten pro Sendung. Bei zwei erhaltenen\r\n                        Pakten zahlen Sie den Aufschlag somit auch zweimal etc.\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        Wenn Sie damit einverstanden sind und diese Belehrung\r\n                         zur Kenntnis genommen haben klicken Sie bitte auf \"Zustimmen\".\r\n                        Andernfalls auf \"Ablehnen\".\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleRejectModal} style={{ margin: 4 }} color='secondary'>\r\n                    Ablehnen\r\n                </Button>\r\n                <Button onClick={handleAcceptModal} style={{ margin: 4 }} color='primary' autoFocus>\r\n                    Zustimmen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default ParcelsDialog;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst wrapListItem = (props) => {\r\n    return (\r\n        <ListItem>\r\n            <ListItemIcon>\r\n                <ArrowRightIcon />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={props}\r\n            />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nconst wrapWithBold = (props) => {\r\n    return <span style={{fontWeight: \"bold\"}}>\r\n        {props}\r\n    </span>\r\n}\r\n\r\nconst InfopostDialog = ({ openModal, handleCloseModal }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"DHL Infopost / Dialogpost (schwer)\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography variant='h6' style={{ marginTop: 8 }}>\r\n                        Bedingungen für den Versand von Produkten via DHL Infopost / Dialogpost (schwer):\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' style={{ marginTop: 8 }} component='p'>\r\n                        Es werden ausschließlich größere Mengen an inhaltsgleichen Sendungen versendet.\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' style={{ marginTop: 8 }} component='p'>\r\n                        {'DHL Infopost / Dialogpost unter 1.000 g werden generell nachgesendet.'}\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' style={{ marginTop: 8 }} component='p'>\r\n                        {'Diese Option bezieht sich nur auf Sendungen schwerer 1.000 g.'}\r\n                    </Typography>\r\n                    <Typography variant='h5' style={{ marginTop: 8 }}>\r\n                        Beispiele:\r\n                    </Typography>\r\n                    <List dense>\r\n                        {wrapListItem(\"Produktproben\")}\r\n                        {wrapListItem(\"Kataloge\")}\r\n                        {wrapListItem(\"Zeitschriften, Broschüren und Zeitungen\")}\r\n                        {wrapListItem(\"Werbeartikel\")}\r\n                    </List> <br />\r\n                    <Typography variant='subtitle1' style={{ marginTop: 8 }} component='p'>\r\n                        Folgende Sendungen sind {wrapWithBold(\"keine DHL Infopost / Dialogpost\")}:\r\n                    </Typography>\r\n                    <List dense>\r\n                        {wrapListItem(\"Briefe mit weniger als 50 Adressaten\")}\r\n                        {wrapListItem(\"Mahnungen oder Rechnungen\")}\r\n                        {wrapListItem(\"Verkaufswaren (sofern nicht oben aufgeführt)\")}\r\n                    </List> <br />\r\n                    <Typography variant='subtitle1' style={{ marginTop: 8 }} component='p'>\r\n                        Das Nachsenden von DHL Infopost / Dalogpost (schwer) ist {wrapWithBold(\"kostenlos\")} und wird von uns {wrapWithBold(\"generell empfohlen\")}.\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default InfopostDialog;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst NoticeOfRelocateDialog = ({ openModal, handleCloseModal }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Umzugsmitteilung:\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        {`Ihre neue Anschrift wird an Ihre geschäftlichen Kontakte (z.B. Bank, Versicherung o.Ä. ) mitgeteilt. Diese kennen Ihre alte Anschrift bereits.`}\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        {`Sie erhalten Ihre Post somit an Ihre neue Anschrift und vermeiden Fehladressierungen.`}\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        {`Die Umzugsmitteilung gilt automatisch für alle im Auftrag genannten Personen.`}\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default NoticeOfRelocateDialog;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    alpha,\r\n    Box,\r\n    Breadcrumbs,\r\n    Button,\r\n    Checkbox, Chip,\r\n    Container,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    FormLabel,\r\n    Grid, IconButton,\r\n    InputBase,\r\n    InputLabel,\r\n    makeStyles, MenuItem,\r\n    NativeSelect,\r\n    Paper,\r\n    Select,\r\n    Typography, useTheme\r\n} from '@material-ui/core';\r\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport de from 'react-phone-input-2/lang/de.json';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Meta from '../components/Meta';\r\nimport OrderSteps from '../components/OrderSteps';\r\n\r\nimport {\r\n    CUSTOMER_TYPE_BUSINESS,\r\n    CUSTOMER_TYPE_PRIVATE,\r\n    ORDER_INFO,\r\n    ORDER_REASON_CARE_CASE,\r\n    ORDER_REASON_DEATH,\r\n    ORDER_REASON_INSOLVENCY,\r\n    ORDER_REASON_MOVE,\r\n    SALUTATION_DIVERS,\r\n    SALUTATION_MR,\r\n    SALUTATION_MRS,\r\n    OTHER_SERVICES\r\n} from '../constants/key.constant';\r\nimport { COLOR_PRIMARY, COLOR_PRIMARY_DARK, COLOR_WHITE } from '../constants/color.constant';\r\nimport { Link } from 'react-router-dom';\r\nimport HelpPanel from '../components/HelpPanel';\r\nimport ParcelsDialog from '../components/dialog/ParcelsDialog';\r\nimport InfopostDialog from '../components/dialog/InfopostDialog';\r\nimport {get} from \"../utils\";\r\nimport NoticeOfRelocateDialog from \"../components/dialog/NoticeOfRelocate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    form: {\r\n      '& > *': {\r\n        marginBottom: 16,\r\n      },\r\n    },\r\n    boxContainer: {\r\n      position: 'relative',\r\n      ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n      padding: '24px',\r\n      height: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: '24px',\r\n      },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n        backgroundColor: COLOR_WHITE,\r\n        color: COLOR_PRIMARY_DARK,\r\n    },\r\n    multiClear: {\r\n        color: COLOR_PRIMARY_DARK,\r\n        marginTop: 16\r\n    }\r\n}));\r\n\r\nconst Input = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        '&.Mui-error $input': {\r\n            borderColor: '#f44336',\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.common.white,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        '&:focus': {\r\n            boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst PrimaryCheckBox = withStyles({\r\n    root: {\r\n      color: COLOR_PRIMARY,\r\n      '&$checked': {\r\n        color: COLOR_PRIMARY_DARK,\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst getMultipleSelectStyles = (name, allNames, theme) => {\r\n    return {\r\n        fontWeight:\r\n            allNames.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nconst ReceiverScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const methods = useForm({ shouldUnregister: true });\r\n    const { handleSubmit, control, setValue } = methods;\r\n    const [ focused, setFocused ] = useState('');\r\n\r\n    const [openParcelsModal, setParcelsModal] = useState(false);\r\n    const [openInfopostModal, setInfopostModal] = useState(false);\r\n    const [openNoticeOfRelocation, setNoticeOfRelocation] = useState(false);\r\n\r\n    const handleOpenParcelsModal = () => setParcelsModal(true);\r\n    const handleAcceptParcelsModal = () => {\r\n        setParcelsModal(false);\r\n        setValue('parcel_shipments', true);\r\n        setParcelAccepted(true);\r\n    }\r\n    const handleRejectParcelsModal = () => {\r\n        setParcelsModal(false);\r\n        setValue('parcel_shipments', false);\r\n        setParcelAccepted(false);\r\n    }\r\n    const handleOpenInfopostModal = () => setInfopostModal(true);\r\n    const handleCloseInfopostModal = () => setInfopostModal(false);\r\n    const handleOpenNoticeOfRelocation = () => setNoticeOfRelocation(true);\r\n    const handleCloseNoticeOfRelocation = () => setNoticeOfRelocation(false);\r\n\r\n    // Local Storage Data\r\n    let localData = localStorage.getItem(ORDER_INFO);\r\n    let salutationDefault = SALUTATION_MR;\r\n    let representativeSalutationDefault = SALUTATION_MR;\r\n    let nameFirstDefault = '';\r\n    let nameLastDefault = '';\r\n    let representativeNameFirstDefault = '';\r\n    let representativeNameLastDefault = '';\r\n    let emailDefault = '';\r\n    let phoneNumberDefault = '';\r\n    let companyNameDefault = '';\r\n    let noticeOfRelocationDefault = false;\r\n    let parcelShipmentsDefault = false;\r\n    let dhlINFOPOSTDefault = false;\r\n    let optionalNameModeDefault = false;\r\n    let optionalNamesIdxDefault = 0;\r\n    let optionalNamesDefault = [];\r\n    let additionalServicies = [];\r\n    // console.log('load ', localData);\r\n    if (localData) {\r\n        localData = JSON.parse(localData);\r\n        if (!localData.customer_type) {\r\n            history.push('/');\r\n        }\r\n        if (localData.salutation) {\r\n            salutationDefault = localData.salutation;\r\n        }\r\n        if (localData.representativeSalutation) {\r\n            representativeSalutationDefault = localData.representativeSalutation;\r\n        }\r\n        if (localData.nameFirst) {\r\n            nameFirstDefault = localData.nameFirst;\r\n        }\r\n        if (localData.nameLast) {\r\n            nameLastDefault = localData.nameLast;\r\n        }\r\n        if (localData.representativeNameFirst) {\r\n            representativeNameFirstDefault = localData.representativeNameFirst;\r\n        }\r\n        if (localData.representativeNameLast) {\r\n            representativeNameLastDefault = localData.representativeNameLast;\r\n        }\r\n        if (localData.email) {\r\n            emailDefault = localData.email;\r\n        }\r\n        if (localData.phone_number) {\r\n            phoneNumberDefault = localData.phone_number;\r\n        }\r\n        if (localData.notice_of_relocation) {\r\n            noticeOfRelocationDefault = localData.notice_of_relocation;\r\n        }\r\n        if (localData.parcel_shipments) {\r\n            parcelShipmentsDefault = localData.parcel_shipments;\r\n        }\r\n        if (localData.dhl_infopost) {\r\n            dhlINFOPOSTDefault = localData.dhl_infopost;\r\n        }\r\n        if (localData.company_name) {\r\n            companyNameDefault = localData.company_name;\r\n        }\r\n        if (localData.other_service && localData.other_service.length > 0) {\r\n            localData.other_service.forEach(name => additionalServicies.push(name));\r\n        }\r\n        if (localData.additional_recipients && localData.additional_recipients.length > 0) {\r\n            optionalNameModeDefault = true;\r\n            optionalNamesDefault = localData.additional_recipients;\r\n            optionalNamesIdxDefault = optionalNamesDefault[optionalNamesDefault.length - 1].idx;\r\n            // console.log(optionalNamesDefault);\r\n        }\r\n    } else {\r\n        history.push('/');\r\n    }\r\n\r\n    const [otherServices, setOtherServices] = useState(additionalServicies);\r\n    const [noticeOfRelocatioin, setNoticeOfRelocatioin] = useState(noticeOfRelocationDefault);\r\n    const [parcelAccepted, setParcelAccepted] = useState(parcelShipmentsDefault);\r\n    const [dhlInfopost, setDhlINFOPOST] = useState(dhlINFOPOSTDefault);\r\n\r\n    const [optionalNameMode, setOptionalNameMode] = useState(optionalNameModeDefault);\r\n    const [optionalIdx, setOptionalIdx] = useState(optionalNamesIdxDefault);\r\n    const [optionalNames, setOptionalNames] = useState(optionalNamesDefault);\r\n\r\n    useEffect(() => {\r\n        // console.log('change ', optionalNames);\r\n        if (optionalNames.length === 0) {\r\n            setOptionalNameMode(false);\r\n            setOptionalIdx(0);\r\n            // setOptionalNames([{ idx:0, first: '', last: '' }]);\r\n        }\r\n    }, [optionalNames]);\r\n\r\n    const handleOptionalFirstChange = (e, key) => {\r\n        const arr = [...optionalNames];\r\n        arr[key].first = e.target.value;\r\n        setValue(`nameFirst-opt${key}`, arr[key].first);\r\n        setOptionalNames(arr);\r\n    }\r\n\r\n    const handleOptionalLastChange = (e, key) => {\r\n        const arr = [...optionalNames];\r\n        arr[key].last = e.target.value;\r\n        setValue(`nameLast-opt${key}`, arr[key].last);\r\n        setOptionalNames(arr);\r\n    }\r\n\r\n    const handleParcelsCheckBox = (e) => {\r\n        if (e.target.checked) {\r\n            handleOpenParcelsModal();\r\n        } else {\r\n            setParcelAccepted(false);\r\n        }\r\n    }\r\n\r\n    const handleTitleText = () => {\r\n        // if (localData) {\r\n        //     if (localData.customer_type === CUSTOMER_TYPE_BUSINESS) {\r\n        //         if (localData.customer_type === ORDER_REASON_INSOLVENCY) {\r\n        //             return 'Insolvente Firma angeben';\r\n        //         }\r\n        //         return 'Firma / Betrieb angeben';\r\n        //     }\r\n        //     if (localData.customer_type === ORDER_REASON_DEATH) {\r\n        //         return 'Bisherigen Persönliche Daten angeben';\r\n        //     }\r\n        // }\r\n        return 'Art & Startzeitpunkt';\r\n    }\r\n\r\n    const onNext = (data) => {\r\n        localData = { ...localData, ...data};\r\n        localData.additional_recipients = [...optionalNames];\r\n        localData.other_price = 0.00;\r\n        localData.other_service = otherServices;\r\n        if (otherServices.length > 0) {\r\n\r\n            otherServices.map((name) => {\r\n                localData.other_price += get(OTHER_SERVICES.find(service => service.name === name), localData.customer_type === CUSTOMER_TYPE_PRIVATE ? 'private' : 'business', 0);\r\n                return name;\r\n            });\r\n        }\r\n\r\n        // Preparing Data for Server\r\n        localData.full_name = `${data.salutation} ${data.nameFirst} ${data.nameLast}`;\r\n        if (data.representativeNameFirst) {\r\n            localData.representative_full_name = `${data.representativeSalutation} ${data.representativeNameFirst} ${data.representativeNameLast}`;\r\n        }\r\n\r\n        console.log(localData);\r\n        localStorage.setItem(ORDER_INFO, JSON.stringify(localData));\r\n        history.push('/address');\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}>\r\n                <Grid item xs={12}>\r\n                    <Breadcrumbs style={{ marginBottom: 24 }}/>\r\n                    <OrderSteps step={1} />\r\n                </Grid>\r\n            </Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item sm={12} md={7}>\r\n                            <Typography variant='h4' gutterBottom>\r\n                                {handleTitleText()}\r\n                            </Typography>\r\n                            <Divider style={{ marginTop:16, marginBottom: 16 }} />\r\n\r\n                            <FormProvider {...methods}>\r\n                                <form className={classes.form} onSubmit={handleSubmit(onNext)}>\r\n                                    <Grid container spacing={2}>\r\n                                        { localData && localData.customer_type === CUSTOMER_TYPE_BUSINESS &&\r\n                                            <><Grid item xs={12}>\r\n                                            <Controller\r\n                                                name='company_name'\r\n                                                control={control}\r\n                                                defaultValue={companyNameDefault}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='receiver-companyname'>\r\n                                                            Firmenname: *\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='receiver-companyname' placeholder='Name Ihrer Firma' onFocus={() => setFocused('company')}  />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{\r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Divider style={{marginTop: 2, marginBottom: 4}} />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant='h6' >\r\n                                                    Bevollmächtigter / Ansprechpartner\r\n                                                </Typography>\r\n                                            </Grid> </>}\r\n\r\n\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <Controller\r\n                                                    name='salutation'\r\n                                                    control={control}\r\n                                                    defaultValue={salutationDefault}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                <FormControl fullWidth error={!!error}>\r\n                                                    <InputLabel shrink htmlFor='receiver-salutation'>\r\n                                                        Anrede:\r\n                                                    </InputLabel>\r\n                                                    <NativeSelect\r\n                                                        {...field}\r\n                                                        id=\"receiver-salutation\"\r\n                                                        name='salutation'\r\n                                                        style={{\r\n                                                            minHeight: \"48px\"\r\n                                                        }}\r\n                                                        onFocus={() => setFocused(localData.customer_type === CUSTOMER_TYPE_PRIVATE ? 'salutation' : 'representativeSalutation')}\r\n                                                        inputProps={{ 'aria-label': 'salutation' }}>\r\n                                                        <option value={SALUTATION_MR}>{SALUTATION_MR}</option>\r\n                                                        <option value={SALUTATION_MRS}>{SALUTATION_MRS}</option>\r\n                                                        <option value={SALUTATION_DIVERS}>{SALUTATION_DIVERS}</option>\r\n                                                    </NativeSelect>\r\n                                                </FormControl>\r\n                                                )}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}></Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Divider style={{marginTop: 2, marginBottom: 2}} />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Controller\r\n                                                name='nameFirst'\r\n                                                control={control}\r\n                                                defaultValue={nameFirstDefault}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='receiver-namefirst'>\r\n                                                            Vorname: *\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='receiver-namefirst' placeholder='Vorname' onFocus={() => setFocused(localData.customer_type === CUSTOMER_TYPE_PRIVATE ? 'name' : 'representativeName')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{\r\n                                                  required: 'Dieses Feld wird benötigt.',\r\n                                                }}\r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Controller\r\n                                                name='nameLast'\r\n                                                control={control}\r\n                                                defaultValue={nameLastDefault}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='receiver-namelast'>\r\n                                                            Nachname: *\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='receiver-namelast' placeholder='Nachname' onFocus={() => setFocused(localData.customer_type === CUSTOMER_TYPE_PRIVATE ? 'name' : 'representativeName')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{\r\n                                                  required: 'Dieses Feld wird benötigt.',\r\n                                                }}\r\n                                                />\r\n                                        </Grid>\r\n\r\n                                        {localData && localData.customer_type === CUSTOMER_TYPE_PRIVATE && !optionalNameMode && <Grid item xs={12} style={{ marginTop: -8, marginBottom: -8 }}>\r\n                                            <Box display='flex' justifyContent={\"flex-end\"}>\r\n                                                    <div style={{\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        flexWrap: 'wrap',\r\n                                                        cursor: 'pointer',\r\n                                                        color: COLOR_PRIMARY_DARK\r\n                                                    }} onClick={() => {\r\n                                                        setOptionalNameMode(true);\r\n                                                        setOptionalIdx(0);\r\n                                                        setOptionalNames([{ idx: 0, first: '', last: '' }]);\r\n                                                    }}>\r\n                                                        <AddBoxIcon /><span>{' Empfänger hinzufügen (optional)'}</span>\r\n                                                    </div>\r\n                                            </Box>\r\n                                        </Grid>}\r\n\r\n                                        {optionalNameMode && <>\r\n                                            <Grid item xs={12} sm={12}>\r\n                                                <Divider style={{marginTop: 2, marginBottom: 2}} />\r\n                                            </Grid>\r\n                                            <Typography variant='h6' gutterBottom>\r\n                                                Weitere Empfänger (optional)\r\n                                            </Typography>\r\n\r\n                                            {optionalNames.map((name, key) => (\r\n                                                <Grid container spacing={2} key={name.idx} style={{ paddingTop: 8 }}>\r\n                                                    <Grid item xs={12} sm={5}>\r\n                                                        <Controller\r\n                                                            name={`nameFirst-opt${name.idx}`}\r\n                                                            control={control}\r\n                                                            defaultValue={name.first}\r\n                                                            render={({ field: {value}, fieldState: { error } }) => (\r\n                                                                <FormControl fullWidth error={!!error}>\r\n                                                                    <Input id={'receiver-namefirst-opt'+name.idx} value={value} placeholder='Vorname *' onChange={(e) => handleOptionalFirstChange(e, name.idx)} onFocus={() => setFocused('anotherPerson')}  />{' '}\r\n                                                                    {error && (\r\n                                                                        <FormHelperText error>{error.message}</FormHelperText>\r\n                                                                    )}\r\n                                                                </FormControl>\r\n                                                            )}\r\n                                                            rules={{\r\n                                                            required: 'Dieses Feld wird benötigt.',\r\n                                                            }}\r\n                                                            />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={5}>\r\n                                                        <Controller\r\n                                                            name={`nameLast-opt${name.idx}`}\r\n                                                            control={control}\r\n                                                            defaultValue={name.last}\r\n                                                            render={({ field: {value}, fieldState: { error } }) => (\r\n                                                                <FormControl fullWidth error={!!error}>\r\n                                                                    <Input id={'receiver-namelast-opt'+name.idx} value={value} placeholder='Nachname *' onChange={(e) => handleOptionalLastChange(e, name.idx)} onFocus={() => setFocused('anotherPerson')}  />\r\n                                                                    {error && (\r\n                                                                        <FormHelperText error>{error.message}</FormHelperText>\r\n                                                                    )}\r\n                                                                </FormControl>\r\n                                                            )}\r\n                                                            rules={{\r\n                                                            required: 'Dieses Feld wird benötigt.',\r\n                                                            }}\r\n                                                            />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={2} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <Box>\r\n                                                            <div style={{\r\n                                                                display: 'flex',\r\n                                                                alignItems: 'center',\r\n                                                                flexWrap: 'wrap',\r\n                                                                cursor: 'pointer',\r\n                                                                color: 'red'\r\n                                                            }} onClick={() => {\r\n                                                                const arr = [...optionalNames];\r\n                                                                // console.log('before ', arr, key);\r\n                                                                arr.splice(key, 1);\r\n                                                                // console.log('after ', arr);\r\n                                                                setOptionalNames(arr);\r\n                                                            }}>\r\n                                                            <IndeterminateCheckBoxIcon /><span>{' löschen'}</span>\r\n                                                            </div>\r\n\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            ))}\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <Box display='flex' justifyContent={\"flex-end\"}>\r\n                                                        <div style={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                            flexWrap: 'wrap',\r\n                                                            cursor: 'pointer',\r\n                                                            color: COLOR_PRIMARY_DARK\r\n                                                        }} onClick={() => {\r\n                                                            let value = parseInt(optionalIdx) + 1;\r\n                                                            const arr = [...optionalNames, { idx: value, first: '', last: '' }];\r\n                                                            setOptionalIdx(value);\r\n                                                            setOptionalNames(arr);\r\n                                                        }}>\r\n                                                            <AddBoxIcon /><span>{' weitere Empfänger hinzufügen (optional)'}</span>\r\n                                                        </div>\r\n                                                </Box>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12} sm={12}>\r\n                                                <Divider style={{marginTop: 2, marginBottom: 2}} />\r\n                                            </Grid>\r\n                                        </>}\r\n\r\n                                        <Grid item xs={12}>\r\n                                            <Controller\r\n                                                name='email'\r\n                                                control={control}\r\n                                                defaultValue={emailDefault}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='receiver-email'>\r\n                                                            E-Mail: *\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='receiver-email' placeholder='E-Mail Adresse' onFocus={() => setFocused('email')}  fullWidth />{' '}\r\n                                                        {error && (\r\n                                                        <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{\r\n                                                  required: 'Dieses Feld wird benötigt.',\r\n                                                  pattern: {\r\n                                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                                    message: 'Ungültige E-Mail Adresse',\r\n                                                  },\r\n                                                }}\r\n                                                />\r\n                                        </Grid>\r\n                                        {/* <Grid item xs={12}>\r\n                                            <Divider style={{marginTop: 2, marginBottom: 2}} />\r\n                                        </Grid> */}\r\n\r\n                                        <Grid item xs={12}>\r\n                                            <Controller\r\n                                                name='phone_number'\r\n                                                control={control}\r\n                                                defaultValue={phoneNumberDefault}\r\n                                                render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='receiver-phonenumber'>\r\n                                                            Tel.-Nr. (inkl. Vorwahl):\r\n                                                        </InputLabel>\r\n                                                        <PhoneInput\r\n                                                            id=\"receiver-phonenumber\"\r\n                                                            placeholder=\"Tel.-Nr. (inkl. Vorwahl) z.B. +49 30 12345678\"\r\n                                                            country={'de'}\r\n                                                            localization={de}\r\n                                                            style={{\r\n                                                              marginTop: \"24px\",\r\n                                                            }}\r\n                                                            inputStyle={{\r\n                                                              width: \"100%\",\r\n                                                              height: \"42px\"\r\n                                                            }}\r\n                                                            onChange={(value, country, e, formattedValue) => {\r\n                                                                onChange(formattedValue)\r\n                                                            }}\r\n                                                            onFocus={() => setFocused(localData.customer_type === CUSTOMER_TYPE_PRIVATE ? 'phoneNumber' : 'representativePhoneNumber')}\r\n                                                            value={value}\r\n                                                            fullWidth/>\r\n                                                            {error && (\r\n                                                                <FormHelperText error>{error.message}</FormHelperText>\r\n                                                            )}\r\n                                                    </FormControl>\r\n                                                )} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Divider style={{marginTop: 2, marginBottom: 2}} />\r\n                                        </Grid>\r\n\r\n                                        { localData && (localData.order_reason === ORDER_REASON_CARE_CASE || localData.order_reason === ORDER_REASON_DEATH) && <>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant='h6' gutterBottom>\r\n                                                Bevollmächtigter\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                        <Controller\r\n                                            name='representativeSalutation'\r\n                                            control={control}\r\n                                            defaultValue={representativeSalutationDefault}\r\n                                            render={({ field, fieldState: { error } }) => (\r\n                                            <FormControl fullWidth error={!!error}>\r\n                                                <InputLabel shrink htmlFor='receiver-representativesalutation'>\r\n                                                    Anrede:\r\n                                                </InputLabel>\r\n                                                <NativeSelect\r\n                                                    {...field}\r\n                                                    id=\"receiver-representativesalutation\"\r\n                                                    name='salutation'\r\n                                                    style={{\r\n                                                        minHeight: \"48px\"\r\n                                                    }}\r\n                                                    onFocus={() => setFocused('representativeSalutation')}\r\n                                                    inputProps={{ 'aria-label': 'salutation' }}>\r\n                                                    <option value={SALUTATION_MR}>{SALUTATION_MR}</option>\r\n                                                    <option value={SALUTATION_MRS}>{SALUTATION_MRS}</option>\r\n                                                    <option value={SALUTATION_DIVERS}>{SALUTATION_DIVERS}</option>\r\n                                                </NativeSelect>\r\n                                            </FormControl>\r\n                                            )}\r\n                                        />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}></Grid>\r\n\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Controller\r\n                                                name='representativeNameFirst'\r\n                                                control={control}\r\n                                                defaultValue={representativeNameFirstDefault}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='receiver-representativenamefirst'>\r\n                                                            Vorname: *\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='receiver-representativenamefirst' placeholder='Vorname' onFocus={() => setFocused('representativeName')}  />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{\r\n                                                  required: 'Dieses Feld wird benötigt.',\r\n                                                }}\r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Controller\r\n                                                name='representativeNameLast'\r\n                                                control={control}\r\n                                                defaultValue={representativeNameLastDefault}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='receiver-representativenamelast'>\r\n                                                            Nachname: *\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='receiver-representativenamelast' placeholder='Nachname' onFocus={() => setFocused('representativeName')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{\r\n                                                  required: 'Dieses Feld wird benötigt.',\r\n                                                }}\r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Divider style={{marginTop: 2, marginBottom: 8}} />\r\n                                        </Grid>\r\n                                        </> }\r\n\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant='h6' gutterBottom>\r\n                                                Optionale Zusatzleistungen\r\n                                            </Typography>\r\n                                        </Grid>\r\n\r\n                                        {localData && localData.order_reason === ORDER_REASON_MOVE && <Grid item xs={12}>\r\n                                            <Controller\r\n                                                name='notice_of_relocation'\r\n                                                control={control}\r\n                                                defaultValue={noticeOfRelocationDefault}\r\n                                                render={({ field: { value, onChange }, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <FormLabel>Umzugsmitteilung:</FormLabel>\r\n                                                        <FormControlLabel\r\n                                                            checked={value}\r\n                                                            onChange={e => { setNoticeOfRelocatioin(e.target.checked); onChange(e); }}\r\n                                                            onFocus={() => setFocused('noticeOfRelocation')}\r\n                                                            control={<PrimaryCheckBox />}\r\n                                                            label={<label>Ja, ich möchte die kostenlose <Link to='#' onClick={e => { e.preventDefault();  handleOpenNoticeOfRelocation(); }}>Umzugsmitteilung</Link></label>}\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                )} />\r\n                                        </Grid> }\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Controller\r\n                                                name='parcel_shipments'\r\n                                                control={control}\r\n                                                defaultValue={parcelShipmentsDefault}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <FormLabel>Paketsendungen:</FormLabel>\r\n                                                        <FormControlLabel\r\n                                                            {...field}\r\n                                                            checked={parcelAccepted}\r\n                                                            onChange={handleParcelsCheckBox}\r\n                                                            onFocus={() => setFocused('parcel_shipments')}\r\n                                                            control={<PrimaryCheckBox />}\r\n                                                            label={'Pakete und Päckchen nachsenden'}\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                )} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Controller\r\n                                                name='dhl_infopost'\r\n                                                control={control}\r\n                                                defaultValue={dhlINFOPOSTDefault}\r\n                                                render={({ field: { value, onChange }, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <FormLabel>DHL Infopost:</FormLabel>\r\n                                                        <FormControlLabel\r\n                                                            checked={value}\r\n                                                            onChange={e => { setDhlINFOPOST(e.target.checked); onChange(e); }}\r\n                                                            control={<PrimaryCheckBox />}\r\n                                                            label={<label><Link to='#' onClick={e => { e.preventDefault();  handleOpenInfopostModal(); }}>weitere Informationen</Link></label>}\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                )} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={11}>\r\n                                            <Controller\r\n                                                name='other_service'\r\n                                                control={control}\r\n                                                defaultValue={localData ? get(localData, 'other_service', '') : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                            <FormControl fullWidth error={!!error}>\r\n                                                <InputLabel shrink htmlFor='receiver-other-service'>\r\n                                                    Weitere Versanddienstleister:\r\n                                                </InputLabel>\r\n                                                <Select\r\n                                                    {...field}\r\n                                                    multiple\r\n                                                    id=\"receiver-other-service\"\r\n                                                    name='other_service'\r\n                                                    inputProps={{ 'aria-label': 'other_service' }}\r\n                                                    value={otherServices}\r\n                                                    onChange={evt => setOtherServices(evt.target.value)}\r\n                                                    input={<Input id={\"select-multiple-chip\"} />}\r\n                                                    renderValue={(selected) => (\r\n                                                        <div className={classes.chips}>\r\n                                                            {\r\n                                                                selected.map((value) => (\r\n                                                                    <Chip key={value} label={value} variant='outlined' className={classes.chip} />\r\n                                                                ))\r\n                                                            }\r\n                                                        </div>\r\n                                                    )}\r\n                                                >\r\n                                                    {OTHER_SERVICES.map((service, idx) => (\r\n                                                        <MenuItem key={idx} value={service.name} style={getMultipleSelectStyles(service.name, otherServices, theme)}>\r\n                                                            {service.name}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            )}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={1}>\r\n                                            <IconButton className={classes.multiClear} onClick={() => {setOtherServices([])}}>\r\n                                                <HighlightOffIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}></Grid>\r\n                                        <Grid item xs={12} sm={12}>\r\n                                            <Box display='flex' justifyContent={\"space-between\"} pt={1}>\r\n                                                <Button\r\n                                                    variant='contained'\r\n                                                    component={RouterLink}\r\n                                                    to='/'\r\n                                                    style={{ marginLeft: 8 }}>\r\n                                                    zurück\r\n                                                </Button>\r\n                                                <Button\r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    style={{\r\n                                                        color: COLOR_WHITE,\r\n                                                        backgroundColor: COLOR_PRIMARY_DARK\r\n                                                    }}>\r\n                                                    weiter\r\n                                                </Button>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item sm={12} md={5} style={{borderLeft: '1px solid lightgray', marginTop: 32, marginBottom: 32}}>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                flexDirection: 'column'\r\n                            }}>\r\n                                <HelpPanel field={focused} />\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n            <ParcelsDialog\r\n                openModal={openParcelsModal}\r\n                handleAcceptModal={handleAcceptParcelsModal}\r\n                handleRejectModal={handleRejectParcelsModal} />\r\n            <InfopostDialog\r\n                openModal={openInfopostModal}\r\n                handleCloseModal={handleCloseInfopostModal} />\r\n            <NoticeOfRelocateDialog\r\n                openModal={openNoticeOfRelocation}\r\n                handleCloseModal={handleCloseNoticeOfRelocation} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ReceiverScreen;","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    Link,\r\n    makeStyles,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { \r\n    COLOR_WHITE,\r\n    COLOR_GRAY_1\r\n} from '../../constants/color.constant';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderTop: '1px solid rgba(0, 0, 0, 0.1)',\r\n        backgroundColor: COLOR_WHITE,\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        paddingTop: 16,\r\n        paddingBottom: 16\r\n    },\r\n    box: {\r\n        ...theme.mixins.customize.flexMixin('center', 'center'),\r\n        color: COLOR_GRAY_1,\r\n        '@media (max-width: 960px)': {\r\n            textAlign: 'center',\r\n            flexDirection: 'column',\r\n            '& $copyright': {\r\n                padding: '10px 0 0',\r\n            }\r\n        }\r\n    },\r\n    copyright: {\r\n        flexGrow: 1,\r\n        paddingLeft: 100\r\n    },\r\n    btnGroup: {\r\n        ...theme.mixins.customize.flexMixin('center', 'center'),\r\n    }\r\n}));\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <footer>\r\n            <Container className={classes.root}>\r\n                <div className={classes.box}>\r\n                    <Typography\r\n                        variant='body2'\r\n                        className={classes.copyright}\r\n                        component='p'>\r\n                        Copyright 2022 meinnachsendeservice.de\r\n                    </Typography>\r\n                    <div>\r\n                        <Link\r\n                            color='textPrimary'\r\n                            style={{\r\n                                paddingRight: 24,\r\n                                paddingLeft: 24,\r\n                                fontSize: 16\r\n                            }}\r\n                            component={RouterLink}\r\n                            to={`/imprint`}>\r\n                            Impressum\r\n                        </Link>\r\n                        <Link\r\n                            color='textPrimary'\r\n                            style={{\r\n                                paddingRight: 24,\r\n                                paddingLeft: 24,\r\n                                fontSize: 16\r\n                            }}\r\n                            component={RouterLink}\r\n                            to={`/data-privacy`}>\r\n                            Datenschutz\r\n                        </Link>\r\n                        <Link\r\n                            color='textPrimary'\r\n                            style={{\r\n                                paddingRight: 24,\r\n                                paddingLeft: 24,\r\n                                fontSize: 16\r\n                            }}\r\n                            component={RouterLink}\r\n                            to={`/agb`}>\r\n                            AGB\r\n                        </Link>\r\n                        <Link\r\n                            color='textPrimary'\r\n                            style={{\r\n                                paddingRight: 24,\r\n                                paddingLeft: 24,\r\n                                fontSize: 16\r\n                            }}\r\n                            component={RouterLink}\r\n                            to={`/recall`}>\r\n                            Wiederruf\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/logo.9f5ee042.png\";","import React from 'react';\r\nimport {\r\n    AppBar,\r\n    Link,\r\n    makeStyles,\r\n    Toolbar\r\n} from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport logo from '../../assets/images/logo.png'\r\nimport { COLOR_WHITE } from '../../constants/color.constant';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        backgroundColor: COLOR_WHITE,\r\n        transition: 'all .2s',\r\n        boxShadow: '0px 2px 8px -1px rgb(0 0 0 / 10%)',\r\n        paddingRight: '0 !important',\r\n        paddingTop: '8px',\r\n        paddingBottom: '8px',\r\n    },\r\n    logoContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    logoWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '30%',\r\n        [theme.breakpoints.down('lg')]: {\r\n          width: '50%',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n          width: '100%',\r\n        },\r\n    },\r\n    logo: {\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n    }\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar\r\n            position='fixed'\r\n            className={classes.header}>\r\n            <Toolbar className={classes.logoContainer}>\r\n                <Link to='/' className={classes.logoWrapper} component={RouterLink}>\r\n                    <img src={logo} alt='Nachsenden.info' className={classes.logo} />\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Header;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nconst NoParcelOrInfopostForOverseasDialog = ({ openModal, handleCloseModal, country }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Bitte korrigieren Sie Ihre Eingabe:\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                    {`Bei einem internationalen Nachsendeauftrag (${country}) ist die Nachsendung von Paketen und Päckchen, sowie von DHL INFOPOST nicht möglich. Die Optionen wurden automatisch aus Ihrem Auftrag entfernt. Sie können nun mit der Beantragung fortfahren.`}\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default NoParcelOrInfopostForOverseasDialog;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nconst ReasonMoveOrAbsenceForOverseasDialog = ({ openModal, handleCloseModal, country }) => {\r\n    return (\r\n        <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Bitte korrigieren Sie Ihre Eingabe:\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" component={'div'}>\r\n                    <Typography id=\"modal-modal-description\" style={{ marginTop: 8 }} component='p'>\r\n                        {`Ein internationaler Nachsendeauftrag (${country}) kann nur für Umzug oder Abwesenheit gestellt werden. Bitte ändern Sie das Zielland oder den Grund des Auftrags falls möglich.`}\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseModal} style={{ margin: 4 }} autoFocus>\r\n                    Schliessen\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default ReasonMoveOrAbsenceForOverseasDialog;","import React, { useEffect, useState } from 'react';\r\nimport { alpha, Box, Breadcrumbs, Button, Container, Divider, FormControl, FormHelperText, Grid, InputBase, InputLabel, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport validator from 'validator';\r\nimport lookup from 'country-code-lookup';\r\n\r\nimport Meta from '../components/Meta';\r\nimport OrderSteps from '../components/OrderSteps';\r\nimport HelpPanel from '../components/HelpPanel';\r\nimport { ORDER_INFO, ORDER_REASON_ABSENCE_VACATION, ORDER_REASON_MOVE } from '../constants/key.constant';\r\nimport { COLOR_PRIMARY_DARK, COLOR_WHITE } from '../constants/color.constant';\r\nimport NoParcelOrInfopostForOverseasDialog from '../components/dialog/NoParcelOrInfopostForOverseasDialog';\r\nimport ReasonMoveOrAbsenceForOverseasDialog from '../components/dialog/ReasonMoveOrAbsenceForOverseasDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    form: {\r\n      '& > *': {\r\n        marginBottom: 16,\r\n      },\r\n    },\r\n    boxContainer: {\r\n      position: 'relative',\r\n      ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n      padding: '24px 10%',\r\n      height: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: '24px',\r\n      },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n}));\r\n\r\nconst Input = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        '&.Mui-error $input': {\r\n            borderColor: '#f44336',\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.common.white,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        '&:focus': {\r\n            boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst AddressScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n    const methods = useForm({ shouldUnregister: true });\r\n    const { handleSubmit, control, setValue } = methods;\r\n    const [focused, setFocused] = useState('');\r\n    const hiddenKeys = [\r\n        'addressSupplement',\r\n        'addressAdditionalPoBox',\r\n        'addressAdditionalZipCode',\r\n        'addressAdditionalCity',\r\n        'newAddressSupplement',\r\n        'newAddressAdditionalPoBox',\r\n        'newAddressAdditionalZipCode',\r\n        'newAddressAdditionalCity',\r\n    ];\r\n\r\n    // Local Storage Data\r\n    let localData = localStorage.getItem(ORDER_INFO);\r\n    if (localData) {\r\n        localData = JSON.parse(localData);\r\n        if (!localData.customer_type) {\r\n            history.push('/');\r\n        }\r\n        if (!localData.salutation) {\r\n            history.push('/receiver');\r\n        }\r\n    } else {\r\n        history.push('/');\r\n    }\r\n    \r\n    const [newCountry, setNewCountry] = useState(localData && localData.new_country ? localData.new_country : 'Germany');\r\n    const [oldSupplement, setOldSupplement] = useState(localData && localData.address_supplement ? true : false);\r\n    const [oldAdditionalMailBox, setOldAdditionalMailBox] = useState(localData && localData.address_additional_pobox ? true : false);\r\n    const [newSupplement, setNewSupplement] = useState(localData && localData.new_address_supplement ? true : false);\r\n    const [newAdditionalMailBox, setNewAdditionalMailBox] = useState(localData && localData.new_address_additional_pobox ? true : false);\r\n    const [openNoParcelModal, setNoParcelModal] = useState(false);\r\n    const [openWrongReasonModal, setWrongReasonModal] = useState(false);\r\n    const handleOpenWrongReasonModal = () => setWrongReasonModal(true);\r\n    const handleCloseWrongReasonModal = () => setWrongReasonModal(false);\r\n    const handleOpenNoParcelModal = () => setNoParcelModal(true);\r\n    const handleCloseNoParcelModal = () => {\r\n        setNoParcelModal(false);\r\n        history.push('/summary');\r\n    };\r\n    const [countryForModal, setCountryForModal] = useState('');\r\n\r\n    useEffect(() => {\r\n        setValue('new_country', newCountry);\r\n    }, [ newCountry, setValue ]);\r\n\r\n    const checkPosalCode = (v) => {\r\n        return validator.isPostalCode(v, 'DE') ? true : 'Adresse muss 5 Stellen enthalten.';\r\n    };\r\n\r\n    const checkPosalCodeWithNewCountry = (v) => {\r\n        let countryCode = lookup.byCountry(newCountry).internet;\r\n        countryCode = validator.isFloatLocales.indexOf(countryCode) > -1 ? countryCode : 'DE';\r\n        return validator.isPostalCode(v, countryCode) ? true : 'Adresse muss 5 Stellen enthalten.';\r\n    };\r\n\r\n    const checkPoBox = (v) => {\r\n        return v.length >= 2 && v.length <= 6 ? true : 'Die Nummer des neuen Postfach muss 2-6 Stellen haben.';\r\n    };\r\n\r\n    const onNext = (data) => {\r\n        let isModal = false;\r\n        Object.keys(data).map(key => delete localData[key]);\r\n        hiddenKeys.map(key => delete localData[key]);\r\n        localData = { ...localData, ...data};\r\n\r\n        if (localData.new_country !== 'Germany') {   //International\r\n            if (localData.order_reason !== ORDER_REASON_MOVE && localData.order_reason !== ORDER_REASON_ABSENCE_VACATION) {\r\n                setCountryForModal(localData.new_country);\r\n                handleOpenWrongReasonModal();\r\n                return;\r\n            }\r\n            if (localData.parcel_shipments || localData.dhl_infopost) {\r\n                setCountryForModal(localData.new_country);\r\n                localData.parcel_shipments = false;\r\n                localData.dhl_infopost = false;\r\n                handleOpenNoParcelModal();\r\n                isModal = true;\r\n            }\r\n        }\r\n        localData.new_countryCode = lookup.byCountry(localData.new_country).internet;\r\n        localData.address = `${data.addressStreet} ${data.addressHouse}, ${data.addressZipCode} ${data.addressCity}`;\r\n        localData.new_address = `${data.newAddressStreet} ${data.newAddressHouse}, ${data.newAddressZipCode} ${data.newAddressCity}, ${newCountry}`;\r\n        console.log(localData);\r\n\r\n        localStorage.setItem(ORDER_INFO, JSON.stringify(localData));\r\n        if (!isModal) {\r\n            history.push('/summary');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(openNoParcelModal)\r\n    }, [openNoParcelModal]);\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}>\r\n                <Grid item xs={12}>\r\n                    <Breadcrumbs style={{ marginBottom: 24 }}/>\r\n                    <OrderSteps step={2} />\r\n                </Grid>\r\n            </Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item sm={12} md={7}>\r\n                            <FormProvider {...methods}>\r\n                                <form className={classes.form} onSubmit={handleSubmit(onNext)}>\r\n                                    <Grid container spacing={2}>\r\n                                        <Typography variant='h5' gutterBottom>\r\n                                            {'Ihre alte Anschrift'}\r\n                                        </Typography>\r\n                                        <Grid item xs={12} sm={9}>\r\n                                            <Controller\r\n                                                name='addressStreet'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.addressStreet ? localData.addressStreet : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-addressstreet'>\r\n                                                            {'Straße  *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-addressstreet' placeholder='Straße' onFocus={() => setFocused('addressStreetHouse')}/>{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={3}>\r\n                                            <Controller\r\n                                                name='addressHouse'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.addressHouse ? localData.addressHouse : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-addresshouse'>\r\n                                                            {'Haus-Nr. *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-addresshouse' placeholder='Nr.' onFocus={() => setFocused('addressStreetHouse')} />{' '}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid>\r\n\r\n                                        {localData && (localData.order_reason === ORDER_REASON_MOVE || localData.order_reason === ORDER_REASON_ABSENCE_VACATION) && \r\n                                            <Grid item xs={12} style={{ marginTop: -8, marginBottom: -8, paddingBottom: 0 }}>\r\n                                                <Box display='flex' justifyContent={\"flex-end\"}>\r\n                                                    <div style={{\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        flexWrap: 'wrap',\r\n                                                        cursor: 'pointer',\r\n                                                        color: COLOR_PRIMARY_DARK\r\n                                                    }} onClick={() => {\r\n                                                        setOldSupplement(!oldSupplement);\r\n                                                    }}>\r\n                                                        {oldSupplement ? <IndeterminateCheckBoxIcon /> : <AddBoxIcon />}<span>{' Adresszusatz hinzufügen'}</span>\r\n                                                    </div>  \r\n                                                </Box>\r\n                                            </Grid>\r\n                                         }\r\n\r\n                                        { oldSupplement && <Grid item xs={12}>\r\n                                            <Controller\r\n                                                name='address_supplement'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.address_supplement ? localData.address_supplement : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-addresssupplement'>\r\n                                                            {'Adresszusatz *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-addresssupplement' placeholder='Adresszusatz (z.B. c/o ...)' onFocus={() => setFocused('addressSupplement')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid> }\r\n\r\n                                        <Grid item xs={12} sm={3}>\r\n                                            <Controller\r\n                                                name='addressZipCode'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.addressZipCode ? localData.addressZipCode : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-addresszipcode'>\r\n                                                            {'PLZ *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-addresszipcode' placeholder='PLZ' onFocus={() => setFocused('addressZipCodeCity')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                    validate: checkPosalCode\r\n                                                }} \r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={9}>\r\n                                            <Controller\r\n                                                name='addressCity'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.addressCity ? localData.addressCity : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-addresscity'>\r\n                                                            {'Ort *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-addresscity' placeholder='Ort' onFocus={() => setFocused('addressZipCodeCity')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} style={{ marginTop: -8, marginBottom: -8 }}>\r\n                                            <Box display='flex' justifyContent={\"flex-end\"}>\r\n                                                    <div style={{\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        flexWrap: 'wrap',\r\n                                                        cursor: 'pointer',\r\n                                                        color: COLOR_PRIMARY_DARK\r\n                                                    }} onClick={() => {\r\n                                                        setOldAdditionalMailBox(!oldAdditionalMailBox);\r\n                                                    }}>\r\n                                                        {oldAdditionalMailBox ? <IndeterminateCheckBoxIcon /> : <AddBoxIcon />}<span>{' Zusätzlich Postfach'}</span>\r\n                                                    </div>  \r\n                                            </Box>\r\n                                        </Grid>\r\n                                        {oldAdditionalMailBox && <>\r\n                                            <Grid item xs={12}>\r\n                                                <Controller\r\n                                                    name='address_additional_pobox'\r\n                                                    control={control}\r\n                                                    defaultValue={localData && localData.address_additional_pobox ? localData.address_additional_pobox : ''}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                        <FormControl fullWidth error={!!error}>\r\n                                                            <InputLabel shrink htmlFor='form-addressadditionalpobox'>\r\n                                                                {'Postfach-Nr. *'}\r\n                                                            </InputLabel>\r\n                                                            <Input {...field} id='form-addressadditionalpobox' placeholder='Postfach-Nummer' \r\n                                                                type='tel' onInput = {(e) =>{\r\n                                                                    e.target.value = e.target.value.length > 0 ? Math.max(0, parseInt(e.target.value.replace(/[^0-9]/g, '')) ).toString() : ''\r\n                                                                    if (e.target.value === 'NaN') {\r\n                                                                        e.target.value = ''\r\n                                                                }}}\r\n                                                                onFocus={() => setFocused('addressPoBox')} />{' '}\r\n                                                            {error && (\r\n                                                                <FormHelperText error>{error.message}</FormHelperText>\r\n                                                            )}\r\n                                                        </FormControl>\r\n                                                    )}\r\n                                                    rules={{ \r\n                                                        required: 'Dieses Feld wird benötigt.',\r\n                                                        validate: checkPoBox\r\n                                                    }} \r\n                                                    />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={3}>\r\n                                                <Controller\r\n                                                    name='address_additional_zipcode'\r\n                                                    control={control}\r\n                                                    defaultValue={localData && localData.address_additional_zipcode ? localData.address_additional_zipcode : ''}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                        <FormControl fullWidth error={!!error}>\r\n                                                            <InputLabel shrink htmlFor='form-addressadditionalzipcode'>\r\n                                                                {'PLZ *'}\r\n                                                            </InputLabel>\r\n                                                            <Input {...field} id='form-addressadditionalzipcode' placeholder='PLZ' onFocus={() => setFocused('addressZipCodeCity')} />{' '}\r\n                                                            {error && (\r\n                                                                <FormHelperText error>{error.message}</FormHelperText>\r\n                                                            )}\r\n                                                        </FormControl>\r\n                                                    )}\r\n                                                    rules={{ \r\n                                                        required: 'Dieses Feld wird benötigt.',\r\n                                                        validate: checkPosalCode\r\n                                                    }} \r\n                                                    />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9}>\r\n                                                <Controller\r\n                                                    name='address_additional_city'\r\n                                                    control={control}\r\n                                                    defaultValue={localData && localData.address_additional_city ? localData.address_additional_city : ''}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                        <FormControl fullWidth error={!!error}>\r\n                                                            <InputLabel shrink htmlFor='form-addressadditionalcity'>\r\n                                                                {'Ort *'}\r\n                                                            </InputLabel>\r\n                                                            <Input {...field} id='form-addressadditionalcity' placeholder='Ort' onFocus={() => setFocused('addressZipCodeCity')} />{' '}\r\n                                                            {error && (\r\n                                                                <FormHelperText error>{error.message}</FormHelperText>\r\n                                                            )}\r\n                                                        </FormControl>\r\n                                                    )}\r\n                                                    rules={{ \r\n                                                        required: 'Dieses Feld wird benötigt.',\r\n                                                    }} \r\n                                                    />\r\n                                            </Grid>\r\n                                        </>}\r\n                                        \r\n\r\n                                        <Grid item xs={12}>\r\n                                            <Divider style={{marginTop: 2, marginBottom: 2}} />\r\n                                        </Grid>\r\n\r\n                                        <Typography variant='h5' gutterBottom>\r\n                                            {'Ihre neue Anschrift'}\r\n                                        </Typography>\r\n                                        <Grid item xs={12} sm={9}>\r\n                                            <Controller\r\n                                                name='new_country'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.new_country ? localData.new_country : ''}\r\n                                                render={({ field: {value}, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-newcountry'>\r\n                                                            {'Land'}\r\n                                                        </InputLabel>\r\n                                                        <CountryDropdown\r\n                                                            value={value}\r\n                                                            disabled={localData && localData.order_reason && localData.order_reason !== ORDER_REASON_MOVE && localData.order_reason !== ORDER_REASON_ABSENCE_VACATION}\r\n                                                            onChange={setNewCountry}\r\n                                                            onFocus={() => setFocused('Land')}\r\n                                                            whitelist={['DE']}\r\n                                                            style={{\r\n                                                                marginTop: \"24px\",\r\n                                                                width: \"100%\",\r\n                                                                height: \"42px\"\r\n                                                            }}\r\n                                                        />\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid><Grid item xs={12} sm={3}>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={9}>\r\n                                            <Controller\r\n                                                name='newAddressStreet'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.newAddressStreet ? localData.newAddressStreet : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-newaddressstreet'>\r\n                                                            {'Straße  *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-newaddressstreet' placeholder='Straße' onFocus={() => setFocused('newAddressStreetHouse')}/>{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={3}>\r\n                                            <Controller\r\n                                                name='newAddressHouse'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.newAddressHouse ? localData.newAddressHouse : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-newaddresshouse'>\r\n                                                            {'Haus-Nr. *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-newaddresshouse' placeholder='Nr.' onFocus={() => setFocused('newAddressStreetHouse')} />{' '}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid>\r\n                                        {localData && (localData.order_reason === ORDER_REASON_MOVE || localData.order_reason === ORDER_REASON_ABSENCE_VACATION) && \r\n                                            <Grid item xs={12} style={{ marginTop: -8, marginBottom: -8, paddingBottom: 0 }}>\r\n                                                <Box display='flex' justifyContent={\"flex-end\"}>\r\n                                                        <div style={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                            flexWrap: 'wrap',\r\n                                                            cursor: 'pointer',\r\n                                                            color: COLOR_PRIMARY_DARK\r\n                                                        }} onClick={() => {\r\n                                                            setNewSupplement(!newSupplement);\r\n                                                        }}>\r\n                                                            {newSupplement ? <IndeterminateCheckBoxIcon /> : <AddBoxIcon />}<span>{' Adresszusatz hinzufügen'}</span>\r\n                                                        </div>  \r\n                                                </Box>\r\n                                            </Grid>\r\n                                        }\r\n                                        { newSupplement && <Grid item xs={12}>\r\n                                            <Controller\r\n                                                name='new_address_supplement'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.new_address_supplement ? localData.new_address_supplement : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-newaddresssupplement'>\r\n                                                            {'Adresszusatz *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-newaddresssupplement' placeholder='Adresszusatz (z.B. c/o ...)' onFocus={() => setFocused('addressSupplement')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid> }\r\n\r\n                                        <Grid item xs={12} sm={3}>\r\n                                            <Controller\r\n                                                name='newAddressZipCode'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.newAddressZipCode ? localData.newAddressZipCode : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-newaddresszipcode'>\r\n                                                            {'PLZ *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-newaddresszipcode' placeholder='PLZ' onFocus={() => setFocused('newAddressZipCodeCity')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                    validate: checkPosalCodeWithNewCountry\r\n                                                }} \r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={9}>\r\n                                            <Controller\r\n                                                name='newAddressCity'\r\n                                                control={control}\r\n                                                defaultValue={localData && localData.newAddressCity ? localData.newAddressCity : ''}\r\n                                                render={({ field, fieldState: { error } }) => (\r\n                                                    <FormControl fullWidth error={!!error}>\r\n                                                        <InputLabel shrink htmlFor='form-newaddresscity'>\r\n                                                            {'Ort *'}\r\n                                                        </InputLabel>\r\n                                                        <Input {...field} id='form-newaddresscity' placeholder='Ort' onFocus={() => setFocused('newAddressZipCodeCity')} />{' '}\r\n                                                        {error && (\r\n                                                            <FormHelperText error>{error.message}</FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                )}\r\n                                                rules={{ \r\n                                                    required: 'Dieses Feld wird benötigt.',\r\n                                                }} \r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} style={{ marginTop: -8, marginBottom: -8 }}>\r\n                                            <Box display='flex' justifyContent={\"flex-end\"}>\r\n                                                    <div style={{\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        flexWrap: 'wrap',\r\n                                                        cursor: 'pointer',\r\n                                                        color: COLOR_PRIMARY_DARK\r\n                                                    }} onClick={() => {\r\n                                                        setNewAdditionalMailBox(!newAdditionalMailBox);\r\n                                                    }}>\r\n                                                        {newAdditionalMailBox ? <IndeterminateCheckBoxIcon /> : <AddBoxIcon />}<span>{' Zusätzlich Postfach'}</span>\r\n                                                    </div>  \r\n                                            </Box>\r\n                                        </Grid>\r\n\r\n                                        {newAdditionalMailBox && <>\r\n                                            <Grid item xs={12}>\r\n                                                <Controller\r\n                                                    name='new_address_additional_pobox'\r\n                                                    control={control}\r\n                                                    defaultValue={localData && localData.new_address_additional_pobox ? localData.new_address_additional_pobox : ''}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                        <FormControl fullWidth error={!!error}>\r\n                                                            <InputLabel shrink htmlFor='form-newaddressadditionalpobox'>\r\n                                                                {'Postfach-Nr. *'}\r\n                                                            </InputLabel>\r\n                                                            <Input {...field} id='form-newaddressadditionalpobox' placeholder='Postfach-Nummer' \r\n                                                                type='tel' onInput = {(e) =>{\r\n                                                                    e.target.value = e.target.value.length > 0 ? Math.max(0, parseInt(e.target.value.replace(/[^0-9]/g, '')) ).toString() : ''\r\n                                                                    if (e.target.value === 'NaN') {\r\n                                                                        e.target.value = ''\r\n                                                                }}}\r\n                                                                onFocus={() => setFocused('newAddressPoBox')} />{' '}\r\n                                                            {error && (\r\n                                                                <FormHelperText error>{error.message}</FormHelperText>\r\n                                                            )}\r\n                                                        </FormControl>\r\n                                                    )}\r\n                                                    rules={{ \r\n                                                        required: 'Dieses Feld wird benötigt.',\r\n                                                        validate: checkPoBox\r\n                                                    }} \r\n                                                    />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={3}>\r\n                                                <Controller\r\n                                                    name='new_address_additional_zipcode'\r\n                                                    control={control}\r\n                                                    defaultValue={localData && localData.new_address_additional_zipcode ? localData.new_address_additional_zipcode : ''}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                        <FormControl fullWidth error={!!error}>\r\n                                                            <InputLabel shrink htmlFor='form-newaddressadditionalzipcode'>\r\n                                                                {'PLZ *'}\r\n                                                            </InputLabel>\r\n                                                            <Input {...field} id='form-newaddressadditionalzipcode' placeholder='PLZ' onFocus={() => setFocused('newAddressZipCodeCity')} />{' '}\r\n                                                            {error && (\r\n                                                                <FormHelperText error>{error.message}</FormHelperText>\r\n                                                            )}\r\n                                                        </FormControl>\r\n                                                    )}\r\n                                                    rules={{ \r\n                                                        required: 'Dieses Feld wird benötigt.',\r\n                                                        validate: checkPosalCodeWithNewCountry\r\n                                                    }} \r\n                                                    />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9}>\r\n                                                <Controller\r\n                                                    name='new_address_additional_city'\r\n                                                    control={control}\r\n                                                    defaultValue={localData && localData.new_address_additional_city ? localData.new_address_additional_city : ''}\r\n                                                    render={({ field, fieldState: { error } }) => (\r\n                                                        <FormControl fullWidth error={!!error}>\r\n                                                            <InputLabel shrink htmlFor='form-newaddressadditionalcity'>\r\n                                                                {'Ort *'}\r\n                                                            </InputLabel>\r\n                                                            <Input {...field} id='form-newaddressadditionalcity' placeholder='Ort' onFocus={() => setFocused('newAddressZipCodeCity')} />{' '}\r\n                                                            {error && (\r\n                                                                <FormHelperText error>{error.message}</FormHelperText>\r\n                                                            )}\r\n                                                        </FormControl>\r\n                                                    )}\r\n                                                    rules={{ \r\n                                                        required: 'Dieses Feld wird benötigt.',\r\n                                                    }} \r\n                                                    />\r\n                                            </Grid>\r\n                                        </>}\r\n\r\n                                        <Grid item xs={12} sm={12} style={{marginTop: 8}}>\r\n                                            <Box display='flex' justifyContent={\"space-between\"} pt={1}>\r\n                                                <Button \r\n                                                    variant='contained'\r\n                                                    component={RouterLink}\r\n                                                    to='/receiver'\r\n                                                    style={{ marginLeft: 8 }}>\r\n                                                    zurück\r\n                                                </Button>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    style={{\r\n                                                        color: COLOR_WHITE,\r\n                                                        backgroundColor: COLOR_PRIMARY_DARK\r\n                                                    }}>\r\n                                                    weiter\r\n                                                </Button>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item sm={12} md={5} style={{borderLeft: '1px solid lightgray', marginTop: 32, marginBottom: 32}}>\r\n                            <Box sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                flexDirection: 'column'\r\n                            }}>\r\n                                <HelpPanel field={focused} />\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n            <NoParcelOrInfopostForOverseasDialog \r\n                openModal={openNoParcelModal}\r\n                handleCloseModal={handleCloseNoParcelModal}\r\n                country={countryForModal}\r\n            />\r\n            <ReasonMoveOrAbsenceForOverseasDialog \r\n                openModal={openWrongReasonModal}\r\n                handleCloseModal={handleCloseWrongReasonModal}\r\n                country={countryForModal}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AddressScreen;","import React from 'react';\r\nimport { Box, Breadcrumbs, Button, Container, Divider, FormControl, Grid, InputLabel, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Meta from '../components/Meta';\r\nimport OrderSteps from '../components/OrderSteps';\r\nimport { COLOR_PRIMARY_DARK, COLOR_WHITE } from '../constants/color.constant';\r\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\r\nimport { CUSTOMER_TYPE_BUSINESS, CUSTOMER_TYPE_PRIVATE, NOT_SELECTED, ORDER_INFO, SELECTED } from '../constants/key.constant';\r\nimport { getCustomerType, getOrderReason } from '../utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    form: {\r\n      '& > *': {\r\n        marginBottom: 16,\r\n      },\r\n    },\r\n    boxContainer: {\r\n      position: 'relative',\r\n      ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n      padding: '24px 10%',\r\n      height: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: '24px',\r\n      },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n}));\r\n\r\nconst wrapWithBold = (props) => {\r\n    return <span style={{fontWeight: \"bold\"}}>\r\n        {props}\r\n    </span>\r\n}\r\n\r\nconst SummaryScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n    const methods = useForm();\r\n    const { handleSubmit, setValue, control } = methods;\r\n\r\n    let oldTwoShowMode = false;\r\n    let newTwoShowMode = false;\r\n\r\n    // Local Storage Data\r\n    let localData = localStorage.getItem(ORDER_INFO);\r\n    if (localData) {\r\n        localData = JSON.parse(localData);\r\n        if (!localData.customer_type) {\r\n            history.push('/');\r\n        }\r\n        if (!localData.salutation) {\r\n            history.push('/receiver');\r\n        }\r\n        if (!localData.addressStreet) {\r\n            history.push('/address');\r\n        }\r\n\r\n        Object.keys(localData).map(key => setValue(key, localData[key]));\r\n        setValue('customer_type', getCustomerType(localData.customer_type));\r\n        setValue('order_reason', getOrderReason(localData.order_reason));\r\n        setValue('parcel_shipments', localData.parcel_shipments ? SELECTED : NOT_SELECTED);\r\n        setValue('dhl_infopost', localData.dhl_infopost ? SELECTED : NOT_SELECTED);\r\n\r\n        if (localData.customer_type === CUSTOMER_TYPE_BUSINESS) {\r\n          setValue('businessName', `${localData.salutation} ${localData.nameFirst} ${localData.nameLast}`);\r\n        }\r\n\r\n        if (localData.address_additional_pobox) {\r\n          oldTwoShowMode = true;\r\n        }\r\n        if (localData.new_address_additional_pobox) {\r\n          newTwoShowMode = true;\r\n        }\r\n        // if (localData.additionalRecipients) {\r\n        //   localData.additionalRecipients.map((name, key) => {\r\n        //     setValue(`Weitere ${parseInt(key) + 1}. Person`, `${name.first} ${name.last}`);\r\n        //   });\r\n        // }\r\n    } else {\r\n      history.push('/');\r\n  }\r\n\r\n\r\n    const onNext = (data) => {\r\n      console.log(data);\r\n      localData.additional_recipients.forEach(name => delete data[`additionalRecipients_${name.idx}`])\r\n      localData.additional_recipients = localData.additional_recipients.map(name => `${name.first} ${name.last}`);\r\n      localStorage.setItem(ORDER_INFO, JSON.stringify(localData));\r\n      history.push('/payment');\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}>\r\n                <Grid item xs={12}>\r\n                    <Breadcrumbs style={{ marginBottom: 24 }}/>\r\n                    <OrderSteps step={3} />\r\n                </Grid>\r\n            </Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                  <FormProvider {...methods}>\r\n                  <form className={classes.form} onSubmit={handleSubmit(onNext)}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant='h5' gutterBottom>\r\n                            {'Zusammenfassung'}\r\n                        </Typography> <br />\r\n                        <Typography variant='h6' gutterBottom>\r\n                            {'Bitte kontrollieren Sie nochmal Ihre Eingaben'}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1' gutterBottom>\r\n                            Sind Ihre {wrapWithBold(\"Daten korrekt\")}? Klicken Sie gerne auf {wrapWithBold(\"Zusammenfassung und Abschluss\")} und fahren Sie gerne fort.\r\n                        </Typography>\r\n                        <Typography variant='subtitle1' gutterBottom>\r\n                            Sind Ihre {wrapWithBold(\"Daten nicht korrekt\")}? Klicken Sie bitte auf {wrapWithBold(\"zurück\")} und ändern {wrapWithBold(\"korrigieren\")} diese.\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={12} style={{marginTop: 8, marginLeft: 8, marginRight: 8}}>\r\n                          <Box display='flex' justifyContent={\"space-between\"} pt={1}>\r\n                              <Button \r\n                                  variant='contained'\r\n                                  component={RouterLink}\r\n                                  to='/address'\r\n                                  style={{ marginLeft: 8 }}>\r\n                                  zurück\r\n                              </Button>\r\n                              <Button \r\n                                  type='submit'\r\n                                  variant='contained'\r\n                                  style={{\r\n                                      marginLeft: 32,\r\n                                      color: COLOR_WHITE,\r\n                                      backgroundColor: COLOR_PRIMARY_DARK\r\n                                  }}>\r\n                                  Zusammenfassung und Abschluss\r\n                              </Button>\r\n                          </Box>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                          <Divider style={{marginTop: 8, marginBottom: 8}} />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <Typography variant='h5' gutterBottom>\r\n                                {'Ihre alte Anschrift:'}\r\n                            </Typography> <br />\r\n                            <Divider style={{ marginTop:-8, marginBottom: 16 }} />\r\n                            { oldTwoShowMode ? (\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='address_additional_pobox'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Altes Postfach (Nr.)'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='address_additional_zipcode'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Alte PLZ'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='address_additional_city'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Alte Stadt'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                {localData && localData.address_supplement && <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='address_supplement'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Alter Adresszusatz'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid> }\r\n                                \r\n                              </Grid>\r\n                            ) : (\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='addressStreet'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Straßenname'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='addressHouse'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Hausnummer'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='addressZipCode'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'PLZ'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='addressCity'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Stadt'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                {localData && localData.address_supplement && <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='address_supplement'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Alter Adresszusatz'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid> }\r\n                                \r\n                              </Grid>\r\n                            ) }\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <Typography variant='h5' gutterBottom>\r\n                                {'Ihre neue Anschrift:'}\r\n                            </Typography> <br />\r\n                            <Divider style={{ marginTop:-8, marginBottom: 16 }} />\r\n                            { newTwoShowMode ? (\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='new_address_additional_pobox'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neues Postfach (Nr.)'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='newAddressZipCode'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neue PLZ'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='newAddressCity'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neue Stadt'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                {localData && localData.new_address_supplement && <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='new_address_supplement'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neuer Adresszusatz'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid> }\r\n                                \r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='new_country'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neues Land'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                              </Grid>\r\n                            ) : (\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='newAddressStreet'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Straßenname'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='newAddressHouse'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Hausnummer'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='newAddressZipCode'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neue PLZ'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='newAddressCity'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neue Stadt'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                {localData && localData.new_address_supplement && <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='new_address_supplement'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neuer Adresszusatz'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                 }\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='new_country'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Neues Land'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                              </Grid>\r\n                            ) }\r\n                            \r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n                          {/** OLD ADDR PLUS */}\r\n                          <Grid item xs={12} sm={6}>\r\n                            { oldTwoShowMode && <>\r\n                              <Typography variant='h5' gutterBottom>\r\n                                {'Alternative Adresse'}\r\n                              </Typography> <br />\r\n                              <Divider style={{ marginTop:-8, marginBottom: 16 }} />\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='addressStreet'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Straßenname'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='addressHouse'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Hausnummer'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='addressZipCode'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'PLZ'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='addressCity'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Stadt'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </> }\r\n                          </Grid>\r\n                          {/** NEW ADDR PLUS */}\r\n                          <Grid item xs={12} sm={6}>\r\n                            { newTwoShowMode && <>\r\n                              <Typography variant='h5' gutterBottom>\r\n                                {'Alternative Adresse'}\r\n                              </Typography> <br />\r\n                              <Divider style={{ marginTop:-8, marginBottom: 16 }} />\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='newAddressStreet'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Straßenname'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='newAddressHouse'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Hausnummer'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='new_address_additional_zipcode'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'PLZ'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='new_address_additional_city'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Stadt'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </> }\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <Typography variant='h5' gutterBottom>\r\n                                {'Weitere Daten:'}\r\n                            </Typography> <br />\r\n                            <Divider style={{ marginTop:-8, marginBottom: 16 }} />\r\n                            <Grid container spacing={1}>\r\n                              <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='customer_type'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'Nachsende-Typ'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid>\r\n                                {localData && localData.other_service && localData.other_service.length > 0 &&\r\n                                    <Grid item xs={12}>\r\n                                        <Controller\r\n                                          name='other_service'\r\n                                          control={control}\r\n                                          render={({ field: { value }, fieldState: { error } }) => (\r\n                                          <FormControl fullWidth error={!!error}>\r\n                                              <InputLabel shrink>\r\n                                                  {'Weitere Versanddienstleister'}\r\n                                              </InputLabel>\r\n                                              <div style={{marginTop: \"16px\"}}></div>\r\n                                              {value.map((name, idx) => (\r\n                                                  <Typography variant='h6' key={idx}>{name}</Typography>\r\n                                              ))}\r\n                                          </FormControl>\r\n                                          )}\r\n                                          />\r\n                                      </Grid>\r\n                                }\r\n\r\n                              <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='later_start_time'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'Nachsende-Start'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid>\r\n                              {localData && localData.deliver_again_date && <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='deliver_again_date'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'Wieder zustellen ab'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid> }\r\n                              <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='order_reason'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'Nachsendegrund'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='email'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'E-Mail'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='phone_number'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'Telefon'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='parcel_shipments'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'Päckchen und Pakete'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='dhl_infopost'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'DHL INFOPOST'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                            {/** PROFILE AREA **/}\r\n                          {localData && localData.customer_type === CUSTOMER_TYPE_PRIVATE ? (\r\n                            <Grid item xs={12} sm={6}>\r\n                              <Typography variant='h5' gutterBottom>\r\n                                  {'Personen:'}\r\n                              </Typography> <br />\r\n                              <Divider style={{ marginTop:-8, marginBottom: 16 }} />\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='nameFirst'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Vorname'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='nameLast'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Nachname'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                                {localData && localData.representative_full_name && \r\n                                  <Grid item xs={12}>\r\n                                    <Controller\r\n                                      name='representative_full_name'\r\n                                      control={control}\r\n                                      render={({ field: { value }, fieldState: { error } }) => (\r\n                                      <FormControl fullWidth error={!!error}>\r\n                                          <InputLabel shrink>\r\n                                              {'Bevollmächtigter'}\r\n                                          </InputLabel>\r\n                                          <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                      </FormControl>\r\n                                      )}\r\n                                      />\r\n                                  </Grid>\r\n                                }\r\n                                {localData && localData.additional_recipients && \r\n                                  localData.additional_recipients.map((name, key) => (\r\n                                    <Grid item xs={12} key={name.idx}>\r\n                                      <Controller\r\n                                        name={`additionalRecipients_${name.idx}`}\r\n                                        control={control}\r\n                                        render={({ field: { value }, fieldState: { error } }) => (\r\n                                        <FormControl fullWidth error={!!error}>\r\n                                            <InputLabel shrink>\r\n                                                {`Weitere ${parseInt(key) + 1}. Person`}\r\n                                            </InputLabel>\r\n                                            <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{`${name.first} ${name.last}`}</Typography>\r\n                                        </FormControl>\r\n                                        )}\r\n                                        />\r\n                                    </Grid>\r\n                                  ))\r\n                                }\r\n                              </Grid>\r\n                            </Grid>\r\n                          ) : (\r\n                            <Grid item xs={12} sm={6}>\r\n                            <Typography variant='h5' gutterBottom>\r\n                                {'Firma / Betrieb:'}\r\n                            </Typography> <br />\r\n                            <Divider style={{ marginTop:-8, marginBottom: 16 }} />\r\n                            <Grid container spacing={1}>\r\n                              <Grid item xs={12}>\r\n                                <Controller\r\n                                  name='company_name'\r\n                                  control={control}\r\n                                  render={({ field: { value }, fieldState: { error } }) => (\r\n                                  <FormControl fullWidth error={!!error}>\r\n                                      <InputLabel shrink>\r\n                                          {'Firma'}\r\n                                      </InputLabel>\r\n                                      <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                  </FormControl>\r\n                                  )}\r\n                                  />\r\n                              </Grid>\r\n                              {localData && localData.representative_full_name && \r\n                                <Grid item xs={12}>\r\n                                  <Controller\r\n                                    name='representative_full_name'\r\n                                    control={control}\r\n                                    render={({ field: { value }, fieldState: { error } }) => (\r\n                                    <FormControl fullWidth error={!!error}>\r\n                                        <InputLabel shrink>\r\n                                            {'Bevollmächtigter'}\r\n                                        </InputLabel>\r\n                                        <Typography variant='h6' gutterBottom  style={{marginTop: '16px'}}>{value}</Typography>\r\n                                    </FormControl>\r\n                                    )}\r\n                                    />\r\n                                </Grid>\r\n                              }\r\n                            </Grid>\r\n                          </Grid>\r\n                          )}\r\n                          \r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                          <Divider style={{marginTop: 8, marginBottom: 8}} />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} style={{marginTop: 8, marginLeft: 8, marginRight: 8}}>\r\n                          <Box display='flex' justifyContent={\"space-between\"} pt={1}>\r\n                              <Button \r\n                                  variant='contained'\r\n                                  component={RouterLink}\r\n                                  to='/address'\r\n                                  style={{ marginLeft: 8 }}>\r\n                                  zurück\r\n                              </Button>\r\n                              <Button \r\n                                  type='submit'\r\n                                  variant='contained'\r\n                                  style={{\r\n                                      marginLeft: 32,\r\n                                      color: COLOR_WHITE,\r\n                                      backgroundColor: COLOR_PRIMARY_DARK\r\n                                  }}>\r\n                                  Zusammenfassung und Abschluss\r\n                              </Button>\r\n                          </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                  </FormProvider>\r\n                </Paper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SummaryScreen;","export const CREATE_PAYMENT_REQUEST = 'CREATE_PAYMENT_REQUEST';\r\nexport const CREATE_PAYMENT_SUCCESS = 'CREATE_PAYMENT_SUCCESS';\r\nexport const CREATE_PAYMENT_FAIL = 'CREATE_PAYMENT_FAIL';\r\nexport const CREATE_PAYMENT_RESET = 'CREATE_PAYMENT_RESET';\r\n\r\nexport const ORDER_PLACE_REQUEST = 'ORDER_PLACE_REQUEST';\r\nexport const ORDER_PLACE_SUCCESS = 'ORDER_PLACE_SUCCESS';\r\nexport const ORDER_PLACE_FAIL = 'ORDER_PLACE_FAIL';\r\nexport const ORDER_PLACE_RESET = 'ORDER_PLACE_RESET';\r\n\r\nexport const INVOICE_REQUEST = 'INVOICE_REQUEST';\r\nexport const INVOICE_SUCCESS = 'INVOICE_SUCCESS';\r\nexport const INVOICE_FAIL = 'INVOICE_FAIL';\r\nexport const INVOICE_RESET = 'INVOICE_RESET';\r\n\r\nexport const INIT_PAYPAL_REQUEST = 'INIT_PAYPAL_REQUEST';\r\nexport const INIT_PAYPAL_SUCCESS = 'INIT_PAYPAL_SUCCESS';\r\nexport const INIT_PAYPAL_FAIL = 'INIT_PAYPAL_FAIL';\r\nexport const INIT_PAYPAL_RESET = 'INIT_PAYPAL_RESET';","import axios from 'axios';\r\nimport {\r\n    CREATE_PAYMENT_FAIL,\r\n    CREATE_PAYMENT_REQUEST,\r\n    CREATE_PAYMENT_SUCCESS, INIT_PAYPAL_REQUEST, INIT_PAYPAL_RESET, INIT_PAYPAL_SUCCESS, INVOICE_FAIL,\r\n    INVOICE_REQUEST,\r\n    INVOICE_SUCCESS,\r\n    ORDER_PLACE_FAIL,\r\n    ORDER_PLACE_REQUEST,\r\n    ORDER_PLACE_SUCCESS,\r\n} from '../constants/order.constant';\r\n// import { getCookie } from '../utils';\r\nimport { getStripe } from '../stripe';\r\n\r\n// const API_URL = 'http://localhost:8000/';\r\n// const csrftoken = getCookie('csrftoken');\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\n\r\nexport const createPayment = ( paymentData ) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_PAYMENT_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            //   \"X-CSRFToken\": csrftoken\r\n            },\r\n        };\r\n        const { data } = await axios.post(\r\n            `/api/create-checkout-session`,\r\n            paymentData,\r\n            config\r\n        );\r\n\r\n        // CREATE PAYMENT SESSION SUCCESS\r\n        dispatch({\r\n            type: CREATE_PAYMENT_SUCCESS,\r\n            payload: data\r\n        });\r\n        const stripe = await getStripe();\r\n        stripe.redirectToCheckout({\r\n            sessionId: data.id\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_PAYMENT_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const initPaypal = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: INIT_PAYPAL_REQUEST });\r\n\r\n        const { data } = await axios.get(\r\n            `/api/paypal`,\r\n        );\r\n\r\n        dispatch({\r\n            type: INIT_PAYPAL_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INIT_PAYPAL_RESET,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const createOrder = ( orderData ) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ORDER_PLACE_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n        };\r\n        const { data } = await axios.post(\r\n            `/api/create-order`,\r\n            orderData,\r\n            config\r\n        );\r\n\r\n        // CREATE PAYMENT SESSION SUCCESS\r\n        dispatch({\r\n            type: ORDER_PLACE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PLACE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const finalizeInvoice = ( {service, invoiceId} ) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: INVOICE_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n        };\r\n        const { data } = await axios.post(\r\n            `/api/finalize-invoice`,\r\n            { service, invoiceId },\r\n            config\r\n        );\r\n\r\n        // CREATE PAYMENT SESSION SUCCESS\r\n        dispatch({\r\n            type: INVOICE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INVOICE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/payap1.23de6718.png\";","export default __webpack_public_path__ + \"static/media/stripe.e062c3d1.png\";","export default __webpack_public_path__ + \"static/media/visa.1fae40ca.svg\";","export default __webpack_public_path__ + \"static/media/sofort.da0c6685.svg\";","export default __webpack_public_path__ + \"static/media/klarna.d6a30293.svg\";","export default __webpack_public_path__ + \"static/media/giropay.e281b6cf.svg\";","import React, {useState} from 'react';\r\nimport {Button, Tab, Tabs} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PaypalImage from '../assets/images/payap1.png';\r\nimport StripeImage from '../assets/images/stripe.png';\r\nimport VisaSvg from '../assets/images/visa.svg';\r\nimport SofortSvg from '../assets/images/sofort.svg';\r\nimport KlarnaSvg from '../assets/images/klarna.svg';\r\nimport GiropaySvg from '../assets/images/giropay.svg';\r\nimport {COLOR_GRAY_1, COLOR_PRIMARY_DARK} from \"../constants/color.constant\";\r\nimport {PAYMENT_SERVICE_PAYPAL, PAYMENT_SERVICE_STRIPE} from \"../constants/key.constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        marginTop: 8,\r\n        marginBottom: 8,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    logoButton: {\r\n        width: '30%',\r\n        height: '48px',\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: '50%'\r\n        },\r\n    },\r\n    logoPaypal: {\r\n        width: '100%',\r\n        height: '100%',\r\n        maxWidth: '80%',\r\n        maxHeight: '48px'\r\n    },\r\n    logoVisa: {\r\n        width: '100%',\r\n        height: '100%',\r\n        maxWidth: '60%',\r\n        maxHeight: '48px'\r\n    },\r\n    logoSofort: {\r\n        width: '100%',\r\n        height: '100%',\r\n        maxWidth: '60%',\r\n        maxHeight: '48px'\r\n    },\r\n    logoKlarna: {\r\n        width: '100%',\r\n        height: '100%',\r\n        maxWidth: '60%',\r\n        maxHeight: '48px'\r\n    },\r\n    logoGiropay: {\r\n        width: '100%',\r\n        height: '100%',\r\n        maxWidth: '60%',\r\n        maxHeight: '48px'\r\n    },\r\n    logoStripe: {\r\n        width: '100%',\r\n        height: '100%',\r\n        maxWidth: '60%',\r\n        maxHeight: '48px'\r\n    }\r\n}));\r\n\r\nconst PaymentGateway = ({ paymentService, setPaymentService, setFocused }) => {\r\n    const classes = useStyles();\r\n    const [method, setMethod] = useState(0);\r\n    const handleChange = (e, newMethod) => {\r\n        console.log(newMethod);\r\n        setMethod(newMethod);\r\n        if (newMethod == 0) {\r\n            setPaymentService(PAYMENT_SERVICE_PAYPAL);\r\n        } else {\r\n            setPaymentService(PAYMENT_SERVICE_STRIPE);\r\n        }\r\n        setFocused('paymentService');\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <Button className={method === PAYMENT_SERVICE_PAYPAL ? classes.logoButtonSelected : classes.logoButton} onClick={e => handleChange(e, PAYMENT_SERVICE_PAYPAL)}>\r\n                <img src={PaypalImage} className={classes.logoPaypal} alt='paypal' />\r\n            </Button>\r\n            <Button className={method === PAYMENT_SERVICE_STRIPE ? classes.logoButtonSelected : classes.logoButton} onClick={e => handleChange(e, PAYMENT_SERVICE_STRIPE)}>\r\n                <img src={StripeImage} className={classes.logoStripe} alt='stripe' />\r\n            </Button>\r\n            <Button className={method === PAYMENT_SERVICE_STRIPE ? classes.logoButtonSelected : classes.logoButton} onClick={e => handleChange(e, PAYMENT_SERVICE_STRIPE)}>\r\n                <img src={StripeImage} className={classes.logoStripe} alt='stripe' />\r\n            </Button>\r\n            <Button className={method === PAYMENT_SERVICE_STRIPE ? classes.logoButtonSelected : classes.logoButton} onClick={e => handleChange(e, PAYMENT_SERVICE_STRIPE)}>\r\n                <img src={StripeImage} className={classes.logoStripe} alt='stripe' />\r\n            </Button>\r\n            <Button className={method === PAYMENT_SERVICE_STRIPE ? classes.logoButtonSelected : classes.logoButton} onClick={e => handleChange(e, PAYMENT_SERVICE_STRIPE)}>\r\n                <img src={StripeImage} className={classes.logoStripe} alt='stripe' />\r\n            </Button>\r\n            <Button className={method === PAYMENT_SERVICE_STRIPE ? classes.logoButtonSelected : classes.logoButton} onClick={e => handleChange(e, PAYMENT_SERVICE_STRIPE)}>\r\n                <img src={StripeImage} className={classes.logoStripe} alt='stripe' />\r\n            </Button> */}\r\n            <Tabs\r\n                value={method}\r\n                onChange={handleChange}\r\n                variant='scrollable'\r\n                scrollButtons='on'\r\n                aria-label='scrollable payment options'\r\n                TabIndicatorProps={{\r\n                    style: {\r\n                        background: COLOR_PRIMARY_DARK\r\n                    }\r\n                }}>\r\n                <Tab id='Paypal'\r\n                    icon={<img src={PaypalImage} className={classes.logoPaypal} alt='paypal' />} \r\n                    aria-controls='Paypal' className={classes.logoButton} />\r\n                <Tab id='Sofort'\r\n                    icon={<img src={SofortSvg} className={classes.logoSofort} alt='sofort' />} \r\n                    aria-controls='Sofort' className={classes.logoButton} />\r\n                <Tab id='Giropay'\r\n                    icon={<img src={GiropaySvg} className={classes.logoGiropay} alt='giropay' />} \r\n                    aria-controls='Giropay' className={classes.logoButton} />\r\n                <Tab id='Klarna'\r\n                    icon={<img src={KlarnaSvg} className={classes.logoKlarna} alt='klarna' />} \r\n                    aria-controls='Klarna' className={classes.logoButton} />\r\n                <Tab id='Visa'\r\n                    icon={<img src={VisaSvg} className={classes.logoVisa} alt='visa' />} \r\n                    aria-controls='Visa' className={classes.logoButton} />\r\n            </Tabs>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaymentGateway;","import React, { useState } from 'react';\r\nimport { Box, Breadcrumbs, Button, Checkbox, Container, Divider, FormControl, FormControlLabel, FormLabel, Grid, InputLabel, List, ListItem, ListItemIcon, ListItemText, makeStyles, Paper, Radio, RadioGroup, Typography, withStyles } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport Meta from '../components/Meta';\r\nimport OrderSteps from '../components/OrderSteps';\r\nimport {\r\n    CUSTOMER_TYPE_BUSINESS,\r\n    ORDER_INFO,\r\n    PAYMENT_12_MONTHS,\r\n    PAYMENT_6_MONTHS,\r\n    PAYMENT_SERVICE_PAYPAL,\r\n    PRICE_BUSINESS_12_MONTHS,\r\n    PRICE_BUSINESS_6_MONTHS,\r\n    PRICE_PRIVATE_12_MONTHS,\r\n    PRICE_PRIVATE_6_MONTHS\r\n} from '../constants/key.constant';\r\nimport { COLOR_PRIMARY_DARK, COLOR_WHITE, COLOR_PRIMARY } from '../constants/color.constant';\r\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\r\nimport HelpPanel from '../components/HelpPanel';\r\nimport {formatter, getCustomerType} from '../utils';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport { useDispatch } from 'react-redux';\r\n// import {createOrder, createPayment} from '../actions/order.action';\r\n// import Loader from '../components/Loader';\r\nimport currency from 'currency.js';\r\nimport {createOrder, initPaypal} from \"../actions/order.action\";\r\nimport PaymentGateway from \"../components/PaymentGateway\";\r\n// import KlarnaPanel from '../components/KlarnaPanel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    form: {\r\n      '& > *': {\r\n        marginBottom: 16,\r\n      },\r\n    },\r\n    boxContainer: {\r\n      position: 'relative',\r\n      ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n      padding: '24px 10%',\r\n      height: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: '24px',\r\n      },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n}));\r\n\r\nconst PrimaryCheckBox = withStyles({\r\n  root: {\r\n    color: COLOR_PRIMARY,\r\n    '&$checked': {\r\n      color: COLOR_PRIMARY_DARK,\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst PrimaryRadio = withStyles({\r\n  root: {\r\n    color: COLOR_PRIMARY_DARK,\r\n    '&$checked': {\r\n      color: COLOR_PRIMARY_DARK,\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n    const methods = useForm({ shouldUnregister: true });\r\n    const dispatch = useDispatch();\r\n    const { handleSubmit, control } = methods;\r\n    const [ paymentMethod, setPaymentMethod ] = useState(PAYMENT_6_MONTHS);\r\n    const [ paymentService, setPaymentService ] = useState(PAYMENT_SERVICE_PAYPAL);\r\n    const [focused, setFocused] = useState('');\r\n    // const { loading, error, isSuccess, paymentSession } = useSelector((state) => state.payment);\r\n\r\n    let localData = localStorage.getItem(ORDER_INFO);\r\n    let price6Month = PRICE_PRIVATE_6_MONTHS;\r\n    let price12Month = PRICE_PRIVATE_12_MONTHS;\r\n\r\n    if (!localData) {\r\n      history.push('/');\r\n    } else {\r\n      localData = JSON.parse(localData);\r\n      if (localData.customer_type === CUSTOMER_TYPE_BUSINESS) {\r\n        price6Month = PRICE_BUSINESS_6_MONTHS;\r\n        price12Month = PRICE_BUSINESS_12_MONTHS;\r\n      }\r\n    }\r\n    price6Month += localData.other_price;\r\n    price12Month += localData.other_price;\r\n\r\n    // const [ paymentPrice, setPaymentPrice ] = useState(price6Month);\r\n    // const [ paymentPricePerMonth, setPaymentPricePerMonth ] = useState(currency(price6Month).divide(6));\r\n\r\n    // useEffect(() => {\r\n    //     console.log('------------------');\r\n    //     console.log(loading, error, isSuccess, paymentSession);\r\n    //     if (isSuccess && paymentSession) {\r\n    //\r\n    //     }\r\n    // }, [loading, error, isSuccess, paymentSession]);\r\n\r\n    const onNext = (data) => {\r\n        localData = { ...localData, ...data};\r\n        localData.payment_service = paymentService;\r\n        localData.product_name = `${localData.customer_type} Zahlung - ${paymentMethod} Monat`;\r\n        localData.product_price = paymentMethod === PAYMENT_6_MONTHS ? price6Month: price12Month;\r\n        localData.base_price = localData.product_price - localData.other_price;\r\n        localData.base_price = Math.round(localData.base_price * 100) / 100;\r\n        // localData.product_price = localData.product_price.toFixed(2);\r\n        localData.delivery_status = 'offen';\r\n        console.log(localData);\r\n        localStorage.setItem(ORDER_INFO, JSON.stringify(localData));\r\n        // localData.product = getProductDetails(localData, paymentMethod);\r\n        if (paymentService === PAYMENT_SERVICE_PAYPAL) {\r\n            dispatch(initPaypal());\r\n            history.push('/checkout-paypal')\r\n        } else {\r\n            dispatch(createOrder(JSON.stringify(localData)));\r\n            history.push('/checkout');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}>\r\n                <Grid item xs={12}>\r\n                    <Breadcrumbs style={{ marginBottom: 24 }}/>\r\n                    <OrderSteps step={4} />\r\n                </Grid>\r\n            </Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={8}>\r\n                      <Grid item sm={12} md={7}>\r\n                        <FormProvider {...methods}>\r\n                        <form className={classes.form} onSubmit={handleSubmit(onNext)}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                              <Typography variant='h5' gutterBottom>\r\n                                  {'Ihre Auftragszusammenfassung'}\r\n                              </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                              <Controller\r\n                                  name='paymentMethod'\r\n                                  control={control}\r\n                                  defaultValue={paymentMethod}\r\n                                  render={({ field, fieldState: { error } }) => (\r\n                                      <FormControl fullWidth error={!!error}>\r\n                                          <InputLabel shrink htmlFor='form-paymentMethod'>\r\n                                              {'Nachsendedauer'}\r\n                                          </InputLabel>\r\n                                          <Grid container spacing={2} style={{ marginLeft: '16px', marginTop: '32px', marginBottom: '16px' }}>\r\n                                              {/* <Grid item xs={12} sm={6}> */}\r\n                                                  <RadioGroup {...field} aria-label='paymentMethod' id='form-paymentMethod' style={{ flexDirection:\"row\", width: '100%'  }} onFocus={() => {setFocused('paymentType')}} onChange={(e, v) => { setPaymentMethod(e.target.value); field.onChange(e, v);}}>\r\n                                                    <Grid item xs={12} sm={6}>\r\n                                                      <FormControlLabel value={PAYMENT_6_MONTHS} control={<PrimaryRadio />} label={<label><span>6 Monate</span><br /><span>Preis: {formatter.format(currency(price6Month).divide(6))} pro Monat</span></label>} />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} sm={6}>\r\n                                                      <FormControlLabel value={PAYMENT_12_MONTHS} control={<PrimaryRadio />} label={<label><span>12 Monate</span><br /><span>Preis: {formatter.format(currency(price12Month).divide(12))} pro Monat</span></label>} />\r\n                                                    </Grid>\r\n                                                  </RadioGroup>\r\n                                              {/* </Grid> */}\r\n                                          </Grid>\r\n                                      </FormControl>\r\n                                  )}/>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider style={{marginTop: 2, marginBottom: 4}} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                              <Typography variant='h6' gutterBottom>\r\n                                  {'Auftragsdaten'}\r\n                              </Typography>\r\n                              <Grid container spacing={1} style={{marginLeft: 16}}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant='subtitle1' >\r\n                                        {'Beantragung Nachsendeauftrag+'}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant='subtitle1' >\r\n                                        {`Art: ${localData ? getCustomerType(localData.customer_type) : ''} `}&nbsp;&nbsp;<span style={{color: COLOR_PRIMARY_DARK}}>{`${formatter.format(paymentMethod === PAYMENT_6_MONTHS ? price6Month: price12Month)}`}</span>\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <List dense>\r\n                                    <ListItem>\r\n                                        <ListItemIcon>\r\n                                            <ArrowRightIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`Laufzeit: ${paymentMethod === PAYMENT_6_MONTHS ? '6' : '12'} Monate`}\r\n                                        />\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon>\r\n                                            <ArrowRightIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`Nachsendung Deutsche Post AG`}\r\n                                        />\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon>\r\n                                            <ArrowRightIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`Nachsendung Deutsche Post DHL (nur bei Paketoption)`}\r\n                                        />\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon>\r\n                                            <ArrowRightIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`Adressprüfung und Profi-Check`}\r\n                                        />\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon>\r\n                                            <ArrowRightIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`Weitere Versanddienstleister (nur bei Auswahl)`}\r\n                                        />\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon>\r\n                                            <ArrowRightIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={`kostenloser E-Mail- und Telefon-Support für gesamte Laufzeit`}\r\n                                        />\r\n                                    </ListItem>\r\n                                </List>\r\n                                </Grid>\r\n                                {/* <Grid item xs={12}>\r\n                                    <Typography variant='subtitle1' >\r\n                                        {'Gesamtsumme: 89,00 EUR (inkl. 14,21 EUR MwSt. 19%).'}\r\n                                    </Typography>\r\n                                </Grid> */}\r\n                              </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Divider style={{marginTop: 2, marginBottom: 4}} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Typography variant='h6'>Zahlungsart auswählen</Typography>\r\n                                <PaymentGateway\r\n                                    paymentService={paymentService}\r\n                                    setPaymentService={setPaymentService}\r\n                                    setFocused={setFocused}\r\n                                    />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Divider style={{marginTop: 2, marginBottom: 4}} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                              <Controller\r\n                                  name='executionInfo'\r\n                                  control={control}\r\n                                  defaultValue={''}\r\n                                  render={({ field, fieldState: { error } }) => (\r\n                                      <FormControl fullWidth error={!!error} onFocus={() => setFocused('executionInfo')}>\r\n                                          <FormLabel>Ausführungs-Info:</FormLabel>\r\n                                          <FormControlLabel\r\n                                              {...field}\r\n                                              control={<PrimaryCheckBox />}\r\n                                              style={{marginTop: 8}}\r\n                                              label={'Ja, bitte beginnen Sie mit der Bearbeitung des Auftrag vor Ablauf der 14-tägigen Widerrufsfrist.'}\r\n                                          />\r\n                                      </FormControl>\r\n                                  )}\r\n                                rules={{\r\n                                    required: 'Dieses Feld wird benötigt.',\r\n                                }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                              <Controller\r\n                                  name='acceptTerms'\r\n                                  control={control}\r\n                                  defaultValue={''}\r\n                                  render={({ field, fieldState: { error } }) => (\r\n                                      <FormControl fullWidth error={!!error} onFocus={() => setFocused('agreeTerms')}>\r\n                                          <FormLabel>AGB / Widerruf:</FormLabel>\r\n                                          <FormControlLabel\r\n                                              {...field}\r\n                                              control={<PrimaryCheckBox />}\r\n                                              style={{marginTop: 8}}\r\n                                              label={'Ich stimme den AGB und dem Widerrufsrecht von Nachsenden.info zu.'}\r\n                                          />\r\n                                      </FormControl>\r\n                                  )}\r\n                                rules={{\r\n                                    required: 'Dieses Feld wird benötigt.',\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12} style={{marginTop: 16, marginLeft: 8, marginRight: 8}}>\r\n                                <Box display='flex' justifyContent={\"space-between\"} pt={1}>\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        component={RouterLink}\r\n                                        to='/summary'\r\n                                        style={{ marginLeft: 8 }}>\r\n                                        zurück\r\n                                    </Button>\r\n                                    <Button\r\n                                        type='submit'\r\n                                        variant='contained'\r\n                                        style={{\r\n                                            color: COLOR_WHITE,\r\n                                            backgroundColor: COLOR_PRIMARY_DARK\r\n                                        }}>\r\n                                        Bestellung aufgeben\r\n                                    </Button>\r\n                                </Box>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </form>\r\n                        </FormProvider>\r\n                      </Grid>\r\n                      <Grid item sm={12} md={5} style={{borderLeft: '1px solid lightgray', marginTop: 32, marginBottom: 32}}>\r\n                          <Box sx={{\r\n                              display: 'flex',\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                              width: '100%',\r\n                              height: '100%',\r\n                              flexDirection: 'column'\r\n                          }}>\r\n                                  <HelpPanel field={focused} />\r\n                          </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;","import React, {useEffect} from 'react';\r\nimport {Box, Button, Container, Grid, makeStyles, Paper, Typography} from '@material-ui/core';\r\n\r\nimport Meta from '../components/Meta';\r\nimport {deleteAllCookies, shootFireworks} from \"../utils\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {finalizeInvoice} from \"../actions/order.action\";\r\nimport {COLOR_PRIMARY_DARK, COLOR_WHITE} from \"../constants/color.constant\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    boxContainer: {\r\n        position: 'relative',\r\n        ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n        padding: '24px 10%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          padding: '24px 5%',\r\n        },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n}));\r\n\r\nconst PaymentSuccessScreen = ({ location, history }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const paths = location.pathname.split('/');\r\n    const invoiceId = paths.pop();\r\n    const service = paths.pop();\r\n    const { loading, error, isSuccess, invoiceData } = useSelector((state) => state.invoice);\r\n\r\n    console.log(paths, service, invoiceId)\r\n    deleteAllCookies();\r\n\r\n    useEffect(() => {\r\n        if (invoiceId && invoiceId.length > 0) {\r\n            shootFireworks();\r\n            dispatch(finalizeInvoice({\r\n                service,\r\n                invoiceId\r\n            }))\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }, [invoiceId, dispatch, history]);\r\n\r\n    useEffect(() => {\r\n        if (isSuccess && invoiceData) {\r\n            console.log(invoiceData);\r\n        }\r\n    }, [isSuccess, invoiceData]);\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center'>\r\n                                <Typography variant='h4'>Vielen Dank für Ihre Bestellung</Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center'>\r\n                                <Typography variant='h6'>Ihre Bestellung wurde erfolgreich aufgegeben.</Typography>\r\n                            </Box>\r\n                            <Box display='flex' justifyContent='center'>\r\n                                <Typography variant='h6'>Bitte überprüfen Sie Ihren Posteingang für die Quittung.</Typography>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='flex-end'>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    style={{\r\n                                        color: COLOR_WHITE,\r\n                                        backgroundColor: COLOR_PRIMARY_DARK\r\n                                    }}\r\n                                    onClick={() => { localStorage.clear(); history.push('/') }}>Weiter zur Bestellung</Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PaymentSuccessScreen;","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { COLOR_PRIMARY_DARK } from '../constants/color.constant';\r\n\r\nconst Loader = ({ my }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        marginTop: my,\r\n        marginBottom: my,\r\n      }}\r\n    >\r\n      <CircularProgress style={{color:COLOR_PRIMARY_DARK}} />\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.defaultProps = {\r\n  my: 40,\r\n};\r\n\r\nexport default Loader;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport {useSelector} from \"react-redux\";\r\nimport logo from '../../assets/images/stripe.png';\r\nimport {Box} from \"@material-ui/core\";\r\n\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [myInvoideId, setMyInvoiceId] = useState('');\r\n  const { loading, error, isSuccess, orderData } = useSelector((state) => state.order);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess && orderData) {\r\n      setMyInvoiceId(orderData.invoiceId);\r\n    }\r\n  },[\r\n      orderData, isSuccess\r\n  ]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const { error } = await stripe.processOrder({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n        return_url: \"http://139.59.135.130/payment/stripe/\"+myInvoideId,\r\n        // return_url: \"http://localhost:8000/payment/stripe/\"+myInvoideId,\r\n      },\r\n    });\r\n\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occurred.\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <Box width={'100%'} display='flex' justifyContent='center' pb={2}>\r\n        <img src={logo} style={{ width: '30%' }} />\r\n      </Box>\r\n      <PaymentElement id=\"payment-element\" />\r\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\" className='stripe-pay-button'>\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Jetzt bezahlen\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n  );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Box, Container, Grid, makeStyles, Paper, Typography} from '@material-ui/core';\r\nimport {Elements} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useSelector } from 'react-redux';\r\nimport Meta from '../components/Meta';\r\nimport '../assets/scss/stripe/_stripe_app.scss';\r\nimport {ORDER_INFO, STRIPE_TEST_PUBLIC_KEY} from \"../constants/key.constant\";\r\nimport Loader from '../components/Loader';\r\nimport CheckoutForm from \"../components/Stripe/CheckoutForm\";\r\nimport {COLOR_PRIMARY_DARK} from \"../constants/color.constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    boxContainer: {\r\n        position: 'relative',\r\n        ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n        padding: '24px 10%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          padding: '24px 5%',\r\n        },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n}));\r\n\r\nconst stripePromise = loadStripe(STRIPE_TEST_PUBLIC_KEY, {\r\n  betas: [\"process_order_beta_1\"],\r\n  apiVersion: \"2020-08-27; orders_beta=v3\"\r\n});\r\n\r\nconst CheckoutScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n    const [clientSecret, setClientSecret] = useState(\"\");\r\n    const { loading, error, isSuccess, orderData } = useSelector((state) => state.order);\r\n\r\n    let localData = localStorage.getItem(ORDER_INFO);\r\n    if (!localData) {\r\n        history.push('/');\r\n    } else {\r\n        localData = JSON.parse(localData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isSuccess && orderData) {\r\n            setClientSecret(orderData.clientSecret);\r\n        }\r\n    }, [orderData, isSuccess, setClientSecret]);\r\n\r\n    const appearance = {\r\n        theme: 'stripe',\r\n        variables: {\r\n            colorPrimary: COLOR_PRIMARY_DARK\r\n        }\r\n    };\r\n\r\n    const options = {\r\n        clientSecret,\r\n        appearance,\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n            <Box className={classes.boxContainer}>\r\n                { loading &&\r\n                    <>\r\n                        <Loader />\r\n                        <Typography variant='h6'>Laden von Zahlungsinformationen...</Typography>\r\n                    </>\r\n                }\r\n                { clientSecret &&\r\n                    <Paper elevation={0} className={classes.content} square>\r\n                        <Grid container spacing={8}>\r\n                            <Grid item xs={12}>\r\n                                    <Elements options={options} stripe={stripePromise}>\r\n                                        <CheckoutForm />\r\n                                    </Elements>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                }\r\n            </Box>\r\n        </Container>\r\n        // <Container maxWidth='xl'>\r\n        //     <Meta title='Nachsenden.info - Kasse 📯' />\r\n        //     <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n        //     <Box className={classes.boxContainer}>\r\n        //         <Paper elevation={0} className={classes.content} square>\r\n        //             <Grid container spacing={8}>\r\n        //                 <Grid item xs={12}>\r\n        //                     <Box id='checkout-container'>\r\n        //                       {/*{clientSecret && (*/}\r\n        //                       {/*  <Elements options={options} stripe={stripePromise}>*/}\r\n        //                       {/*    <CheckoutForm />*/}\r\n        //                       {/*  </Elements>*/}\r\n        //                       {/*)}*/}\r\n        //                     </Box>\r\n        //                 </Grid>\r\n        //             </Grid>\r\n        //         </Paper>\r\n        //     </Box>\r\n        // </Container>\r\n    );\r\n};\r\n\r\nexport default CheckoutScreen;","import React from 'react';\r\nimport {Box, Container, Grid, Link, makeStyles, Paper, Typography} from '@material-ui/core';\r\n\r\nimport Meta from '../components/Meta';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    boxContainer: {\r\n        position: 'relative',\r\n        ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n        padding: '24px 10%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          padding: '24px 5%',\r\n        },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n    bold: {\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\nconst ImprintScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h3' gutterBottom> Impressum </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Anbieter </Typography>\r\n                            {/*<Typography variant='body1' className={classes.bold} gutterBottom> Münchehofe Consulting GmbH </Typography>*/}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> DDV Deutscher Dienstleistungsverlag UG (haftungsbeschränkt) </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Postadresse: </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Mühlenstr. 8a </Typography>\r\n                            <Typography variant='body1' gutterBottom> 14167 Berlin </Typography>\r\n                            <Typography variant='body1' gutterBottom> eMail: Kontakt@URL.de </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Vertreten durch den Geschäftsführer: </Typography>\r\n                            <Typography variant='body1' gutterBottom> Sascha Plaster </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Sitz und Registergericht </Typography>\r\n                            <Typography variant='body1' gutterBottom> Handelsregister beim Amtsgericht Berlin Charlottenburg, Nr. HRB 238213 B </Typography>\r\n                            <Typography variant='body1' gutterBottom> Steueridentifikationsnummer: 30/256/51429 </Typography>\r\n                            <Typography variant='body1' gutterBottom> Umsatzsteuer-Identifikationsnummer: DE351854602 </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Hinweis gemäß § 36 Verbraucherstreitbeilegungsgesetz (VSBG) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die DDV Deutscher Dienstleistungsverlag UG (haftungsbeschränkt) wird nicht an einem Streitbeilegungsverfahren vor einer Verbraucherschlichtungsstelle im Sinne des VSBG teilnehmen und ist hierzu auch nicht verpflichtet. </Typography>\r\n                            <Typography variant='body1' gutterBottom> DDV Deutscher Dienstleistungsverlag UG (haftungsbeschränkt) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Mühlenstr. 8 </Typography>\r\n                            <Typography variant='body1' gutterBottom> 14167 Berlin </Typography>\r\n                            <Typography variant='body1' gutterBottom> Tel.: +49 30 91455897 (Kein Kundensupport - Kontaktieren Sie uns ausschließlich per Email) </Typography>\r\n                            <Typography variant='body1' gutterBottom> eMail: kontakt@url.de </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Rechtsschutz </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> ARAG Aktiv-Rechtsschutz - Premium inkl. Internet-Schutz ARAG web@ktiv - Premium </Typography>\r\n                            <Typography variant='body1' gutterBottom> Versicherungssummen  300.000 € </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Disclaimer </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Haftung für Inhalte </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Als Diensteanbieter sind wir gemäß § 7 Abs.1 TMG für eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen oder nach Umständen zu forschen, die auf eine rechtswidrige Tätigkeit hinweisen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unberührt. Eine diesbezügliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung möglich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Haftung für Links </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Unser Angebot enthält Links zu externen Websites Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb können wir für diese fremden Inhalte auch keine Gewähr übernehmen. Für die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf mögliche Rechtsverstöße überprüft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Urheberrecht </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der Verwertung außerhalb der Grenzen des Urheberrechtes bedürfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur für den privaten, nicht kommerziellen Gebrauch gestattet. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Firmensitz: </Typography>\r\n                            <Typography variant='body1' gutterBottom> DDV Deutscher Dienstleistungsverlag UG (haftungsbeschränkt)  </Typography>\r\n                            <Typography variant='body1' gutterBottom> Fellbacher Str. 23 </Typography>\r\n                            <Typography variant='body1' gutterBottom> 13467 Berlin </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ImprintScreen;","import React from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    Grid,\r\n    makeStyles,\r\n    Paper,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport Meta from '../components/Meta';\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    boxContainer: {\r\n        position: 'relative',\r\n        ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n        padding: '24px 10%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          padding: '24px 5%',\r\n        },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n    bold: {\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\nconst DataPrivacyScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' gutterBottom> Datenschutzerklärung </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Wir freuen uns sehr über Ihr Interesse an unserem Unternehmen. Datenschutz hat einen besonders hohen Stellenwert für die Geschäftsleitung der www.URL.de . Sofern eine betroffene Person besondere Services unseres Unternehmens über unsere Internetseite in Anspruch nehmen möchte, könnte jedoch eine Verarbeitung personenbezogener Daten erforderlich werden. Ist die Verarbeitung personenbezogener Daten erforderlich und besteht für eine solche Verarbeitung keine gesetzliche Grundlage, holen wir generell eine Einwilligung der betroffenen Person ein. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die Verarbeitung personenbezogener Daten, beispielsweise des Namens, der Anschrift, E-Mail-Adresse oder Telefonnummer einer betroffenen Person, erfolgt stets im Einklang mit der Datenschutz-Grundverordnung und in Übereinstimmung mit den für diewww.URL.de geltenden landesspezifischen Datenschutzbestimmungen. Mittels dieser Datenschutzerklärung möchte unser Unternehmen die Öffentlichkeit über Art, Umfang und Zweck der von uns erhobenen, genutzten und verarbeiteten personenbezogenen Daten informieren. Ferner werden betroffene Personen mittels dieser Datenschutzerklärung über die ihnen zustehenden Rechte aufgeklärt. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die www.URL.de hat als für die Verarbeitung Verantwortlicher zahlreiche technische und organisatorische Maßnahmen umgesetzt, um einen möglichst lückenlosen Schutz der über diese Internetseite verarbeiteten personenbezogenen Daten sicherzustellen. Dennoch können Internetbasierte Datenübertragungen grundsätzlich Sicherheitslücken aufweisen, sodass ein absoluter Schutz nicht gewährleistet werden kann. Aus diesem Grund steht es jeder betroffenen Person frei, personenbezogene Daten auch auf alternativen Wegen, beispielsweise telefonisch, an uns zu übermitteln. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 1. Begriffsbestimmungen </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die Datenschutzerklärung der www.URL.de beruht auf den Begrifflichkeiten, die durch den Europäischen Richtlinien- und Verordnungsgeber beim Erlass der Datenschutz-Grundverordnung (DS-GVO) verwendet wurden. Unsere Datenschutzerklärung soll sowohl für die Öffentlichkeit als auch für unsere Kunden und Geschäftspartner einfach lesbar und verständlich sein. Um dies zu gewährleisten, möchten wir vorab die verwendeten Begrifflichkeiten erläutern. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Wir verwenden in dieser Datenschutzerklärung unter anderem die folgenden Begriffe: </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> a)    personenbezogene Daten </Typography>\r\n                            <Typography variant='body1' gutterBottom> Personenbezogene Daten sind alle Informationen, die sich auf eine identifizierte oder identifizierbare natürliche Person (im Folgenden „betroffene Person“) beziehen. Als identifizierbar wird eine natürliche Person angesehen, die direkt oder indirekt, insbesondere mittels Zuordnung zu einer Kennung wie einem Namen, zu einer Kennnummer, zu Standortdaten, zu einer Online-Kennung oder zu einem oder mehreren besonderen Merkmalen, die Ausdruck der physischen, physiologischen, genetischen, psychischen, wirtschaftlichen, kulturellen oder sozialen Identität dieser natürlichen Person sind, identifiziert werden kann. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> b)    betroffene Person </Typography>\r\n                            <Typography variant='body1' gutterBottom> Betroffene Person ist jede identifizierte oder identifizierbare natürliche Person, deren personenbezogene Daten von dem für die Verarbeitung Verantwortlichen verarbeitet werden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> c)    Verarbeitung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Verarbeitung ist jeder mit oder ohne Hilfe automatisierter Verfahren ausgeführte Vorgang oder jede solche Vorgangsreihe im Zusammenhang mit personenbezogenen Daten wie das Erheben, das Erfassen, die Organisation, das Ordnen, die Speicherung, die Anpassung oder Veränderung, das Auslesen, das Abfragen, die Verwendung, die Offenlegung durch Übermittlung, Verbreitung oder eine andere Form der Bereitstellung, den Abgleich oder die Verknüpfung, die Einschränkung, das Löschen oder die Vernichtung. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> d)    Einschränkung der Verarbeitung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Einschränkung der Verarbeitung ist die Markierung gespeicherter personenbezogener Daten mit dem Ziel, ihre künftige Verarbeitung einzuschränken. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> e)    Profiling </Typography>\r\n                            <Typography variant='body1' gutterBottom> Profiling ist jede Art der automatisierten Verarbeitung personenbezogener Daten, die darin besteht, dass diese personenbezogenen Daten verwendet werden, um bestimmte persönliche Aspekte, die sich auf eine natürliche Person beziehen, zu bewerten, insbesondere, um Aspekte bezüglich Arbeitsleistung, wirtschaftlicher Lage, Gesundheit, persönlicher Vorlieben, Interessen, Zuverlässigkeit, Verhalten, Aufenthaltsort oder Ortswechsel dieser natürlichen Person zu analysieren oder vorherzusagen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> f)     Pseudonymisierung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Pseudonymisierung ist die Verarbeitung personenbezogener Daten in einer Weise, auf welche die personenbezogenen Daten ohne Hinzuziehung zusätzlicher Informationen nicht mehr einer spezifischen betroffenen Person zugeordnet werden können, sofern diese zusätzlichen Informationen gesondert aufbewahrt werden und technischen und organisatorischen Maßnahmen unterliegen, die gewährleisten, dass die personenbezogenen Daten nicht einer identifizierten oder identifizierbaren natürlichen Person zugewiesen werden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> g)    Verantwortlicher oder für die Verarbeitung Verantwortlicher </Typography>\r\n                            <Typography variant='body1' gutterBottom> Verantwortlicher oder für die Verarbeitung Verantwortlicher ist die natürliche oder juristische Person, Behörde, Einrichtung oder andere Stelle, die allein oder gemeinsam mit anderen über die Zwecke und Mittel der Verarbeitung von personenbezogenen Daten entscheidet. Sind die Zwecke und Mittel dieser Verarbeitung durch das Unionsrecht oder das Recht der Mitgliedstaaten vorgegeben, so kann der Verantwortliche beziehungsweise können die bestimmten Kriterien seiner Benennung nach dem Unionsrecht oder dem Recht der Mitgliedstaaten vorgesehen werden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> h)    Auftragsverarbeiter </Typography>\r\n                            <Typography variant='body1' gutterBottom> Auftragsverarbeiter ist eine natürliche oder juristische Person, Behörde, Einrichtung oder andere Stelle, die personenbezogene Daten im Auftrag des Verantwortlichen verarbeitet. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> i)      Empfänger </Typography>\r\n                            <Typography variant='body1' gutterBottom> Empfänger ist eine natürliche oder juristische Person, Behörde, Einrichtung oder andere Stelle, der personenbezogene Daten offengelegt werden, unabhängig davon, ob es sich bei ihr um einen Dritten handelt oder nicht. Behörden, die im Rahmen eines bestimmten Untersuchungsauftrags nach dem Unionsrecht oder dem Recht der Mitgliedstaaten möglicherweise personenbezogene Daten erhalten, gelten jedoch nicht als Empfänger. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> j)      Dritter </Typography>\r\n                            <Typography variant='body1' gutterBottom> Dritter ist eine natürliche oder juristische Person, Behörde, Einrichtung oder andere Stelle außer der betroffenen Person, dem Verantwortlichen, dem Auftragsverarbeiter und den Personen, die unter der unmittelbaren Verantwortung des Verantwortlichen oder des Auftragsverarbeiters befugt sind, die personenbezogenen Daten zu verarbeiten. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> k)    Einwilligung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Einwilligung ist jede von der betroffenen Person freiwillig für den bestimmten Fall in informierter Weise und unmissverständlich abgegebene Willensbekundung in Form einer Erklärung oder einer sonstigen eindeutigen bestätigenden Handlung, mit der die betroffene Person zu verstehen gibt, dass sie mit der Verarbeitung der sie betreffenden personenbezogenen Daten einverstanden ist. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 2. Name und Anschrift des für die Verarbeitung Verantwortlichen </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Verantwortlicher im Sinne der Datenschutz-Grundverordnung, sonstiger in den Mitgliedstaaten der Europäischen Union geltenden Datenschutzgesetze und anderer Bestimmungen mit datenschutzrechtlichem Charakter ist die: </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> DDV Deutscher Dienstleistungsverlag UG (haftungsbeschränkt) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Fellbacher Str. 23 </Typography>\r\n                            <Typography variant='body1' gutterBottom> 13467 Berlin </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Geschäftsführer: </Typography>\r\n                            <Typography variant='body1' gutterBottom> Sascha Plaster </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> E-Mail: Kontkt@URL.de </Typography>\r\n                            <Typography variant='body1' gutterBottom> Website: www.url.de </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Datenschutzbeauftragter </Typography>\r\n                            <Typography variant='body1' gutterBottom> datenschutz@URL.de </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 3. Cookies </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Die Internetseiten der www.URL.de verwenden Cookies. Cookies sind Textdateien, welche über einen Internetbrowser auf einem Computersystem abgelegt und gespeichert werden. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Zahlreiche Internetseiten und Server verwenden Cookies. Viele Cookies enthalten eine sogenannte Cookie-ID. Eine Cookie-ID ist eine eindeutige Kennung des Cookies. Sie besteht aus einer Zeichenfolge, durch welche Internetseiten und Server dem konkreten Internetbrowser zugeordnet werden können, in dem das Cookie gespeichert wurde. Dies ermöglicht es den besuchten Internetseiten und Servern, den individuellen Browser der betroffenen Person von anderen Internetbrowsern, die andere Cookies enthalten, zu unterscheiden. Ein bestimmter Internetbrowser kann über die eindeutige Cookie-ID wiedererkannt und identifiziert werden. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Durch den Einsatz von Cookies kann die www.URL.de den Nutzern dieser Internetseite nutzerfreundlichere Services bereitstellen, die ohne die Cookie-Setzung nicht möglich wären. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Mittels eines Cookies können die Informationen und Angebote auf unserer Internetseite im Sinne des Benutzers optimiert werden. Cookies ermöglichen uns, wie bereits erwähnt, die Benutzer unserer Internetseite wiederzuerkennen. Zweck dieser Wiedererkennung ist es, den Nutzern die Verwendung unserer Internetseite zu erleichtern. Der Benutzer einer Internetseite, die Cookies verwendet, muss beispielsweise nicht bei jedem Besuch der Internetseite erneut seine Zugangsdaten eingeben, weil dies von der Internetseite und dem auf dem Computersystem des Benutzers abgelegten Cookie übernommen wird. Ein weiteres Beispiel ist das Cookie eines Warenkorbes im Online-Shop. Der Online-Shop merkt sich die Artikel, die ein Kunde in den virtuellen Warenkorb gelegt hat, über ein Cookie. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die betroffene Person kann die Setzung von Cookies durch unsere Internetseite jederzeit mittels einer entsprechenden Einstellung des genutzten Internetbrowsers verhindern und damit der Setzung von Cookies dauerhaft widersprechen. Ferner können bereits gesetzte Cookies jederzeit über einen Internetbrowser oder andere Softwareprogramme gelöscht werden. Dies ist in allen gängigen Internetbrowsern möglich. Deaktiviert die betroffene Person die Setzung von Cookies in dem genutzten Internetbrowser, sind unter Umständen nicht alle Funktionen unserer Internetseite vollumfänglich nutzbar. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 4. Erfassung von allgemeinen Daten und Informationen </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Die Internetseite der www.URL.de erfasst mit jedem Aufruf der Internetseite durch eine betroffene Person oder ein automatisiertes System eine Reihe von allgemeinen Daten und Informationen. Diese allgemeinen Daten und Informationen werden in den Logfiles des Servers gespeichert. Erfasst werden können die (1) verwendeten Browsertypen und Versionen, (2) das vom zugreifenden System verwendete Betriebssystem, (3) die Internetseite, von welcher ein zugreifendes System auf unsere Internetseite gelangt (sogenannte Referrer), (4) die Unterwebseiten, welche über ein zugreifendes System auf unserer Internetseite angesteuert werden, (5) das Datum und die Uhrzeit eines Zugriffs auf die Internetseite, (6) eine Internet-Protokoll-Adresse (IP-Adresse), (7) der Internet-Service-Provider des zugreifenden Systems und (8) sonstige ähnliche Daten und Informationen, die der Gefahrenabwehr im Falle von Angriffen auf unsere informationstechnologischen Systeme dienen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Bei der Nutzung dieser allgemeinen Daten und Informationen zieht die www.URL.de keine Rückschlüsse auf die betroffene Person. Diese Informationen werden vielmehr benötigt, um (1) die Inhalte unserer Internetseite korrekt auszuliefern, (2) die Inhalte unserer Internetseite sowie die Werbung für diese zu optimieren, (3) die dauerhafte Funktionsfähigkeit unserer informationstechnologischen Systeme und der Technik unserer Internetseite zu gewährleisten sowie (4) um Strafverfolgungsbehörden im Falle eines Cyberangriffes die zur Strafverfolgung notwendigen Informationen bereitzustellen. Diese anonym erhobenen Daten und Informationen werden durch die www.URL.de daher einerseits statistisch und ferner mit dem Ziel ausgewertet, den Datenschutz und die Datensicherheit in unserem Unternehmen zu erhöhen, um letztlich ein optimales Schutzniveau für die von uns verarbeiteten personenbezogenen Daten sicherzustellen. Die anonymen Daten der Server-Logfiles werden getrennt von allen durch eine betroffene Person angegebenen personenbezogenen Daten gespeichert. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 5. Kontaktmöglichkeit über die Internetseite </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Die Internetseite der www.URL.de enthält aufgrund von gesetzlichen Vorschriften Angaben, die eine schnelle elektronische Kontaktaufnahme zu unserem Unternehmen sowie eine unmittelbare Kommunikation mit uns ermöglichen, was ebenfalls eine allgemeine Adresse der sogenannten elektronischen Post (E-Mail-Adresse) umfasst. Sofern eine betroffene Person per E-Mail oder über ein Kontaktformular den Kontakt mit dem für die Verarbeitung Verantwortlichen aufnimmt, werden die von der betroffenen Person übermittelten personenbezogenen Daten automatisch gespeichert. Solche auf freiwilliger Basis von einer betroffenen Person an den für die Verarbeitung Verantwortlichen übermittelten personenbezogenen Daten werden für Zwecke der Bearbeitung oder der Kontaktaufnahme zur betroffenen Person gespeichert. Es erfolgt keine Weitergabe dieser personenbezogenen Daten an Dritte. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 6. Routinemäßige Löschung und Sperrung von personenbezogenen Daten </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Der für die Verarbeitung Verantwortliche verarbeitet und speichert personenbezogene Daten der betroffenen Person nur für den Zeitraum, der zur Erreichung des Speicherungszwecks erforderlich ist oder sofern dies durch den Europäischen Richtlinien- und Verordnungsgeber oder einen anderen Gesetzgeber in Gesetzen oder Vorschriften, welchen der für die Verarbeitung Verantwortliche unterliegt, vorgesehen wurde. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Entfällt der Speicherungszweck oder läuft eine vom Europäischen Richtlinien- und Verordnungsgeber oder einem anderen zuständigen Gesetzgeber vorgeschriebene Speicherfrist ab, werden die personenbezogenen Daten routinemäßig und entsprechend den gesetzlichen Vorschriften gesperrt oder gelöscht. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 7. Rechte der betroffenen Person </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> a)    Recht auf Bestätigung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber eingeräumte Recht, von dem für die Verarbeitung Verantwortlichen eine Bestätigung darüber zu verlangen, ob sie betreffende personenbezogene Daten verarbeitet werden. Möchte eine betroffene Person dieses Bestätigungsrecht in Anspruch nehmen, kann sie sich hierzu jederzeit an einen Mitarbeiter des für die Verarbeitung Verantwortlichen wenden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> b)    Recht auf Auskunft </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede von der Verarbeitung personenbezogener Daten betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber gewährte Recht, jederzeit von dem für die Verarbeitung Verantwortlichen unentgeltliche Auskunft über die zu seiner Person gespeicherten personenbezogenen Daten und eine Kopie dieser Auskunft zu erhalten. Ferner hat der Europäische Richtlinien- und Verordnungsgeber der betroffenen Person Auskunft über folgende Informationen zugestanden: </Typography>\r\n                            <Typography variant='body1' gutterBottom> odie Verarbeitungszwecke </Typography>\r\n                            <Typography variant='body1' gutterBottom> odie Kategorien personenbezogener Daten, die verarbeitet werden </Typography>\r\n                            <Typography variant='body1' gutterBottom> odie Empfänger oder Kategorien von Empfängern, gegenüber denen die personenbezogenen Daten offengelegt worden sind oder noch offengelegt werden, insbesondere bei Empfängern in Drittländern oder bei internationalen Organisationen </Typography>\r\n                            <Typography variant='body1' gutterBottom> ofalls möglich die geplante Dauer, für die die personenbezogenen Daten gespeichert werden, oder, falls dies nicht möglich ist, die Kriterien für die Festlegung dieser Dauer </Typography>\r\n                            <Typography variant='body1' gutterBottom> odas Bestehen eines Rechts auf Berichtigung oder Löschung der sie betreffenden personenbezogenen Daten oder auf Einschränkung der Verarbeitung durch den Verantwortlichen oder eines Widerspruchsrechts gegen diese Verarbeitung </Typography>\r\n                            <Typography variant='body1' gutterBottom> odas Bestehen eines Beschwerderechts bei einer Aufsichtsbehörde </Typography>\r\n                            <Typography variant='body1' gutterBottom> owenn die personenbezogenen Daten nicht bei der betroffenen Person erhoben werden: Alle verfügbaren Informationen über die Herkunft der Daten </Typography>\r\n                            <Typography variant='body1' gutterBottom> odas Bestehen einer automatisierten Entscheidungsfindung einschließlich Profiling gemäß Artikel 22 Abs.1 und 4 DS-GVO und — zumindest in diesen Fällen — aussagekräftige Informationen über die involvierte Logik sowie die Tragweite und die angestrebten Auswirkungen einer derartigen Verarbeitung für die betroffene Person </Typography>\r\n                            <Typography variant='body1' gutterBottom> Ferner steht der betroffenen Person ein Auskunftsrecht darüber zu, ob personenbezogene Daten an ein Drittland oder an eine internationale Organisation übermittelt wurden. Sofern dies der Fall ist, so steht der betroffenen Person im Übrigen das Recht zu, Auskunft über die geeigneten Garantien im Zusammenhang mit der Übermittlung zu erhalten.Möchte eine betroffene Person dieses Auskunftsrecht in Anspruch nehmen, kann sie sich hierzu jederzeit an einen Mitarbeiter des für die Verarbeitung Verantwortlichen wenden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> c)    Recht auf Berichtigung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede von der Verarbeitung personenbezogener Daten betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber gewährte Recht, die unverzügliche Berichtigung sie betreffender unrichtiger personenbezogener Daten zu verlangen. Ferner steht der betroffenen Person das Recht zu, unter Berücksichtigung der Zwecke der Verarbeitung, die Vervollständigung unvollständiger personenbezogener Daten — auch mittels einer ergänzenden Erklärung — zu verlangen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Möchte eine betroffene Person dieses Berichtigungsrecht in Anspruch nehmen, kann sie sich hierzu jederzeit an einen Mitarbeiter des für die Verarbeitung Verantwortlichen wenden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> d)    Recht auf Löschung (Recht auf Vergessen werden) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede von der Verarbeitung personenbezogener Daten betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber gewährte Recht, von dem Verantwortlichen zu verlangen, dass die sie betreffenden personenbezogenen Daten unverzüglich gelöscht werden, sofern einer der folgenden Gründe zutrifft und soweit die Verarbeitung nicht erforderlich ist: </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie personenbezogenen Daten wurden für solche Zwecke erhoben oder auf sonstige Weise verarbeitet, für welche sie nicht mehr notwendig sind. </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie betroffene Person widerruft ihre Einwilligung, auf die sich die Verarbeitung gemäß Art. 6 Abs. 1 Buchstabe a DS-GVO oder Art. 9 Abs. 2 Buchstabe a DS-GVO stützte, und es fehlt an einer anderweitigen Rechtsgrundlage für die Verarbeitung. </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie betroffene Person legt gemäß Art. 21 Abs. 1 DS-GVO Widerspruch gegen die Verarbeitung ein, und es liegen keine vorrangigen berechtigten Gründe für die Verarbeitung vor, oder die betroffene Person legt gemäß Art. 21 Abs. 2 DS-GVO Widerspruch gegen die Verarbeitung ein. </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie personenbezogenen Daten wurden unrechtmäßig verarbeitet. </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie Löschung der personenbezogenen Daten ist zur Erfüllung einer rechtlichen Verpflichtung nach dem Unionsrecht oder dem Recht der Mitgliedstaaten erforderlich, dem der Verantwortliche unterliegt. </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie personenbezogenen Daten wurden in Bezug auf angebotene Dienste der Informationsgesellschaft gemäß Art. 8 Abs. 1 DS-GVO erhoben. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Sofern einer der oben genannten Gründe zutrifft und eine betroffene Person die Löschung von personenbezogenen Daten, die bei der www.URL.de gespeichert sind, veranlassen möchte, kann sie sich hierzu jederzeit an einen Mitarbeiter des für die Verarbeitung Verantwortlichen wenden. Der Mitarbeiter der www.URL.de wird veranlassen, dass dem Löschverlangen unverzüglich nachgekommen wird. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Wurden die personenbezogenen Daten von der www.URL.de öffentlich gemacht und ist unser Unternehmen als Verantwortlicher gemäß Art. 17 Abs. 1 DS-GVO zur Löschung der personenbezogenen Daten verpflichtet, so trifft die www.URL.de unter Berücksichtigung der verfügbaren Technologie und der Implementierungskosten angemessene Maßnahmen, auch technischer Art, um andere für die Datenverarbeitung Verantwortliche, welche die veröffentlichten personenbezogenen Daten verarbeiten, darüber in Kenntnis zu setzen, dass die betroffene Person von diesen anderen für die Datenverarbeitung Verantwortlichen die Löschung sämtlicher Links zu diesen personenbezogenen Daten oder von Kopien oder Replikationen dieser personenbezogenen Daten verlangt hat, soweit die Verarbeitung nicht erforderlich ist. Der Mitarbeiter der www.URL.de wird im Einzelfall das Notwendige veranlassen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> e)    Recht auf Einschränkung der Verarbeitung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede von der Verarbeitung personenbezogener Daten betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber gewährte Recht, von dem Verantwortlichen die Einschränkung der Verarbeitung zu verlangen, wenn eine der folgenden Voraussetzungen gegeben ist: </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie Richtigkeit der personenbezogenen Daten wird von der betroffenen Person bestritten, und zwar für eine Dauer, die es dem Verantwortlichen ermöglicht, die Richtigkeit der personenbezogenen Daten zu überprüfen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie Verarbeitung ist unrechtmäßig, die betroffene Person lehnt die Löschung der personenbezogenen Daten ab und verlangt stattdessen die Einschränkung der Nutzung der personenbezogenen Daten. </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDer Verantwortliche benötigt die personenbezogenen Daten für die Zwecke der Verarbeitung nicht länger, die betroffene Person benötigt sie jedoch zur Geltendmachung, Ausübung oder Verteidigung von Rechtsansprüchen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> oDie betroffene Person hat Widerspruch gegen die Verarbeitung gem. Art. 21 Abs. 1 DS-GVO eingelegt und es steht noch nicht fest, ob die berechtigten Gründe des Verantwortlichen gegenüber denen der betroffenen Person überwiegen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Sofern eine der oben genannten Voraussetzungen gegeben ist und eine betroffene Person die Einschränkung von personenbezogenen Daten, die bei der www.URL.de gespeichert sind, verlangen möchte, kann sie sich hierzu jederzeit an einen Mitarbeiter des für die Verarbeitung Verantwortlichen wenden. Der Mitarbeiter der www.URL.de wird die Einschränkung der Verarbeitung veranlassen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> f)     Recht auf Datenübertragbarkeit </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede von der Verarbeitung personenbezogener Daten betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber gewährte Recht, die sie betreffenden personenbezogenen Daten, welche durch die betroffene Person einem Verantwortlichen bereitgestellt wurden, in einem strukturierten, gängigen und maschinenlesbaren Format zu erhalten. Sie hat außerdem das Recht, diese Daten einem anderen Verantwortlichen ohne Behinderung durch den Verantwortlichen, dem die personenbezogenen Daten bereitgestellt wurden, zu übermitteln, sofern die Verarbeitung auf der Einwilligung gemäß Art. 6 Abs. 1 Buchstabe a DS-GVO oder Art. 9 Abs. 2 Buchstabe a DS-GVO oder auf einem Vertrag gemäß Art. 6 Abs. 1 Buchstabe b DS-GVO beruht und die Verarbeitung mithilfe automatisierter Verfahren erfolgt, sofern die Verarbeitung nicht für die Wahrnehmung einer Aufgabe erforderlich ist, die im öffentlichen Interesse liegt oder in Ausübung öffentlicher Gewalt erfolgt, welche dem Verantwortlichen übertragen wurde. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Ferner hat die betroffene Person bei der Ausübung ihres Rechts auf Datenübertragbarkeit gemäß Art. 20 Abs. 1 DS-GVO das Recht, zu erwirken, dass die personenbezogenen Daten direkt von einem Verantwortlichen an einen anderen Verantwortlichen übermittelt werden, soweit dies technisch machbar ist und sofern hiervon nicht die Rechte und Freiheiten anderer Personen beeinträchtigt werden. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Zur Geltendmachung des Rechts auf Datenübertragbarkeit kann sich die betroffene Person jederzeit an einen Mitarbeiter der www.URL.de wenden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> g)    Recht auf Widerspruch </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede von der Verarbeitung personenbezogener Daten betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber gewährte Recht, aus Gründen, die sich aus ihrer besonderen Situation ergeben, jederzeit gegen die Verarbeitung sie betreffender personenbezogener Daten, die aufgrund von Art. 6 Abs. 1 Buchstaben e oder f DS-GVO erfolgt, Widerspruch einzulegen. Dies gilt auch für ein auf diese Bestimmungen gestütztes Profiling. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die www.URL.de verarbeitet die personenbezogenen Daten im Falle des Widerspruchs nicht mehr, es sei denn, wir können zwingende schutzwürdige Gründe für die Verarbeitung nachweisen, die den Interessen, Rechten und Freiheiten der betroffenen Person überwiegen, oder die Verarbeitung dient der Geltendmachung, Ausübung oder Verteidigung von Rechtsansprüchen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Verarbeitet die www.URL.de personenbezogene Daten, um Direktwerbung zu betreiben, so hat die betroffene Person das Recht, jederzeit Widerspruch gegen die Verarbeitung der personenbezogenen Daten zum Zwecke derartiger Werbung einzulegen. Dies gilt auch für das Profiling, soweit es mit solcher Direktwerbung in Verbindung steht. Widerspricht die betroffene Person gegenüber der www.URL.de der Verarbeitung für Zwecke der Direktwerbung, so wird die www.URL.de die personenbezogenen Daten nicht mehr für diese Zwecke verarbeiten. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Zudem hat die betroffene Person das Recht, aus Gründen, die sich aus ihrer besonderen Situation ergeben, gegen die sie betreffende Verarbeitung personenbezogener Daten, die bei der www.URL.de zu wissenschaftlichen oder historischen Forschungszwecken oder zu statistischen Zwecken gemäß Art. 89 Abs. 1 DS-GVO erfolgen, Widerspruch einzulegen, es sei denn, eine solche Verarbeitung ist zur Erfüllung einer im öffentlichen Interesse liegenden Aufgabe erforderlich. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Zur Ausübung des Rechts auf Widerspruch kann sich die betroffene Person direkt jeden Mitarbeiter der www.URL.de oder einen anderen Mitarbeiter wenden. Der betroffenen Person steht es ferner frei, im Zusammenhang mit der Nutzung von Diensten der Informationsgesellschaft, ungeachtet der Richtlinie 2002/58/EG, ihr Widerspruchsrecht mittels automatisierter Verfahren auszuüben, bei denen technische Spezifikationen verwendet werden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> h)    Automatisierte Entscheidungen im Einzelfall einschließlich Profiling </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede von der Verarbeitung personenbezogener Daten betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber gewährte Recht, nicht einer ausschließlich auf einer automatisierten Verarbeitung — einschließlich Profiling — beruhenden Entscheidung unterworfen zu werden, die ihr gegenüber rechtliche Wirkung entfaltet oder sie in ähnlicher Weise erheblich beeinträchtigt, sofern die Entscheidung (1) nicht für den Abschluss oder die Erfüllung eines Vertrags zwischen der betroffenen Person und dem Verantwortlichen erforderlich ist, oder (2) aufgrund von Rechtsvorschriften der Union oder der Mitgliedstaaten, denen der Verantwortliche unterliegt, zulässig ist und diese Rechtsvorschriften angemessene Maßnahmen zur Wahrung der Rechte und Freiheiten sowie der berechtigten Interessen der betroffenen Person enthalten oder (3) mit ausdrücklicher Einwilligung der betroffenen Person erfolgt. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Ist die Entscheidung (1) für den Abschluss oder die Erfüllung eines Vertrags zwischen der betroffenen Person und dem Verantwortlichen erforderlich oder (2) erfolgt sie mit ausdrücklicher Einwilligung der betroffenen Person, trifft die www.URL.de angemessene Maßnahmen, um die Rechte und Freiheiten sowie die berechtigten Interessen der betroffenen Person zu wahren, wozu mindestens das Recht auf Erwirkung des Eingreifens einer Person seitens des Verantwortlichen, auf Darlegung des eigenen Standpunkts und auf Anfechtung der Entscheidung gehört. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Möchte die betroffene Person Rechte mit Bezug auf automatisierte Entscheidungen geltend machen, kann sie sich hierzu jederzeit an einen Mitarbeiter des für die Verarbeitung Verantwortlichen wenden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h6' gutterBottom> i)      Recht auf Widerruf einer datenschutzrechtlichen Einwilligung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Jede von der Verarbeitung personenbezogener Daten betroffene Person hat das vom Europäischen Richtlinien- und Verordnungsgeber gewährte Recht, eine Einwilligung zur Verarbeitung personenbezogener Daten jederzeit zu widerrufen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Möchte die betroffene Person ihr Recht auf Widerruf einer Einwilligung geltend machen, kann sie sich hierzu jederzeit an einen Mitarbeiter des für die Verarbeitung Verantwortlichen wenden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 8. Datenschutzbestimmungen zu Einsatz und Verwendung von Google Analytics (mit Anonymisierungsfunktion) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Der für die Verarbeitung Verantwortliche hat auf dieser Internetseite die Komponente Google Analytics (mit Anonymisierungsfunktion) integriert. Google Analytics ist ein Web-Analyse-Dienst. Web-Analyse ist die Erhebung, Sammlung und Auswertung von Daten über das Verhalten von Besuchern von Internetseiten. Ein Web-Analyse-Dienst erfasst unter anderem Daten darüber, von welcher Internetseite eine betroffene Person auf eine Internetseite gekommen ist (sogenannte Referrer), auf welche Unterseiten der Internetseite zugegriffen oder wie oft und für welche Verweildauer eine Unterseite betrachtet wurde. Eine Web-Analyse wird überwiegend zur Optimierung einer Internetseite und zur Kosten-Nutzen-Analyse von Internetwerbung eingesetzt. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Betreibergesellschaft der Google-Analytics-Komponente ist die Google Inc., 1600 Amphitheatre Pkwy, Mountain View, CA 94043-1351, USA. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Der für die Verarbeitung Verantwortliche verwendet für die Web-Analyse über Google Analytics den Zusatz \"_gat._anonymizeIp\". Mittels dieses Zusatzes wird die IP-Adresse des Internetanschlusses der betroffenen Person von Google gekürzt und anonymisiert, wenn der Zugriff auf unsere Internetseiten aus einem Mitgliedstaat der Europäischen Union oder aus einem anderen Vertragsstaat des Abkommens über den Europäischen Wirtschaftsraum erfolgt. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Der Zweck der Google-Analytics-Komponente ist die Analyse der Besucherströme auf unserer Internetseite. Google nutzt die gewonnenen Daten und Informationen unter anderem dazu, die Nutzung unserer Internetseite auszuwerten, um für uns Online-Reports, welche die Aktivitäten auf unseren Internetseiten aufzeigen, zusammenzustellen, und um weitere mit der Nutzung unserer Internetseite in Verbindung stehende Dienstleistungen zu erbringen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Google Analytics setzt ein Cookie auf dem informationstechnologischen System der betroffenen Person. Was Cookies sind, wurde oben bereits erläutert. Mit Setzung des Cookies wird Google eine Analyse der Benutzung unserer Internetseite ermöglicht. Durch jeden Aufruf einer der Einzelseiten dieser Internetseite, die durch den für die Verarbeitung Verantwortlichen betrieben wird und auf welcher eine Google-Analytics-Komponente integriert wurde, wird der Internetbrowser auf dem informationstechnologischen System der betroffenen Person automatisch durch die jeweilige Google-Analytics-Komponente veranlasst, Daten zum Zwecke der Online-Analyse an Google zu übermitteln. Im Rahmen dieses technischen Verfahrens erhält Google Kenntnis über personenbezogene Daten, wie der IP-Adresse der betroffenen Person, die Google unter anderem dazu dienen, die Herkunft der Besucher und Klicks nachzuvollziehen und in der Folge Provisionsabrechnungen zu ermöglichen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Mittels des Cookies werden personenbezogene Informationen, beispielsweise die Zugriffszeit, der Ort, von welchem ein Zugriff ausging und die Häufigkeit der Besuche unserer Internetseite durch die betroffene Person, gespeichert. Bei jedem Besuch unserer Internetseiten werden diese personenbezogenen Daten, einschließlich der IP-Adresse des von der betroffenen Person genutzten Internetanschlusses, an Google in den Vereinigten Staaten von Amerika übertragen. Diese personenbezogenen Daten werden durch Google in den Vereinigten Staaten von Amerika gespeichert. Google gibt diese über das technische Verfahren erhobenen personenbezogenen Daten unter Umständen an Dritte weiter. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die betroffene Person kann die Setzung von Cookies durch unsere Internetseite, wie oben bereits dargestellt, jederzeit mittels einer entsprechenden Einstellung des genutzten Internetbrowsers verhindern und damit der Setzung von Cookies dauerhaft widersprechen. Eine solche Einstellung des genutzten Internetbrowsers würde auch verhindern, dass Google ein Cookie auf dem informationstechnologischen System der betroffenen Person setzt. Zudem kann ein von Google Analytics bereits gesetzter Cookie jederzeit über den Internetbrowser oder andere Softwareprogramme gelöscht werden. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Ferner besteht für die betroffene Person die Möglichkeit, einer Erfassung der durch Google Analytics erzeugten, auf eine Nutzung dieser Internetseite bezogenen Daten sowie der Verarbeitung dieser Daten durch Google zu widersprechen und eine solche zu verhindern. Hierzu muss die betroffene Person ein Browser-Add-On unter dem Link https://tools.google.com/dlpage/gaoptout herunterladen und installieren. Dieses Browser-Add-On teilt Google Analytics über JavaScript mit, dass keine Daten und Informationen zu den Besuchen von Internetseiten an Google Analytics übermittelt werden dürfen. Die Installation des Browser-Add-Ons wird von Google als Widerspruch gewertet. Wird das informationstechnologische System der betroffenen Person zu einem späteren Zeitpunkt gelöscht, formatiert oder neu installiert, muss durch die betroffene Person eine erneute Installation des Browser-Add-Ons erfolgen, um Google Analytics zu deaktivieren. Sofern das Browser-Add-On durch die betroffene Person oder einer anderen Person, die ihrem Machtbereich zuzurechnen ist, deinstalliert oder deaktiviert wird, besteht die Möglichkeit der Neuinstallation oder der erneuten Aktivierung des Browser-Add-Ons. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Weitere Informationen und die geltenden Datenschutzbestimmungen von Google können unter https://www.google.de/intl/de/policies/privacy/ und unter http://www.google.com/analytics/terms/de.htmlabgerufen werden. Google Analytics wird unter diesem Link https://www.google.com/intl/de_de/analytics/genauer erläutert. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 9. Datenschutzbestimmungen zu Einsatz und Verwendung von Google-AdWords </Typography>\r\n                            <Typography variant='body1' gutterBottom> Der für die Verarbeitung Verantwortliche hat auf dieser Internetseite Google AdWords integriert. Google AdWords ist ein Dienst zur Internetwerbung, der es Werbetreibenden gestattet, sowohl Anzeigen in den Suchmaschinenergebnissen von Google als auch im Google-Werbenetzwerk zu schalten. Google AdWords ermöglicht es einem Werbetreibenden, vorab bestimmte Schlüsselwörter festzulegen, mittels derer eine Anzeige in den Suchmaschinenergebnissen von Google ausschließlich dann angezeigt wird, wenn der Nutzer mit der Suchmaschine ein schlüsselwortrelevantes Suchergebnis abruft. Im Google-Werbenetzwerk werden die Anzeigen mittels eines automatischen Algorithmus und unter Beachtung der zuvor festgelegten Schlüsselwörter auf themenrelevanten Internetseiten verteilt. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Betreibergesellschaft der Dienste von Google AdWords ist die Google Inc., 1600 Amphitheatre Pkwy, Mountain View, CA 94043-1351, USA. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Der Zweck von Google AdWords ist die Bewerbung unserer Internetseite durch die Einblendung von interessenrelevanter Werbung auf den Internetseiten von Drittunternehmen und in den Suchmaschinenergebnissen der Suchmaschine Google und eine Einblendung von Fremdwerbung auf unserer Internetseite. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Gelangt eine betroffene Person über eine Google-Anzeige auf unsere Internetseite, wird auf dem informationstechnologischen System der betroffenen Person durch Google ein sogenannter Conversion-Cookie abgelegt. Was Cookies sind, wurde oben bereits erläutert. Ein Conversion-Cookie verliert nach dreißig Tagen seine Gültigkeit und dient nicht zur Identifikation der betroffenen Person. Über den Conversion-Cookie wird, sofern das Cookie noch nicht abgelaufen ist, nachvollzogen, ob bestimmte Unterseiten, beispielsweise der Warenkorb von einem Online-Shop-System, auf unserer Internetseite aufgerufen wurden. Durch den Conversion-Cookie können sowohl wir als auch Google nachvollziehen, ob eine betroffene Person, die über eine AdWords-Anzeige auf unsere Internetseite gelangt ist, einen Umsatz generierte, also einen Warenkauf vollzogen oder abgebrochen hat. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die durch die Nutzung des Conversion-Cookies erhobenen Daten und Informationen werden von Google verwendet, um Besuchsstatistiken für unsere Internetseite zu erstellen. Diese Besuchsstatistiken werden durch uns wiederum genutzt, um die Gesamtanzahl der Nutzer zu ermitteln, welche über AdWords-Anzeigen an uns vermittelt wurden, also um den Erfolg oder Misserfolg der jeweiligen AdWords-Anzeige zu ermitteln und um unsere AdWords-Anzeigen für die Zukunft zu optimieren. Weder unser Unternehmen noch andere Werbekunden von Google-AdWords erhalten Informationen von Google, mittels derer die betroffene Person identifiziert werden könnte. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Mittels des Conversion-Cookies werden personenbezogene Informationen, beispielsweise die durch die betroffene Person besuchten Internetseiten, gespeichert. Bei jedem Besuch unserer Internetseiten werden demnach personenbezogene Daten, einschließlich der IP-Adresse des von der betroffenen Person genutzten Internetanschlusses, an Google in den Vereinigten Staaten von Amerika übertragen. Diese personenbezogenen Daten werden durch Google in den Vereinigten Staaten von Amerika gespeichert. Google gibt diese über das technische Verfahren erhobenen personenbezogenen Daten unter Umständen an Dritte weiter. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die betroffene Person kann die Setzung von Cookies durch unsere Internetseite, wie oben bereits dargestellt, jederzeit mittels einer entsprechenden Einstellung des genutzten Internetbrowsers verhindern und damit der Setzung von Cookies dauerhaft widersprechen. Eine solche Einstellung des genutzten Internetbrowsers würde auch verhindern, dass Google einen Conversion-Cookie auf dem informationstechnologischen System der betroffenen Person setzt. Zudem kann ein von Google AdWords bereits gesetzter Cookie jederzeit über den Internetbrowser oder andere Softwareprogramme gelöscht werden. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Ferner besteht für die betroffene Person die Möglichkeit, der interessenbezogenen Werbung durch Google zu widersprechen. Hierzu muss die betroffene Person von jedem der von ihr genutzten Internetbrowser aus den Link www.google.de/settings/ads aufrufen und dort die gewünschten Einstellungen vornehmen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Weitere Informationen und die geltenden Datenschutzbestimmungen von Google können unter https://www.google.de/intl/de/policies/privacy/ abgerufen werden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 10. Rechtsgrundlage der Verarbeitung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Art. 6 I lit. a DS-GVO dient unserem Unternehmen als Rechtsgrundlage für Verarbeitungsvorgänge, bei denen wir eine Einwilligung für einen bestimmten Verarbeitungszweck einholen. Ist die Verarbeitung personenbezogener Daten zur Erfüllung eines Vertrags, dessen Vertragspartei die betroffene Person ist, erforderlich, wie dies beispielsweise bei Verarbeitungsvorgängen der Fall ist, die für eine Lieferung von Waren oder die Erbringung einer sonstigen Leistung oder Gegenleistung notwendig sind, so beruht die Verarbeitung auf Art. 6 I lit. b DS-GVO. Gleiches gilt für solche Verarbeitungsvorgänge die zur Durchführung vorvertraglicher Maßnahmen erforderlich sind, etwa in Fällen von Anfragen zur unseren Produkten oder Leistungen. Unterliegt unser Unternehmen einer rechtlichen Verpflichtung durch welche eine Verarbeitung von personenbezogenen Daten erforderlich wird, wie beispielsweise zur Erfüllung steuerlicher Pflichten, so basiert die Verarbeitung auf Art. 6 I lit. c DS-GVO. In seltenen Fällen könnte die Verarbeitung von personenbezogenen Daten erforderlich werden, um lebenswichtige Interessen der betroffenen Person oder einer anderen natürlichen Person zu schützen. Dies wäre beispielsweise der Fall, wenn ein Besucher in unserem Betrieb verletzt werden würde und daraufhin sein Name, sein Alter, seine Krankenkassendaten oder sonstige lebenswichtige Informationen an einen Arzt, ein Krankenhaus oder sonstige Dritte weitergegeben werden müssten. Dann würde die Verarbeitung auf Art. 6 I lit. d DS-GVO beruhen. Letztlich könnten Verarbeitungsvorgänge auf Art. 6 I lit. f DS-GVO beruhen. Auf dieser Rechtsgrundlage basieren Verarbeitungsvorgänge, die von keiner der vorgenannten Rechtsgrundlagen erfasst werden, wenn die Verarbeitung zur Wahrung eines berechtigten Interesses unseres Unternehmens oder eines Dritten erforderlich ist, sofern die Interessen, Grundrechte und Grundfreiheiten des Betroffenen nicht überwiegen. Solche Verarbeitungsvorgänge sind uns insbesondere deshalb gestattet, weil sie durch den Europäischen Gesetzgeber besonders erwähnt wurden. Er vertrat insoweit die Auffassung, dass ein berechtigtes Interesse anzunehmen sein könnte, wenn die betroffene Person ein Kunde des Verantwortlichen ist (Erwägungsgrund 47 Satz 2 DS-GVO). </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 11. Berechtigte Interessen an der Verarbeitung, die von dem Verantwortlichen oder einem Dritten verfolgt werden </Typography>\r\n                            <Typography variant='body1' gutterBottom> Basiert die Verarbeitung personenbezogener Daten auf Artikel 6 I lit. f DS-GVO ist unser berechtigtes Interesse die Durchführung unserer Geschäftstätigkeit zugunsten des Wohlergehens all unserer Mitarbeiter und unserer Anteilseigner. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 12. Dauer, für die die personenbezogenen Daten gespeichert werden </Typography>\r\n                            <Typography variant='body1' gutterBottom> Das Kriterium für die Dauer der Speicherung von personenbezogenen Daten ist die jeweilige gesetzliche Aufbewahrungsfrist. Nach Ablauf der Frist werden die entsprechenden Daten routinemäßig gelöscht, sofern sie nicht mehr zur Vertragserfüllung oder Vertragsanbahnung erforderlich sind. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 13. Gesetzliche oder vertragliche Vorschriften zur Bereitstellung der personenbezogenen Daten; Erforderlichkeit für den Vertragsabschluss; Verpflichtung der betroffenen Person, die personenbezogenen Daten bereitzustellen; mögliche Folgen der Nichtbereitstellung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Wir klären Sie darüber auf, dass die Bereitstellung personenbezogener Daten zum Teil gesetzlich vorgeschrieben ist (z.B. Steuervorschriften) oder sich auch aus vertraglichen Regelungen (z.B. Angaben zum Vertragspartner) ergeben kann. Mitunter kann es zu einem Vertragsschluss erforderlich sein, dass eine betroffene Person uns personenbezogene Daten zur Verfügung stellt, die in der Folge durch uns verarbeitet werden müssen. Die betroffene Person ist beispielsweise verpflichtet uns personenbezogene Daten bereitzustellen, wenn unser Unternehmen mit ihr einen Vertrag abschließt. Eine Nichtbereitstellung der personenbezogenen Daten hätte zur Folge, dass der Vertrag mit dem Betroffenen nicht geschlossen werden könnte. Vor einer Bereitstellung personenbezogener Daten durch den Betroffenen muss sich der Betroffene an einen unserer Mitarbeiter wenden. Unser Mitarbeiter klärt den Betroffenen einzelfallbezogen darüber auf, ob die Bereitstellung der personenbezogenen Daten gesetzlich oder vertraglich vorgeschrieben oder für den Vertragsabschluss erforderlich ist, ob eine Verpflichtung besteht, die personenbezogenen Daten bereitzustellen, und welche Folgen die Nichtbereitstellung der personenbezogenen Daten hätte. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 14. Bestehen einer automatisierten Entscheidungsfindung </Typography>\r\n                            <Typography variant='body1' gutterBottom> Als verantwortungsbewusstes Unternehmen verzichten wir auf eine automatische Entscheidungsfindung oder ein Profiling </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' gutterBottom> 16. Was geschieht bei Nutzung unseres Kontaktfeldes (Jetzt Ihr Auskunft online beantragen) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Wenn Sie über unser Kontaktfeld mit uns kommunizieren, erheben wir dabei die folgenden Daten: Anrede, Vorname, Nachname, Telefonnummer, E-Mail-Adresse, Adresse, Status Einwilligungs- und sonstige Erklärungen, wie aus dem Kontaktformular ersichtlich.  </Typography>\r\n                            <Typography variant='body1' gutterBottom> Die Gründe der Kontaktaufnahme kennen nur Sie; die Reaktion hierauf beschreibt sogleich den Zweck der Verarbeitung. Soweit es um ein konkretes Schuldverhältnis (etwa in Form der Selbstauskunft), sei es im Zusammenhang mit der Anbahnung, Durchführung oder Beendigung, geht, ist die Rechtsgrundlage für die Verarbeitung Artikel 6 Absatz 1 lit. b DSGVO. In diesem Fall speichern wir die Daten bis zum Ende der gesetzlichen Aufbewahrungsfrist.  </Typography>\r\n                            <Typography variant='body1' gutterBottom> In allen anderen Fällen ist die Rechtsgrundlage Artikel 6 Absatz 1 Satz 1 lit. f DSGVO, wonach die Verarbeitung personenbezogener Daten auch ohne Einwilligung des Betroffenen möglich ist, wenn die Verarbeitung zur Wahrung der berechtigten Interessen des Verantwortlichen oder eines Dritten erforderlich ist, sofern nicht die Interessen oder Grundrechte und Grundfreiheiten der betroffenen Person, die den Schutz personenbezogener Daten erfordern, überwiegen, insbesondere dann, wenn es sich bei der betroffenen Person um ein Kind handelt. Die Kommunikation außerhalb eines Schuldverhältnisses ist in unserem beiderseitigen Interesse. Wir speichern Ihre Daten, bis der aus dem berechtigten Interesse herrührende Zweck erfüllt ist.  </Typography>\r\n                            <Typography variant='body1' gutterBottom> Wie arbeiten wir mit den Auskunfteien zusammen? </Typography>\r\n                            <Typography variant='body1' gutterBottom> Als Onlinedienstleister erfüllen wir unsere vertraglichen Pflichten dadurch, dass wir Ihr Auskunftsergehen an die entsprechende Auskunftei weitertragen, damit Sie eine Selbstauskunft erhalten. Das erfordert, dass wir Ihre personenbezogenen Daten, die wir im Rahmen unseres Internetauftritts erhoben haben, dorthin übermitteln. Rechtsgrundlage hierfür ist Artikel 6 Absatz 1 Satz 1 lit. b DSGVO. Rechtsgrundlage Artikel 6 Absatz 1 Satz 1 lit. f DSGVO, wonach die Verarbeitung personenbezogener Daten auch ohne Einwilligung des Betroffenen möglich ist, wenn die Verarbeitung zur Wahrung der berechtigten Interessen des Verantwortlichen oder eines Dritten erforderlich ist, sofern nicht die Interessen oder Grundrechte und Grundfreiheiten der betroffenen Person, die den Schutz personenbezogener Daten erfordern, überwiegen, insbesondere dann, wenn es sich bei der betroffenen Person um ein Kind handelt. Rechtsgrundlage hierfür ist allein Ihre Einwilligung gemäß Artikel 6 Absatz 1 Satz 1 lit. a DSGVO. Der Einwilligungstext lautet: „Ich erkläre, die Datenschutzbestimmungen gelesen zu haben und bin damit einverstanden.“ Diese Einwilligung kann jederzeit und mit Wirkung für die Zukunft widerrufen werden; dies durch formlose Erklärung an einen der o.g. Kontaktkanäle. </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DataPrivacyScreen;","import React from 'react';\r\nimport {Box, Container, Grid, makeStyles, Paper, Typography} from '@material-ui/core';\r\n\r\nimport Meta from '../components/Meta';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    boxContainer: {\r\n        position: 'relative',\r\n        ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n        padding: '24px 10%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          padding: '24px 5%',\r\n        },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n    bold: {\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\nconst RecallScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n            <Box className={classes.boxContainer}>\r\n                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='subtitle1' gutterBottom> Stand: November / 2021 </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Sie haben das Recht, binnen 14 Tagen ohne Angaben von Gründen den Vertrag zu widerrufen. Die Widerrufsfrist beginnt mit dem Tag des Vertragsschlusses. Das Widerrufsrecht erlischt § 356 Absatz 4 BGB bereits vor Ablauf von 14 Tagen, wenn Sie dem sofortigen Beginn mit der Dienstleistung zugestimmt haben, mit der Ausführung erst nach dieser Zustimmung begonnen wurde und die Dienstleistung vollständig erbracht worden ist. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Um Ihr Widerrufsrecht auszuüben, müssen Sie uns (DDV Deutscher Dienstleistungsverlag UG (Haftungsbeschränkt) Fellbacher Str. 23 13469 Berlin , eMail: info@nachsendebeauftragung.de) mittels einer eindeutigen Erklärung (z. B. ein mit der Post versandter Brief, Telefax oder E-Mail) über Ihren Entschluss, diesen Vertrag zu widerrufen, informieren. Sie können dafür das beigefügte Muster-Widerrufsformular verwenden, das jedoch nicht vorgeschrieben ist. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Zur Wahrung der Widerrufsfrist reicht es aus, dass Sie die Mitteilung über die Ausübung des Widerrufsrechts vor Ablauf der Widerrufsfrist absenden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Folgen des Widerrufs </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Wenn Sie diesen Vertrag widerrufen, haben wir Ihnen alle Zahlungen, die wir von Ihnen erhalten haben, einschließlich der Lieferkosten (mit Ausnahme der zusätzlichen Kosten, die sich daraus ergeben, dass Sie eine andere Art der Lieferung als die von uns angebotene, günstigste Standardlieferung gewählt haben), unverzüglich und spätestens binnen vierzehn Tagen ab dem Tag zurückzuzahlen, an dem die Mitteilung über Ihren Widerruf dieses Vertrags bei uns eingegangen ist. Für diese Rückzahlung verwenden wir dasselbe Zahlungsmittel, das Sie bei der ursprünglichen Transaktion eingesetzt haben, es sei denn, mit Ihnen wurde ausdrücklich etwas anderes vereinbart; in keinem Fall werden Ihnen wegen dieser Rückzahlung Entgelte berechnet. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Haben Sie verlangt, dass die Dienstleistungen während der Widerrufsfrist beginnen sollen, so haben Sie uns einen angemessenen Betrag zu zahlen, der dem Anteil der bis zu dem Zeitpunkt, zu dem Sie uns von der Ausübung des Widerrufsrechts hinsichtlich dieses Vertrags unterrichten, bereits erbrachten Dienstleistungen im Vergleich zum Gesamtumfang der im Vertrag vorgesehenen Dienstleistungen entspricht. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Muster Widerrufsformular </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> (Wenn Sie den Vertrag widerrufen wollen, dann füllen Sie bitte dieses Formular aus und senden Sie es zurück.) </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> An: </Typography>\r\n                            <Typography variant='body1' gutterBottom> DDV Deutscher Dienstleistungsverlag UG (Haftungsbeschränkt) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Fellbacher Str. 23 </Typography>\r\n                            <Typography variant='body1' gutterBottom> 13469 Berlin </Typography>\r\n                            <Typography variant='body1' gutterBottom> info@nachsendebeauftragung.de </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Hiermit widerrufe(n) ich/wir (*) den von mir/uns (*) abgeschlossenen Vertrag über den Kauf der folgenden Waren (*)/die Erbringung der folgenden Dienstleistung (*) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Bestellt am (*)/erhalten am (*): ___.___._______ </Typography>\r\n                            <Typography variant='body1' gutterBottom> Name des/der Verbraucher(s): ________________ _________________ </Typography>\r\n                            <Typography variant='body1' gutterBottom> Anschrift des/der Verbraucher(s): ______________________________________ </Typography>\r\n                            <Typography variant='body1' gutterBottom> Unterschrift des/der Verbraucher(s) (nur bei Mitteilung auf Papier): _______________________ </Typography>\r\n                            <Typography variant='body1' gutterBottom> Datum: ____.____.________ </Typography>\r\n                            <Typography variant='body1' gutterBottom> (*) Unzutreffendes streichen. </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RecallScreen;","import React from 'react';\r\nimport {Box, Container, Grid, Link, makeStyles, Paper, Typography} from '@material-ui/core';\r\n\r\nimport Meta from '../components/Meta';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    boxContainer: {\r\n        position: 'relative',\r\n        ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n        padding: '24px 10%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          padding: '24px 5%',\r\n        },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n    bold: {\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\nconst AgbScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n            <Box className={classes.boxContainer}>\r\n                                <Paper elevation={0} className={classes.content} square>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='subtitle1' gutterBottom> Allgemeine Geschäftsbedingungen, Honorarvereinbarung und Verbraucherinformationen über Online-Dienstleistungsverträge, die über Nachsendungen-online.de zwischen DDV Deutscher Dienstleistungsverlag UG (Haftungsbeschränkt) Fellbacher Str. 23 13469 Berlin – im Folgenden „Auftragnehmer“ – und dem Auftraggeber – im Folgenden „Auftraggeber“ – geschlossen werden. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' gutterBottom> §1 Geltungsbereich und allgemeine Hinweise </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 1.1 Für die Geschäftsbeziehung zwischen dem Auftragnehmer und dem Auftraggeber gelten ausschließlich die nachfolgenden AGB. Die Dienstleistungen werden ausschließlich nach Maßgabe dieser Allgemeinen Geschäftsbedingungen erbracht. Abweichende Geschäftsbedingungen des Auftraggebers gelten auch dann nicht, wenn DDV Deutscher Dienstleistungsverlag UG (Haftungsbeschränkt) Fellbacher Str. 23 13469 Berlin ihnen nicht ausdrücklich widersprochen hat. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 1.2 Der Auftraggeber ist Verbraucher, soweit er den Vertrag zu Zwecken abschließt, die überwiegend weder seiner gewerblichen noch seiner selbständigen beruflichen Tätigkeit zugerechnet werden können. Unternehmer ist jede natürliche oder juristische Person oder eine Personengesellschaft, die bei Abschluss eines Rechtsgeschäfts in Ausübung ihrer gewerblichen oder selbständigen beruflichen Tätigkeit handelt. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' gutterBottom> §2 Geltungsbereich und allgemeine Hinweise </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 2.1 Gegenstand des Vertrags ist das Beantragen eines Nachsendeauftrag und hier ausschließlich die Antragstellung durch den Auftragnehmer im Namen des Auftraggebers einen Nachsende-Service der Deutschen Post AG, optional auch bei der PIN AG, City Mail, Post Modern, Arriva, Brief und Mehr, BWPOST, CITIPOST Hannover, DAZ Brief- und Kurierdienst, DEBEX, Kurierfox, LMF, Nordkurier oder PIN MAIL Woltersdorf (Liste der Briefdienstleister). Die ODS Online Digital Service UG (Haftungsbeschränkt) übernimmt damit lediglich die Vermittlung für den Auftraggeber zu dessen Angeboten. Diese Leistung erfolgt ausschließlich auf elektronischem Wege. Der Auftragnehmer ist keine Rechtsberatung oder Finanzdienstleistung schuldig und ist hierzu auch nicht berechtigt. Wir selbst ergingen keine Postdienstleistungen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 2.2 Der Auftraggeber ist verpflichtet, alle bei der Anmeldung als Pflichtfelder gekennzeichneten Felder vollständig und korrekt ausfüllen. Falsche Angaben oder ein Alias sind nicht gestattet. Eine nachträgliche Korrektur oder Ergänzung der Angaben durch den Auftraggeber ist nicht möglich. Die E-Mail Adresse ist für den Elektronischen Datenaustausch nötig um z.b. die Rechnung zuzustellen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' gutterBottom> §3 Vertragsschluss </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 3.1 Der Vertrag kommt zustande mit: </Typography>\r\n                            <Typography variant='body1' gutterBottom> DDV Deutscher Dienstleistungsverlag UG (Haftungsbeschränkt)  </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 3.2 Die grundsätzlichen Eigenschaften der Dienstleistungen ergeben sich aus der vom Auftragnehmer eingestellten Beschreibung. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 3.3 Die Produktbeschreibung der Leistung durch den Auftragnehmer stellt nur ein unverbindliches Angebot an den Auftraggeber dar, dem Auftragnehmer ein entsprechendes Vertragsangebot zu unterbreiten. Anschließend bestätigt der Auftragnehmer dem Auftraggeber die Annahme und Ausführung des Auftrags per E-Mail. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 3.4 Die Beauftragung über die Website des Auftragnehmers funktioniert wie folgt: </Typography>\r\n                            <Typography variant='body1' gutterBottom> Personenbezogene Daten: Der Auftraggeber trägt die zur Ausführung des Auftrags benötigten personenbezogenen Daten in das Bestellformular ein. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Auftrag bestätigen:  Durch Setzen eines Häkchens in die entsprechenden Kästchen bestätigt der Auftraggeber die Kenntnisnahme und das Einverständnis mit der Datenschutzerklärung sowie mit diesen AGB und der Widerrufsbelehrung. Durch Anklicken der Schaltfläche „IN DEN WARENKORB“ und der anschließenden Zahlung, erteilt der Auftraggeber seinen Auftrag und gibt ein verbindliches Angebot an den Auftragnehmer ab. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Nach Absenden des Auftrags: Der Auftragnehmer schickt daraufhin dem Auftraggeber eine Auftragsbestätigung per E-Mail zu, durch welche das Angebot des Auftraggebers auf Vertragsschluss angenommen wird. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' gutterBottom> §4 Vergütungsvereinbarung: Zahlungs- und Leistungsbedingung, Preise </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 4.1 Die Zahlung ist wie folgt zu leisten: Der Auftraggeber zahlt online über unseren Zahlungsanbieter. Hierfür ist die E-Mail Adresse erforderlich um die Rechnung zuzustellen.  </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 4.2 Die Bearbeitung der Anfrage dauert 7 bis 21 Tage. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 4.3  Vergütungsvereinbarung: Es entstehen Kosten für die Dienstleistung, auf die im Rahmen der Bestellung explizit hingewiesen wird und die Bestandteil des Vertragsschlusses sind. Der Auftraggeber ist verpflichtet, das jeweils vertraglich vereinbarte Entgelt zu bezahlen. Für den einzelnen Vertrag ist jedoch ausschließlich der im elektronischen Bestellung und der elektronischen Auftragsbestätigung genannte Konditionen maßgeblich. Der Auftraggeber erhält eine Rechnung mit ausgewiesener Mehrwertsteuer. Weitere Kosten fallen nicht an. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 4.4 Für Schäden durch säumige Zahlung oder Rücklastschriften und die uns dafür entstehenden Kosten und Aufwand behalten wir uns vor, dem Auftraggeber die aufgetretenen Kosten in Rechnung zu stellen, bzw. die Forderung anwaltlich und/oder durch ein Inkassounternehmen geltend zu machen. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' gutterBottom> §5 Gewährleistung, Haftung </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 5.1 Der Auftragnehmer übermittelt lediglich die vom Antragsteller im Rahmen des Bestellvorgangs gemachten Angaben an die Deutsche Post AG optional auch bei der PIN AG, City Mail, Post Modern, Arriva, Brief und Meh, BWPOST, CITIPOST Hannover, DAZ Brief- und Kurierdienst, DEBEX, Kurierfox, LMF, Nordkurier oder PIN MAIL Woltersdorf zum Zwecke des beantragen eines Nachsende-Service, der Deutschen Post AG und optional auch bei der PIN AG, City Mail, Post Modern, Arriva, Brief und Mehr, BWPOST, CITIPOST Hannover, DAZ Brief- und Kurierdienst, DEBEX, Kurierfox, LMF, Nordkurier oder PIN MAIL Woltersdorf. Eine Beratungsleistung ist nicht geschuldet. Der Auftragnehmer übernimmt keine Prüfung der Angaben des Auftraggebers auf Richtigkeit oder Plausibilität. Für eine fehlerhafte oder ausbleibende Service der Deutschen Post AG und oder optional auch bei der PIN AG, City Mail, Post Modern, Arriva, Brief und Mehr, BWPOST, CITIPOST Hannover, DAZ Brief- und Kurierdienst, DEBEX, Kurierfox, LMF, Nordkurier oder PIN MAIL Woltersdorf (Liste der Briefdienstleister), ist der Auftragnehmer nicht verantwortlich. Soweit der Nachsendeauftrag aufgrund fehlender oder fehlerhafter Angaben des Auftraggebers unmöglich ist, trifft den Auftragnehmer hierfür keine Verantwortung. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 5.2 Im Übrigen richtet sich die Haftung des Auftragnehmers nach den gesetzlichen Vorschriften. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' gutterBottom> §6 Vertragstext </Typography>\r\n                            <Typography variant='body1' gutterBottom> Der Vertragstext wird auf den internen Systemen des Auftragnehmers gespeichert. Die Allgemeinen Geschäftsbedingungen kann der Auftraggeber jederzeit auf der Webseite einsehen. Die Bestelldaten und die AGB werden dem Auftraggeber per E-Mail zugesendet. Nach Abschluss der Bestellung sind die Bestelldaten aus Sicherheitsgründen nicht mehr zugänglich. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h4' gutterBottom> §7 Schlussbestimmungen </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 7.1 Die Vertragssprache ist deutsch. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 7.2 Auf Verträge zwischen dem Auftragnehmer und den Auftraggeber findet das Recht der Bundesrepublik Deutschland unter Ausschluss der Gesetze über den internationalen Kauf beweglicher Waren Anwendung. Diese Rechtswahl gilt bei Verbrauchern nur, soweit der durch zwingende Bestimmungen des Rechts des Staates des gewöhnlichen Aufenthaltes des Verbrauchers gewährte Schutz dem Auftraggeber nicht entzogen wird. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> 7.3 Sofern es sich beim Auftraggeber um einen Kaufmann, eine juristische Person des öffentlichen Rechts oder um ein öffentlich-rechtliches Sondervermögen handelt, ist Gerichtsstand für alle Streitigkeiten aus Vertragsverhältnissen zwischen dem Auftragnehmer und dem Auftraggeber Berlin. Dies gilt auch, sofern der Auftraggeber keinen allgemeinen Gerichtsstand in Deutschland oder der EU hat, oder sein Wohnsitz oder sein gewöhnlicher Aufenthalt im Zeitpunkt der Klageerhebung nicht bekannt ist. </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> Informationen gemäß Art. 246 a § 1 EGBGB (Fernabsatzvertrag) und § 246 c EGBGB </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='body1' gutterBottom> (Verträge im elektronischen Geschäftsverkehr) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Bei Fernabsatzverträgen über Dienstleistungen müssen wir Ihnen bestimmte Informationen zukommen lassen. Dem kommen wir hiermit nach: </Typography>\r\n                            <Typography variant='body1' gutterBottom> Wesentliche Merkmale der Dienstleistung: Prüfung und Beantragung eines Nachsendeauftrags bei der Deutschen Post und oder optional auch bei der PIN AG, City Mail, Post Modern, Arriva, Brief und Mehr, BWPOST, CITIPOST Hannover, DAZ Brief- und Kurierdienst, DEBEX, Kurierfox, LMF, Nordkurier oder PIN MAIL Woltersdorf. Die Anforderung erfolgt auf digitalem Weg. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Identität: DDV Deutscher Dienstleistungsverlag UG (Haftungsbeschränkt) </Typography>\r\n                            <Typography variant='body1' gutterBottom> Ladungsfähige Anschrift und Niederlassungsort: Fellbacher Str. 23 13469 Berlin V </Typography>\r\n                            <Typography variant='body1' gutterBottom> ertretungsberechtigt: Sascha Plaster </Typography>\r\n                            <Typography variant='body1' gutterBottom> Gesamtpreis der Dienstleistung: Der Preis unserer Dienstleistung wird im Rahmen des Bestellformulars genannt und ist Bestandteil des Vertrags. Weitere Kosten entstehen nicht. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Zahlungs-und Leistungsbedingungen, Termin, bis zu dem die Dienstleistung erbracht werden muss: Die Zahlung erfolgt unmittelbar online im Bestellprozess. Ein Termin für die Erbringung der Leistung wird nicht vereinbart. Der Unternehmer erbringt seine Leistung i.d.R. sofort. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Zusätzlich anfallende Kosten: Weitere Kosten fallen nicht an. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Zustandekommen des Vertrags: Der Vertrag kommt zustande, wenn Sie auf unserer Webseite die Eingabe Maske ausfüllen und online zahlen. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Mindestlaufzeit: Der Vertrag besitzt keine Mindestlaufzeit. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Laufzeit des Vertrags, Mindestdauer: Der Vertrag kann von beiden Seiten jederzeit gekündigt werden. Eine Mindestdauer ist nicht vereinbart. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Versandkosten: Die Übermittlung der Daten erfolgt auf dem Elektronischen weg und daher entstehen Kosten, des jeweiligen Internetanbieter des Auftraggebers zu Übermittlung der jeweiligen Datenmenge.  </Typography>\r\n                            <Typography variant='body1' gutterBottom> Widerrufsmöglichkeit: Dem Verbraucher steht ein 14 tägiges Widerrufsrecht zu, über das auf der Webseite am unteren Seitenrand unter dem Stichwort „Widerrufsbelehrung“ hingewiesen wird. Dazu kann, muss aber nicht, das abgedruckte Muster-Widerrufsformular verwendet werden. Dieses Widerrufsrecht besteht zu Ihren Gunsten. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Haben Sie verlangt, dass die Dienstleistungen während der Widerrufsfrist beginnen soll, so haben Sie uns einen angemessenen Betrag zu zahlen, der dem Anteil der bis zu dem Zeitpunkt, zu dem Sie uns von der Ausübung des Widerrufsrechts hinsichtlich dieses Vertrags unterrichten, bereits erbrachten Dienstleistungen im Vergleich zum Gesamtumfang der im Vertrag vorgesehenen Dienstleistungen entspricht. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Kundendienst sowie geltende Gewährleistungs- und Garantiebedingungen: Für die Haftung gelten die gesetzlichen Vorschriften. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Vertragssprache: Es steht ausschließlich die Deutsche Sprache zum Vertragsschluss zur Verfügung. </Typography>\r\n                            <Typography variant='body1' gutterBottom> Ende der Allgemeinen Geschäftsbedingungen </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}></Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AgbScreen;","import React, {useEffect, useRef} from 'react';\r\nimport {PayPalScriptProvider, PayPalButtons, usePayPalScriptReducer} from '@paypal/react-paypal-js';\r\nimport Loader from \"../Loader\";\r\nimport {ORDER_INFO} from \"../../constants/key.constant\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\n\r\nconst PaypalButtonsPanel = () => {\r\n    const history = useHistory();\r\n    const [{ isPending }] = usePayPalScriptReducer();\r\n    let localData = localStorage.getItem(ORDER_INFO);\r\n    if (!localData) {\r\n        console.log('local data error');\r\n    } else {\r\n        localData = JSON.parse(localData);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { isPending && <Loader /> }\r\n            <PayPalButtons\r\n                createOrder={(data, actions) => {\r\n                    // Create Invoice\r\n                    // Create Order\r\n                    // return actions.order.create({\r\n                    //     purchase_units: [\r\n                    //         {\r\n                    //             amount: {\r\n                    //                 value: \"1.99\",\r\n                    //             },\r\n                    //         },\r\n                    //     ],\r\n                    // });\r\n                    console.log('request ', localData);\r\n                    return axios.post(\"/api/create-order\", \r\n                        JSON.stringify(localData),\r\n                        {\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                        }\r\n                    )\r\n                      .then(({data}) => { console.log(data); return data; })\r\n                      .then((order) => { console.log('order :: ', order); return order.id; });\r\n                }}\r\n                onApprove={(data, actions) => {\r\n                    return actions.order.capture().then((details) => {\r\n                        const name = details.payer.name.given_name;\r\n                        // Add Order to DB\r\n                        // Finish Invoice\r\n                        // Send Invoice Email\r\n                        console.log('order detail body : ', details);\r\n                        // return history.push('/payment/paypal/' + details['purchase_units'][0]['invoice_id']);\r\n                        return history.push('/payment/paypal/' + details['id']);\r\n                    });\r\n                }}\r\n                onCancel={() => {\r\n                    console.log('Paypal cancelled');\r\n                }}\r\n                onError={(err) => {\r\n                    console.log('Paypal checkout onError : ', err);\r\n                }}\r\n                onClick={(data, actions) => {\r\n                    const hasAlreadyBought = false;\r\n                    if (hasAlreadyBought) {\r\n                        console.log('Already bought');\r\n                    } else {\r\n                        return actions.resolve();\r\n                    }\r\n                }}\r\n                style={{\r\n                    color: 'silver',\r\n                    layout: 'vertical',\r\n                    height: 48,\r\n                    tagline: false,\r\n                    shape: 'pill'\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function CheckoutForm({ client_id, client_token }) {\r\n    const initialOptions = {\r\n        \"client-id\": client_id,\r\n        currency: \"EUR\",\r\n        \"data-client-token\": client_token,\r\n    };\r\n\r\n    return (\r\n        <PayPalScriptProvider options={initialOptions}>\r\n            <PaypalButtonsPanel />\r\n        </PayPalScriptProvider>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport {Box, Container, Grid, makeStyles, Paper, Typography} from '@material-ui/core';\r\nimport Meta from '../components/Meta';\r\nimport CheckoutForm from \"../components/Paypal/CheckoutForm\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ORDER_INFO} from \"../constants/key.constant\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadcrumbsContainer: {\r\n      ...theme.mixins.customize.breadcrumbs,\r\n    },\r\n    boxContainer: {\r\n        position: 'relative',\r\n        ...theme.mixins.customize.flexMixin('center', 'center', 'column'),\r\n        padding: '24px 10%',\r\n        height: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          padding: '24px 5%',\r\n        },\r\n    },\r\n    content: {\r\n      padding: 24,\r\n      boxShadow: '0 10px 31px 0 rgba(0,0,0,0.05)',\r\n    },\r\n}));\r\n\r\nconst PaypalScreen = ({ history }) => {\r\n    const classes = useStyles();\r\n    const { loading, error, isSuccess, paypalClientData } = useSelector((state) => state.paypalClient);\r\n\r\n    let localData = localStorage.getItem(ORDER_INFO);\r\n    if (!localData) {\r\n        history.push('/');\r\n    } else {\r\n        localData = JSON.parse(localData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isSuccess && paypalClientData) {\r\n            console.log('payload : ', paypalClientData);\r\n        }\r\n    }, [\r\n        isSuccess, paypalClientData\r\n    ]);\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Meta title='mein-nachsendeservice.de - Ihr Nachsendeservice aus Deutschland. Wählen Sie bis zu 16 Versanddienstleister aus' />\r\n            <Grid container className={classes.breadcrumbsContainer}></Grid>\r\n            <Box className={classes.boxContainer}>\r\n                { loading &&\r\n                    <>\r\n                        <Loader />\r\n                        <Typography variant='h6'>Laden von Zahlungsinformationen...</Typography>\r\n                    </>\r\n                }\r\n                { paypalClientData && paypalClientData.client_id &&\r\n                    <Paper elevation={0} className={classes.content} square>\r\n                        <Grid container spacing={8}>\r\n                            <Grid item xs={12} style={{minWidth: 512}}>\r\n                                <CheckoutForm client_id={paypalClientData.client_id} client_token={paypalClientData.client_token} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PaypalScreen;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport LandingScreen from './screens/LandingScreen';\nimport ReceiverScreen from './screens/ReceiverScreen';\n\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport AddressScreen from './screens/AddressScreen';\nimport SummaryScreen from './screens/SummaryScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PaymentSuccessScreen from \"./screens/PaymentSuccessScreen\";\nimport CheckoutScreen from \"./screens/CheckoutScreen\";\nimport ImprintScreen from \"./screens/ImprintScreen\";\nimport DataPrivacyScreen from \"./screens/DataPrivacyScreen\";\nimport RecallScreen from \"./screens/RecallScreen\";\nimport AgbScreen from \"./screens/AgbScreen\";\nimport ScrollToTop from \"react-scroll-to-top\";\nimport {COLOR_PRIMARY_DARK} from \"./constants/color.constant\";\nimport PaypalScreen from \"./screens/PaypalScreen\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route>\n                    <ScrollToTop smooth color={COLOR_PRIMARY_DARK} style={{ right: 24, bottom: 24 }}/>\n                    <Header />\n                    <main className='main'>\n                        <Route path='/' component={LandingScreen} exact />\n                        <Route path='/receiver' component={ReceiverScreen} />\n                        <Route path='/address' component={AddressScreen} />\n                        <Route path='/summary' component={SummaryScreen} />\n                        <Route path='/payment' component={PaymentScreen} exact />\n                        <Route path='/checkout' component={CheckoutScreen} />\n                        <Route path='/checkout-paypal' component={PaypalScreen} />\n                        <Route path='/payment/:service/:invoice' component={PaymentSuccessScreen} />\n                        <Route path='/imprint' component={ImprintScreen} />\n                        <Route path='/data-privacy' component={DataPrivacyScreen} />\n                        <Route path='/agb' component={AgbScreen} />\n                        <Route path='/recall' component={RecallScreen} />\n                    </main>\n                    <Footer />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {createOrderReducer, createPaymentReducer, initPaypalReducer, invoiceReducer} from './reducers/order.reducer'\r\n\r\nconst reducers = combineReducers({\r\n    payment: createPaymentReducer,\r\n    order: createOrderReducer,\r\n    invoice: invoiceReducer,\r\n    paypalClient: initPaypalReducer,\r\n});\r\n\r\nconst initialState = {\r\n    payment: {},\r\n    order: {},\r\n    invoice: {},\r\n    paypalClient: {},\r\n};\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;","import {\r\n    CREATE_PAYMENT_FAIL,\r\n    CREATE_PAYMENT_REQUEST,\r\n    CREATE_PAYMENT_RESET,\r\n    CREATE_PAYMENT_SUCCESS, INIT_PAYPAL_FAIL, INIT_PAYPAL_REQUEST, INIT_PAYPAL_RESET, INIT_PAYPAL_SUCCESS, INVOICE_FAIL,\r\n    INVOICE_REQUEST, INVOICE_RESET, INVOICE_SUCCESS,\r\n    ORDER_PLACE_FAIL,\r\n    ORDER_PLACE_REQUEST,\r\n    ORDER_PLACE_RESET,\r\n    ORDER_PLACE_SUCCESS\r\n} from '../constants/order.constant';\r\n\r\nexport const createPaymentReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_PAYMENT_REQUEST:\r\n            return { loading: true };\r\n        case CREATE_PAYMENT_SUCCESS:\r\n            return { loading: false, isSuccess: true, paymentSession: action.payload };\r\n        case CREATE_PAYMENT_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case CREATE_PAYMENT_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const createOrderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PLACE_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_PLACE_SUCCESS:\r\n            return { loading: false, isSuccess: true, orderData: action.payload };\r\n        case ORDER_PLACE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case ORDER_PLACE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const invoiceReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INVOICE_REQUEST:\r\n            return {loading: true};\r\n        case INVOICE_SUCCESS:\r\n            return {loading: false, isSuccess: true, invoiceData: action.payload};\r\n        case INVOICE_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case INVOICE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initPaypalReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_PAYPAL_REQUEST:\r\n            return {loading: true};\r\n        case INIT_PAYPAL_SUCCESS:\r\n            return {loading: false, isSuccess: true, paypalClientData: action.payload};\r\n        case INIT_PAYPAL_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case INIT_PAYPAL_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './themes/theme';\nimport './assets/scss/style.scss';\n\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <App />\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}